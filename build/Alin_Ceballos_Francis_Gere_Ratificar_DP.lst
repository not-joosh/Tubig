

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Sat May 25 00:03:14 2024

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     	;# 
    42  0001                     	;# 
    43  0002                     	;# 
    44  0003                     	;# 
    45  0004                     	;# 
    46  0005                     	;# 
    47  0006                     	;# 
    48  0007                     	;# 
    49  0008                     	;# 
    50  0009                     	;# 
    51  000A                     	;# 
    52  000B                     	;# 
    53  000C                     	;# 
    54  000D                     	;# 
    55  000E                     	;# 
    56  000E                     	;# 
    57  000F                     	;# 
    58  0010                     	;# 
    59  0011                     	;# 
    60  0012                     	;# 
    61  0013                     	;# 
    62  0014                     	;# 
    63  0015                     	;# 
    64  0015                     	;# 
    65  0016                     	;# 
    66  0017                     	;# 
    67  0018                     	;# 
    68  0019                     	;# 
    69  001A                     	;# 
    70  001B                     	;# 
    71  001B                     	;# 
    72  001C                     	;# 
    73  001D                     	;# 
    74  001E                     	;# 
    75  001F                     	;# 
    76  0081                     	;# 
    77  0085                     	;# 
    78  0086                     	;# 
    79  0087                     	;# 
    80  0088                     	;# 
    81  0089                     	;# 
    82  008C                     	;# 
    83  008D                     	;# 
    84  008E                     	;# 
    85  0091                     	;# 
    86  0092                     	;# 
    87  0093                     	;# 
    88  0094                     	;# 
    89  0098                     	;# 
    90  0099                     	;# 
    91  009C                     	;# 
    92  009D                     	;# 
    93  009E                     	;# 
    94  009F                     	;# 
    95  010C                     	;# 
    96  010D                     	;# 
    97  010E                     	;# 
    98  010F                     	;# 
    99  018C                     	;# 
   100  018D                     	;# 
   101                           
   102                           	psect	strings
   103  0719                     __pstrings:	
   104  0719                     stringtab:	
   105  0719                     __stringtab:	
   106                           
   107                           ;	String table - string pointers are 1 byte each
   108  0719  1BFF               	btfsc	btemp+1,7
   109  071A  2F23               	ljmp	stringcode
   110  071B  1383               	bcf	3,7
   111  071C  187F               	btfsc	btemp+1,0
   112  071D  1783               	bsf	3,7
   113  071E  0800               	movf	0,w
   114  071F  0A84               	incf	4,f
   115  0720  1903               	skipnz
   116  0721  0AFF               	incf	btemp+1,f
   117  0722  0008               	return
   118  0723                     stringcode:	
   119  0723                     stringdir:	
   120  0723  3007               	movlw	high stringdir
   121  0724  008A               	movwf	10
   122  0725  0804               	movf	4,w
   123  0726  0A84               	incf	4,f
   124  0727  0782               	addwf	2,f
   125  0728                     __stringbase:	
   126  0728  3400               	retlw	0
   127  0729                     __end_of__stringtab:	
   128  0729                     _dpowers:	
   129  0729  3401               	retlw	1
   130  072A  3400               	retlw	0
   131  072B  340A               	retlw	10
   132  072C  3400               	retlw	0
   133  072D  3464               	retlw	100
   134  072E  3400               	retlw	0
   135  072F  34E8               	retlw	232
   136  0730  3403               	retlw	3
   137  0731  3410               	retlw	16
   138  0732  3427               	retlw	39
   139  0733                     __end_of_dpowers:	
   140  0007                     _PORTC	set	7
   141  0008                     _PORTD	set	8
   142  0010                     _T1CON	set	16
   143  000F                     _TMR1H	set	15
   144  000E                     _TMR1L	set	14
   145  005F                     _GIE	set	95
   146  005E                     _PEIE	set	94
   147  0031                     _RB1	set	49
   148  0032                     _RB2	set	50
   149  0038                     _RC0	set	56
   150  003A                     _RC2	set	58
   151  003B                     _RC3	set	59
   152  003C                     _RC4	set	60
   153  005D                     _TMR0IE	set	93
   154  005A                     _TMR0IF	set	90
   155  0060                     _TMR1IF	set	96
   156  0080                     _TMR1ON	set	128
   157  0081                     _OPTION_REG	set	129
   158  0085                     _TRISA	set	133
   159  0088                     _TRISD	set	136
   160  0460                     _TMR1IE	set	1120
   161  0431                     _TRISB1	set	1073
   162  0432                     _TRISB2	set	1074
   163  0438                     _TRISC0	set	1080
   164  0439                     _TRISC1	set	1081
   165  043A                     _TRISC2	set	1082
   166  043B                     _TRISC3	set	1083
   167  043C                     _TRISC4	set	1084
   168  0733                     __stringdata:	
   169  0733                     STR_3:	
   170  0733  3456               	retlw	86	;'V'
   171  0734  3441               	retlw	65	;'A'
   172  0735  344C               	retlw	76	;'L'
   173  0736  3456               	retlw	86	;'V'
   174  0737  3445               	retlw	69	;'E'
   175  0738  3420               	retlw	32	;' '
   176  0739  3431               	retlw	49	;'1'
   177  073A  343A               	retlw	58	;':'
   178  073B  3420               	retlw	32	;' '
   179  073C  3420               	retlw	32	;' '
   180  073D  344F               	retlw	79	;'O'
   181  073E  344E               	retlw	78	;'N'
   182  073F  3420               	retlw	32	;' '
   183  0740  3420               	retlw	32	;' '
   184  0741  3420               	retlw	32	;' '
   185  0742  345B               	retlw	91	;'['
   186  0743  344F               	retlw	79	;'O'
   187  0744  3446               	retlw	70	;'F'
   188  0745  3446               	retlw	70	;'F'
   189  0746  345D               	retlw	93	;']'
   190  0747  3400               	retlw	0
   191  0748                     STR_4:	
   192  0748  3456               	retlw	86	;'V'
   193  0749  3441               	retlw	65	;'A'
   194  074A  344C               	retlw	76	;'L'
   195  074B  3456               	retlw	86	;'V'
   196  074C  3445               	retlw	69	;'E'
   197  074D  3420               	retlw	32	;' '
   198  074E  3432               	retlw	50	;'2'
   199  074F  343A               	retlw	58	;':'
   200  0750  3420               	retlw	32	;' '
   201  0751  3420               	retlw	32	;' '
   202  0752  344F               	retlw	79	;'O'
   203  0753  344E               	retlw	78	;'N'
   204  0754  3420               	retlw	32	;' '
   205  0755  3420               	retlw	32	;' '
   206  0756  3420               	retlw	32	;' '
   207  0757  345B               	retlw	91	;'['
   208  0758  344F               	retlw	79	;'O'
   209  0759  3446               	retlw	70	;'F'
   210  075A  3446               	retlw	70	;'F'
   211  075B  345D               	retlw	93	;']'
   212  075C  3400               	retlw	0
   213  075D                     STR_11:	
   214  075D  3420               	retlw	32	;' '
   215  075E  3420               	retlw	32	;' '
   216  075F  3420               	retlw	32	;' '
   217  0760  3420               	retlw	32	;' '
   218  0761  3420               	retlw	32	;' '
   219  0762  3420               	retlw	32	;' '
   220  0763  3420               	retlw	32	;' '
   221  0764  3420               	retlw	32	;' '
   222  0765  3420               	retlw	32	;' '
   223  0766  3420               	retlw	32	;' '
   224  0767  3420               	retlw	32	;' '
   225  0768  3420               	retlw	32	;' '
   226  0769  3420               	retlw	32	;' '
   227  076A  3420               	retlw	32	;' '
   228  076B  3420               	retlw	32	;' '
   229  076C  3420               	retlw	32	;' '
   230  076D  3420               	retlw	32	;' '
   231  076E  3420               	retlw	32	;' '
   232  076F  3400               	retlw	0
   233  0770                     STR_2:	
   234  0770  3453               	retlw	83	;'S'
   235  0771  3454               	retlw	84	;'T'
   236  0772  3441               	retlw	65	;'A'
   237  0773  3452               	retlw	82	;'R'
   238  0774  3454               	retlw	84	;'T'
   239  0775  3449               	retlw	73	;'I'
   240  0776  344E               	retlw	78	;'N'
   241  0777  3447               	retlw	71	;'G'
   242  0778  3420               	retlw	32	;' '
   243  0779  3455               	retlw	85	;'U'
   244  077A  3450               	retlw	80	;'P'
   245  077B  342E               	retlw	46	;'.'
   246  077C  342E               	retlw	46	;'.'
   247  077D  342E               	retlw	46	;'.'
   248  077E  3400               	retlw	0
   249  077F                     STR_14:	
   250  077F  3454               	retlw	84	;'T'
   251  0780  3441               	retlw	65	;'A'
   252  0781  344E               	retlw	78	;'N'
   253  0782  344B               	retlw	75	;'K'
   254  0783  3420               	retlw	32	;' '
   255  0784  3449               	retlw	73	;'I'
   256  0785  3453               	retlw	83	;'S'
   257  0786  3420               	retlw	32	;' '
   258  0787  3445               	retlw	69	;'E'
   259  0788  344D               	retlw	77	;'M'
   260  0789  3450               	retlw	80	;'P'
   261  078A  3454               	retlw	84	;'T'
   262  078B  3459               	retlw	89	;'Y'
   263  078C  3400               	retlw	0
   264  078D                     STR_7:	
   265  078D  3420               	retlw	32	;' '
   266  078E  345B               	retlw	91	;'['
   267  078F  344F               	retlw	79	;'O'
   268  0790  344E               	retlw	78	;'N'
   269  0791  345D               	retlw	93	;']'
   270  0792  3420               	retlw	32	;' '
   271  0793  3420               	retlw	32	;' '
   272  0794  3420               	retlw	32	;' '
   273  0795  344F               	retlw	79	;'O'
   274  0796  3446               	retlw	70	;'F'
   275  0797  3446               	retlw	70	;'F'
   276  0798  3420               	retlw	32	;' '
   277  0799  3400               	retlw	0
   278  079A                     STR_5:	
   279  079A  3457               	retlw	87	;'W'
   280  079B  3441               	retlw	65	;'A'
   281  079C  3454               	retlw	84	;'T'
   282  079D  3445               	retlw	69	;'E'
   283  079E  3452               	retlw	82	;'R'
   284  079F  343A               	retlw	58	;':'
   285  07A0  3420               	retlw	32	;' '
   286  07A1  3400               	retlw	0
   287  07A2                     STR_6:	
   288  07A2  345B               	retlw	91	;'['
   289  07A3  3425               	retlw	37	;'%'
   290  07A4  3464               	retlw	100	;'d'
   291  07A5  345D               	retlw	93	;']'
   292  07A6  3473               	retlw	115	;'s'
   293  07A7  3400               	retlw	0
   294  07A8                     STR_18:	
   295  07A8  3425               	retlw	37	;'%'
   296  07A9  3464               	retlw	100	;'d'
   297  07AA  3425               	retlw	37	;'%'
   298  07AB  3425               	retlw	37	;'%'
   299  07AC  3400               	retlw	0
   300  07AD                     __end_of__stringdata:	
   301                           
   302                           ; #config settings
   303  0000                     
   304                           	psect	cinit
   305  0015                     start_initialization:	
   306  0015                     __initialization:	
   307                           
   308                           ; Clear objects allocated to COMMON
   309  0015  01F6               	clrf	__pbssCOMMON& (0+127)
   310  0016  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   311  0017  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   312  0018  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   313                           
   314                           ; Clear objects allocated to BANK0
   315  0019  1383               	bcf	3,7	;select IRP bank0
   316  001A  305A               	movlw	low __pbssBANK0
   317  001B  0084               	movwf	4
   318  001C  3063               	movlw	low (__pbssBANK0+9)
   319  001D  120A  158A  239A  120A  118A  	fcall	clear_ram0
   320                           
   321                           ; Clear objects allocated to BANK1
   322  0022  30A0               	movlw	low __pbssBANK1
   323  0023  0084               	movwf	4
   324  0024  30BC               	movlw	low (__pbssBANK1+28)
   325  0025  120A  158A  239A   	fcall	clear_ram0
   326  0028                     end_of_initialization:	
   327                           ;End of C runtime variable initialization code
   328                           
   329  0028                     __end_of__initialization:	
   330  0028  0183               	clrf	3
   331  0029  120A  158A  2D5A   	ljmp	_main	;jump to C main() function
   332                           
   333                           	psect	bssCOMMON
   334  0076                     __pbssCOMMON:	
   335  0076                     _empty:	
   336  0076                     	ds	2
   337  0078                     _seconds:	
   338  0078                     	ds	2
   339                           
   340                           	psect	bssBANK0
   341  005A                     __pbssBANK0:	
   342  005A                     _avg:	
   343  005A                     	ds	3
   344  005D                     _index:	
   345  005D                     	ds	2
   346  005F                     _servo_one_status:	
   347  005F                     	ds	2
   348  0061                     _servo_two_status:	
   349  0061                     	ds	2
   350                           
   351                           	psect	bssBANK1
   352  00A0                     __pbssBANK1:	
   353  00A0                     _collection:	
   354  00A0                     	ds	20
   355  00B4                     _countflag:	
   356  00B4                     	ds	2
   357  00B6                     _schedulerFlag:	
   358  00B6                     	ds	2
   359  00B8                     _valve1:	
   360  00B8                     	ds	2
   361  00BA                     _valve2:	
   362  00BA                     	ds	2
   363                           
   364                           	psect	clrtext
   365  0B9A                     clear_ram0:	
   366                           ;	Called with FSR containing the base address, and
   367                           ;	W with the last address+1
   368                           
   369  0B9A  0064               	clrwdt	;clear the watchdog before getting into this loop
   370  0B9B                     clrloop0:	
   371  0B9B  0180               	clrf	0	;clear RAM location pointed to by FSR
   372  0B9C  0A84               	incf	4,f	;increment pointer
   373  0B9D  0604               	xorwf	4,w	;XOR with final address
   374  0B9E  1903               	btfsc	3,2	;have we reached the end yet?
   375  0B9F  3400               	retlw	0	;all done for this memory range, return
   376  0BA0  0604               	xorwf	4,w	;XOR again to restore value
   377  0BA1  2B9B               	goto	clrloop0	;do the next byte
   378                           
   379                           	psect	cstackBANK1
   380  00BC                     __pcstackBANK1:	
   381  00BC                     checkWaterLevel@percentage:	
   382                           
   383                           ; 10 bytes @ 0x0
   384  00BC                     	ds	10
   385  00C6                     checkWaterLevel@duration:	
   386                           
   387                           ; 2 bytes @ 0xA
   388  00C6                     	ds	2
   389  00C8                     checkWaterLevel@distance:	
   390                           
   391                           ; 2 bytes @ 0xC
   392  00C8                     	ds	2
   393  00CA                     checkWaterLevel@percentValue:	
   394                           
   395                           ; 2 bytes @ 0xE
   396  00CA                     	ds	2
   397  00CC                     checkWaterLevel@i:	
   398                           
   399                           ; 2 bytes @ 0x10
   400  00CC                     	ds	2
   401                           
   402                           	psect	cstackCOMMON
   403  0070                     __pcstackCOMMON:	
   404  0070                     ?_initLCD:	
   405  0070                     ?_initSYS:	
   406                           ; 0 bytes @ 0x0
   407                           
   408  0070                     ?_instCtrl:	
   409                           ; 0 bytes @ 0x0
   410                           
   411  0070                     ?_checkWaterLevel:	
   412                           ; 0 bytes @ 0x0
   413                           
   414  0070                     ?_updateDisplay:	
   415                           ; 0 bytes @ 0x0
   416                           
   417  0070                     ?_timerDelay:	
   418                           ; 0 bytes @ 0x0
   419                           
   420  0070                     ?_ISR:	
   421                           ; 0 bytes @ 0x0
   422                           
   423  0070                     ??_ISR:	
   424                           ; 0 bytes @ 0x0
   425                           
   426  0070                     ?_main:	
   427                           ; 0 bytes @ 0x0
   428                           
   429  0070                     ?_dataCtrl:	
   430                           ; 0 bytes @ 0x0
   431                           
   432                           
   433                           ; 0 bytes @ 0x0
   434  0070                     	ds	4
   435  0074                     ??_initLCD:	
   436  0074                     ??_instCtrl:	
   437                           ; 0 bytes @ 0x4
   438                           
   439  0074                     ?_printString:	
   440                           ; 0 bytes @ 0x4
   441                           
   442  0074                     ??_timerDelay:	
   443                           ; 0 bytes @ 0x4
   444                           
   445  0074                     ?_rotateLeft:	
   446                           ; 0 bytes @ 0x4
   447                           
   448  0074                     ?_rotateRight:	
   449                           ; 0 bytes @ 0x4
   450                           
   451  0074                     ??_dataCtrl:	
   452                           ; 0 bytes @ 0x4
   453                           
   454  0074                     ??___awmod:	
   455                           ; 0 bytes @ 0x4
   456                           
   457  0074                     ??___lwdiv:	
   458                           ; 0 bytes @ 0x4
   459                           
   460  0074                     ??___lwtoft:	
   461                           ; 0 bytes @ 0x4
   462                           
   463  0074                     timerDelay@localClock:	
   464                           ; 0 bytes @ 0x4
   465                           
   466  0074                     rotateLeft@servoPin:	
   467                           ; 2 bytes @ 0x4
   468                           
   469  0074                     rotateRight@servoPin:	
   470                           ; 2 bytes @ 0x4
   471                           
   472  0074                     printString@string:	
   473                           ; 2 bytes @ 0x4
   474                           
   475                           
   476                           ; 2 bytes @ 0x4
   477  0074                     	ds	1
   478  0075                     ??___ftneg:	
   479  0075                     ??___lwmod:	
   480                           ; 0 bytes @ 0x5
   481                           
   482                           
   483                           ; 0 bytes @ 0x5
   484  0075                     	ds	1
   485  0076                     ??_initSYS:	
   486  0076                     ??_printString:	
   487                           ; 0 bytes @ 0x6
   488                           
   489  0076                     ??_disableWater:	
   490                           ; 0 bytes @ 0x6
   491                           
   492  0076                     ??_enableWater:	
   493                           ; 0 bytes @ 0x6
   494                           
   495  0076                     ??_main:	
   496                           ; 0 bytes @ 0x6
   497                           
   498                           
   499                           	psect	cstackBANK0
   500  0020                     __pcstackBANK0:	
   501                           ; 0 bytes @ 0x6
   502                           
   503  0020                     ??_rotateLeft:	
   504  0020                     ??_rotateRight:	
   505                           ; 0 bytes @ 0x0
   506                           
   507  0020                     ?___ftge:	
   508                           ; 0 bytes @ 0x0
   509                           
   510  0020                     ?___awmod:	
   511                           ; 1 bit 
   512                           
   513  0020                     ?___lwdiv:	
   514                           ; 2 bytes @ 0x0
   515                           
   516  0020                     ?___ftpack:	
   517                           ; 2 bytes @ 0x0
   518                           
   519  0020                     dataCtrl@data:	
   520                           ; 3 bytes @ 0x0
   521                           
   522  0020                     instCtrl@inst:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0020                     ___awmod@divisor:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0020                     ___lwdiv@divisor:	
   529                           ; 2 bytes @ 0x0
   530                           
   531  0020                     ___ftpack@arg:	
   532                           ; 2 bytes @ 0x0
   533                           
   534  0020                     ___ftge@ff1:	
   535                           ; 3 bytes @ 0x0
   536                           
   537                           
   538                           ; 3 bytes @ 0x0
   539  0020                     	ds	1
   540  0021                     dataCtrl@i:	
   541  0021                     instCtrl@i:	
   542                           ; 2 bytes @ 0x1
   543                           
   544                           
   545                           ; 2 bytes @ 0x1
   546  0021                     	ds	1
   547  0022                     ___awmod@dividend:	
   548  0022                     ___lwdiv@dividend:	
   549                           ; 2 bytes @ 0x2
   550                           
   551                           
   552                           ; 2 bytes @ 0x2
   553  0022                     	ds	1
   554  0023                     ?_disableWater:	
   555  0023                     ?_enableWater:	
   556                           ; 0 bytes @ 0x3
   557                           
   558  0023                     ___ftpack@exp:	
   559                           ; 0 bytes @ 0x3
   560                           
   561  0023                     enableWater@servoPin:	
   562                           ; 1 bytes @ 0x3
   563                           
   564  0023                     disableWater@servoPin:	
   565                           ; 2 bytes @ 0x3
   566                           
   567  0023                     ___ftge@ff2:	
   568                           ; 2 bytes @ 0x3
   569                           
   570                           
   571                           ; 3 bytes @ 0x3
   572  0023                     	ds	1
   573  0024                     ___awmod@counter:	
   574  0024                     ___ftpack@sign:	
   575                           ; 1 bytes @ 0x4
   576                           
   577  0024                     ___lwdiv@counter:	
   578                           ; 1 bytes @ 0x4
   579                           
   580                           
   581                           ; 1 bytes @ 0x4
   582  0024                     	ds	1
   583  0025                     ??___ftpack:	
   584  0025                     ___awmod@sign:	
   585                           ; 0 bytes @ 0x5
   586                           
   587  0025                     ___lwdiv@quotient:	
   588                           ; 1 bytes @ 0x5
   589                           
   590                           
   591                           ; 2 bytes @ 0x5
   592  0025                     	ds	1
   593  0026                     ??___ftge:	
   594                           
   595                           ; 0 bytes @ 0x6
   596  0026                     	ds	1
   597  0027                     ?___lwmod:	
   598  0027                     ___lwmod@divisor:	
   599                           ; 2 bytes @ 0x7
   600                           
   601                           
   602                           ; 2 bytes @ 0x7
   603  0027                     	ds	1
   604  0028                     ?___ftdiv:	
   605  0028                     ?___lwtoft:	
   606                           ; 3 bytes @ 0x8
   607                           
   608  0028                     ___lwtoft@c:	
   609                           ; 3 bytes @ 0x8
   610                           
   611  0028                     ___ftdiv@f2:	
   612                           ; 2 bytes @ 0x8
   613                           
   614                           
   615                           ; 3 bytes @ 0x8
   616  0028                     	ds	1
   617  0029                     ___lwmod@dividend:	
   618                           
   619                           ; 2 bytes @ 0x9
   620  0029                     	ds	2
   621  002B                     ?___ftmul:	
   622  002B                     ___lwmod@counter:	
   623                           ; 3 bytes @ 0xB
   624                           
   625  002B                     ___ftdiv@f1:	
   626                           ; 1 bytes @ 0xB
   627                           
   628  002B                     ___ftmul@f1:	
   629                           ; 3 bytes @ 0xB
   630                           
   631                           
   632                           ; 3 bytes @ 0xB
   633  002B                     	ds	1
   634  002C                     ?_sprintf:	
   635  002C                     sprintf@f:	
   636                           ; 2 bytes @ 0xC
   637                           
   638                           
   639                           ; 1 bytes @ 0xC
   640  002C                     	ds	2
   641  002E                     ??___ftdiv:	
   642  002E                     ___ftmul@f2:	
   643                           ; 0 bytes @ 0xE
   644                           
   645                           
   646                           ; 3 bytes @ 0xE
   647  002E                     	ds	1
   648  002F                     ??_sprintf:	
   649                           
   650                           ; 0 bytes @ 0xF
   651  002F                     	ds	2
   652  0031                     ??___ftmul:	
   653                           
   654                           ; 0 bytes @ 0x11
   655  0031                     	ds	1
   656  0032                     sprintf@ap:	
   657  0032                     ___ftdiv@cntr:	
   658                           ; 1 bytes @ 0x12
   659                           
   660                           
   661                           ; 1 bytes @ 0x12
   662  0032                     	ds	1
   663  0033                     sprintf@flag:	
   664  0033                     ___ftdiv@f3:	
   665                           ; 1 bytes @ 0x13
   666                           
   667                           
   668                           ; 3 bytes @ 0x13
   669  0033                     	ds	1
   670  0034                     sprintf@prec:	
   671                           
   672                           ; 1 bytes @ 0x14
   673  0034                     	ds	1
   674  0035                     ___ftmul@exp:	
   675  0035                     sprintf@_val:	
   676                           ; 1 bytes @ 0x15
   677                           
   678                           
   679                           ; 4 bytes @ 0x15
   680  0035                     	ds	1
   681  0036                     ___ftdiv@exp:	
   682  0036                     ___ftmul@f3_as_product:	
   683                           ; 1 bytes @ 0x16
   684                           
   685                           
   686                           ; 3 bytes @ 0x16
   687  0036                     	ds	1
   688  0037                     ___ftdiv@sign:	
   689                           
   690                           ; 1 bytes @ 0x17
   691  0037                     	ds	2
   692  0039                     sprintf@sp:	
   693  0039                     ___ftmul@cntr:	
   694                           ; 1 bytes @ 0x19
   695                           
   696                           
   697                           ; 1 bytes @ 0x19
   698  0039                     	ds	1
   699  003A                     sprintf@c:	
   700  003A                     ___ftmul@sign:	
   701                           ; 1 bytes @ 0x1A
   702                           
   703                           
   704                           ; 1 bytes @ 0x1A
   705  003A                     	ds	1
   706  003B                     ??_updateDisplay:	
   707  003B                     ?___ftneg:	
   708                           ; 0 bytes @ 0x1B
   709                           
   710  003B                     ___ftneg@f1:	
   711                           ; 3 bytes @ 0x1B
   712                           
   713                           
   714                           ; 3 bytes @ 0x1B
   715  003B                     	ds	1
   716  003C                     updateDisplay@seconds_str:	
   717                           
   718                           ; 10 bytes @ 0x1C
   719  003C                     	ds	2
   720  003E                     ?___ftadd:	
   721  003E                     ___ftadd@f1:	
   722                           ; 3 bytes @ 0x1E
   723                           
   724                           
   725                           ; 3 bytes @ 0x1E
   726  003E                     	ds	3
   727  0041                     ___ftadd@f2:	
   728                           
   729                           ; 3 bytes @ 0x21
   730  0041                     	ds	3
   731  0044                     ??___ftadd:	
   732                           
   733                           ; 0 bytes @ 0x24
   734  0044                     	ds	4
   735  0048                     ___ftadd@sign:	
   736                           
   737                           ; 1 bytes @ 0x28
   738  0048                     	ds	1
   739  0049                     ___ftadd@exp2:	
   740                           
   741                           ; 1 bytes @ 0x29
   742  0049                     	ds	1
   743  004A                     ___ftadd@exp1:	
   744                           
   745                           ; 1 bytes @ 0x2A
   746  004A                     	ds	1
   747  004B                     ?___fttol:	
   748  004B                     ___fttol@f1:	
   749                           ; 4 bytes @ 0x2B
   750                           
   751                           
   752                           ; 3 bytes @ 0x2B
   753  004B                     	ds	4
   754  004F                     ??___fttol:	
   755                           
   756                           ; 0 bytes @ 0x2F
   757  004F                     	ds	4
   758  0053                     ___fttol@sign1:	
   759                           
   760                           ; 1 bytes @ 0x33
   761  0053                     	ds	1
   762  0054                     ___fttol@lval:	
   763                           
   764                           ; 4 bytes @ 0x34
   765  0054                     	ds	4
   766  0058                     ___fttol@exp1:	
   767                           
   768                           ; 1 bytes @ 0x38
   769  0058                     	ds	1
   770  0059                     ??_checkWaterLevel:	
   771                           
   772                           ; 0 bytes @ 0x39
   773  0059                     	ds	1
   774                           
   775                           	psect	maintext
   776  0D5A                     __pmaintext:	
   777 ;;
   778 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   779 ;;
   780 ;; *************** function _main *****************
   781 ;; Defined at:
   782 ;;		line 121 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Automated_Water_Distributi
      +on\build\Alin_Ceballos_Francis_Gere_Ratificar_DP.c"
   783 ;; Parameters:    Size  Location     Type
   784 ;;		None
   785 ;; Auto vars:     Size  Location     Type
   786 ;;		None
   787 ;; Return value:  Size  Location     Type
   788 ;;		None               void
   789 ;; Registers used:
   790 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   791 ;; Tracked objects:
   792 ;;		On entry : 17F/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   796 ;;      Params:         0       0       0       0       0
   797 ;;      Locals:         0       0       0       0       0
   798 ;;      Temps:          0       0       0       0       0
   799 ;;      Totals:         0       0       0       0       0
   800 ;;Total ram usage:        0 bytes
   801 ;; Hardware stack levels required when called:    4
   802 ;; This function calls:
   803 ;;		_checkWaterLevel
   804 ;;		_initLCD
   805 ;;		_initSYS
   806 ;;		_instCtrl
   807 ;;		_printString
   808 ;;		_updateDisplay
   809 ;; This function is called by:
   810 ;;		Startup code after reset
   811 ;; This function uses a non-reentrant model
   812 ;;
   813                           
   814                           
   815                           ;psect for function _main
   816  0D5A                     _main:	
   817                           
   818                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 124: TRISB1 = 0;
   819                           
   820                           ;incstack = 0
   821                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   822  0D5A  1683               	bsf	3,5	;RP0=1, select bank1
   823  0D5B  1303               	bcf	3,6	;RP1=0, select bank1
   824  0D5C  1086               	bcf	6,1	;volatile
   825                           
   826                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 125: TRISB2 = 1;
   827  0D5D  1506               	bsf	6,2	;volatile
   828                           
   829                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 126: TRISC0 = TRISC1 = TRISC2 = 0;
   830  0D5E  1107               	bcf	7,2	;volatile
   831  0D5F  1087               	bcf	7,1	;volatile
   832  0D60  1007               	bcf	7,0	;volatile
   833                           
   834                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 127: TRISC3 = TRISC4 = 0;
   835  0D61  1207               	bcf	7,4	;volatile
   836  0D62  1187               	bcf	7,3	;volatile
   837                           
   838                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 128: TRISD = 0x00;
   839  0D63  0188               	clrf	8	;volatile
   840                           
   841                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 129: PORTD = 0x00;
   842  0D64  1283               	bcf	3,5	;RP0=0, select bank0
   843  0D65  1303               	bcf	3,6	;RP1=0, select bank0
   844  0D66  0188               	clrf	8	;volatile
   845                           
   846                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 130: PORTC = 0x00;
   847  0D67  0187               	clrf	7	;volatile
   848                           
   849                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 132: initLCD();
   850  0D68  120A  158A  23DB  120A  158A  	fcall	_initLCD
   851                           
   852                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 133: initSYS();
   853  0D6D  120A  118A  27AD  120A  158A  	fcall	_initSYS
   854                           
   855                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 136: TRISA = 0xFF;
   856  0D72  30FF               	movlw	255
   857  0D73  1683               	bsf	3,5	;RP0=1, select bank1
   858  0D74  1303               	bcf	3,6	;RP1=0, select bank1
   859  0D75  0085               	movwf	5	;volatile
   860                           
   861                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 138: GIE = 1;
   862  0D76  178B               	bsf	11,7	;volatile
   863                           
   864                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 139: PEIE = 1;
   865  0D77  170B               	bsf	11,6	;volatile
   866                           
   867                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 140: T1CON = 0x00;
   868  0D78  1283               	bcf	3,5	;RP0=0, select bank0
   869  0D79  1303               	bcf	3,6	;RP1=0, select bank0
   870  0D7A  0190               	clrf	16	;volatile
   871                           
   872                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 141: TMR1IF = 0;
   873  0D7B  100C               	bcf	12,0	;volatile
   874                           
   875                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 142: TMR1IE = 1;
   876  0D7C  1683               	bsf	3,5	;RP0=1, select bank1
   877  0D7D  1303               	bcf	3,6	;RP1=0, select bank1
   878  0D7E  140C               	bsf	12,0	;volatile
   879                           
   880                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 143: TMR1ON = 0;
   881  0D7F  1283               	bcf	3,5	;RP0=0, select bank0
   882  0D80  1303               	bcf	3,6	;RP1=0, select bank0
   883  0D81  1010               	bcf	16,0	;volatile
   884                           
   885                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 145: OPTION_REG = 0x44;
   886  0D82  3044               	movlw	68
   887  0D83  1683               	bsf	3,5	;RP0=1, select bank1
   888  0D84  1303               	bcf	3,6	;RP1=0, select bank1
   889  0D85  0081               	movwf	1	;volatile
   890                           
   891                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 147: instCtrl(0x80);
   892  0D86  3080               	movlw	128
   893  0D87  120A  158A  2461  120A  158A  	fcall	_instCtrl
   894                           
   895                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 148: printString("          ");
   896  0D8C  303D               	movlw	low ((STR_11+8)-__stringbase)
   897  0D8D  00F4               	movwf	printString@string
   898  0D8E  3080               	movlw	128
   899  0D8F  00F5               	movwf	printString@string+1
   900  0D90  120A  158A  2415  120A  158A  	fcall	_printString
   901  0D95                     l111:	
   902                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 149: while(1)
   903                           
   904                           
   905                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 150: {
   906                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 151: checkWaterLevel();
   907  0D95  120A  118A  202C  120A  158A  	fcall	_checkWaterLevel
   908                           
   909                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 152: updateDisplay();
   910  0D9A  120A  118A  222F  120A  158A  	fcall	_updateDisplay
   911  0D9F  2D95               	goto	l111
   912  0DA0                     __end_of_main:	
   913                           
   914                           	psect	text1
   915  022F                     __ptext1:	
   916 ;; *************** function _updateDisplay *****************
   917 ;; Defined at:
   918 ;;		line 171 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Automated_Water_Distributi
      +on\build\Alin_Ceballos_Francis_Gere_Ratificar_DP.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;		None
   921 ;; Auto vars:     Size  Location     Type
   922 ;;  seconds_str    10   28[BANK0 ] unsigned char [10]
   923 ;; Return value:  Size  Location     Type
   924 ;;		None               void
   925 ;; Registers used:
   926 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   927 ;; Tracked objects:
   928 ;;		On entry : 0/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   932 ;;      Params:         0       0       0       0       0
   933 ;;      Locals:         0      10       0       0       0
   934 ;;      Temps:          0       1       0       0       0
   935 ;;      Totals:         0      11       0       0       0
   936 ;;Total ram usage:       11 bytes
   937 ;; Hardware stack levels used:    1
   938 ;; Hardware stack levels required when called:    3
   939 ;; This function calls:
   940 ;;		_disableWater
   941 ;;		_enableWater
   942 ;;		_instCtrl
   943 ;;		_printString
   944 ;;		_sprintf
   945 ;;		_timerDelay
   946 ;; This function is called by:
   947 ;;		_main
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951                           
   952                           ;psect for function _updateDisplay
   953  022F                     _updateDisplay:	
   954                           
   955                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 173: if(!empty)
   956                           
   957                           ;incstack = 0
   958                           ; Regs used in _updateDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   959  022F  0877               	movf	_empty+1,w
   960  0230  0476               	iorwf	_empty,w
   961  0231  1D03               	skipz
   962  0232  2B56               	goto	l3182
   963                           
   964                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 174: {
   965                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 175: if(schedulerFlag)
   966  0233  1683               	bsf	3,5	;RP0=1, select bank1
   967  0234  1303               	bcf	3,6	;RP1=0, select bank1
   968  0235  0837               	movf	(_schedulerFlag+1)^(0+128),w
   969  0236  0436               	iorwf	_schedulerFlag^(0+128),w
   970  0237  1903               	skipnz
   971  0238  2B06               	goto	l3160
   972                           
   973                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 176: {
   974                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 178: if(seconds-- > 0)
   975  0239  30FF               	movlw	255
   976  023A  07F8               	addwf	_seconds,f
   977  023B  1803               	skipnc
   978  023C  0AF9               	incf	_seconds+1,f
   979  023D  30FF               	movlw	255
   980  023E  07F9               	addwf	_seconds+1,f
   981  023F  1BF9               	btfsc	_seconds+1,7
   982  0240  2A6C               	goto	l3114
   983                           
   984                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 179: {
   985                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 181: instCtrl(0x80);
   986  0241  3080               	movlw	128
   987  0242  120A  158A  2461  120A  118A  	fcall	_instCtrl
   988                           
   989                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 182: char seconds_str[10];
   990                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 183: sprintf(seconds_str, "[%d]s", seconds);
   991  0247  307A               	movlw	(STR_6-__stringbase)& (0+255)
   992  0248  1283               	bcf	3,5	;RP0=0, select bank0
   993  0249  1303               	bcf	3,6	;RP1=0, select bank0
   994  024A  00BB               	movwf	??_updateDisplay
   995  024B  083B               	movf	??_updateDisplay,w
   996  024C  00AC               	movwf	sprintf@f
   997  024D  0879               	movf	_seconds+1,w
   998  024E  01AE               	clrf	?_sprintf+2
   999  024F  07AE               	addwf	?_sprintf+2,f
  1000  0250  0878               	movf	_seconds,w
  1001  0251  01AD               	clrf	?_sprintf+1
  1002  0252  07AD               	addwf	?_sprintf+1,f
  1003  0253  303C               	movlw	updateDisplay@seconds_str& (0+255)
  1004  0254  120A  118A  24B3  120A  118A  	fcall	_sprintf
  1005                           
  1006                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 184: instCtrl(0x80);
  1007  0259  3080               	movlw	128
  1008  025A  120A  158A  2461  120A  118A  	fcall	_instCtrl
  1009                           
  1010                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 185: printString(seconds_str);
  1011  025F  303C               	movlw	updateDisplay@seconds_str& (0+255)
  1012  0260  00F4               	movwf	printString@string
  1013  0261  3000               	movlw	0
  1014  0262  00F5               	movwf	printString@string+1
  1015  0263  120A  158A  2415  120A  118A  	fcall	_printString
  1016                           
  1017                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 186: timerDelay();
  1018  0268  120A  158A  23F8   	fcall	_timerDelay
  1019                           
  1020                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 187: }
  1021  026B  0008               	return
  1022  026C                     l3114:	
  1023                           
  1024                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 188: else
  1025                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 189: {
  1026                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 191: if(valve1)
  1027  026C  1683               	bsf	3,5	;RP0=1, select bank1
  1028  026D  1303               	bcf	3,6	;RP1=0, select bank1
  1029  026E  0839               	movf	(_valve1+1)^(0+128),w
  1030  026F  0438               	iorwf	_valve1^(0+128),w
  1031  0270  1903               	skipnz
  1032  0271  2ABB               	goto	l3138
  1033                           
  1034                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 192: {
  1035                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 193: valve1 = 0;
  1036  0272  01B8               	clrf	_valve1^(0+128)
  1037  0273  01B9               	clrf	(_valve1+1)^(0+128)
  1038                           
  1039                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 194: valve2 = 1;
  1040  0274  3001               	movlw	1
  1041  0275  00BA               	movwf	_valve2^(0+128)
  1042  0276  3000               	movlw	0
  1043  0277  00BB               	movwf	(_valve2^(0+128)+1)
  1044                           
  1045                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 195: seconds = 10;
  1046  0278  300A               	movlw	10
  1047  0279  00F8               	movwf	_seconds
  1048  027A  3000               	movlw	0
  1049  027B  00F9               	movwf	_seconds+1
  1050                           
  1051                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 197: if(!servo_two_status)
  1052  027C  1283               	bcf	3,5	;RP0=0, select bank0
  1053  027D  1303               	bcf	3,6	;RP1=0, select bank0
  1054  027E  0862               	movf	_servo_two_status+1,w
  1055  027F  0461               	iorwf	_servo_two_status,w
  1056  0280  1D03               	skipz
  1057  0281  2A9C               	goto	l3130
  1058                           
  1059                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 198: {
  1060                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 200: instCtrl(0x9C);
  1061  0282  309C               	movlw	156
  1062  0283  120A  158A  2461  120A  118A  	fcall	_instCtrl
  1063                           
  1064                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 201: printString(" [ON]   OFF ");
  1065  0288  3065               	movlw	low (STR_7-__stringbase)
  1066  0289  00F4               	movwf	printString@string
  1067  028A  3080               	movlw	128
  1068  028B  00F5               	movwf	printString@string+1
  1069  028C  120A  158A  2415  120A  118A  	fcall	_printString
  1070                           
  1071                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 202: enableWater(2);
  1072  0291  3002               	movlw	2
  1073  0292  1283               	bcf	3,5	;RP0=0, select bank0
  1074  0293  1303               	bcf	3,6	;RP1=0, select bank0
  1075  0294  00A3               	movwf	enableWater@servoPin
  1076  0295  3000               	movlw	0
  1077  0296  00A4               	movwf	enableWater@servoPin+1
  1078  0297  120A  158A  24B7  120A  118A  	fcall	_enableWater
  1079  029C                     l3130:	
  1080                           
  1081                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 203: }
  1082                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 204: if(servo_one_status)
  1083  029C  1283               	bcf	3,5	;RP0=0, select bank0
  1084  029D  1303               	bcf	3,6	;RP1=0, select bank0
  1085  029E  0860               	movf	_servo_one_status+1,w
  1086  029F  045F               	iorwf	_servo_one_status,w
  1087  02A0  1903               	skipnz
  1088  02A1  0008               	return
  1089                           
  1090                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 205: {
  1091                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 207: instCtrl(0xC8);
  1092  02A2  30C8               	movlw	200
  1093  02A3  120A  158A  2461  120A  118A  	fcall	_instCtrl
  1094                           
  1095                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 208: printString("  ON   [OFF]");
  1096  02A8  3013               	movlw	low ((STR_3+8)-__stringbase)
  1097  02A9  00F4               	movwf	printString@string
  1098  02AA  3080               	movlw	128
  1099  02AB  00F5               	movwf	printString@string+1
  1100  02AC  120A  158A  2415  120A  118A  	fcall	_printString
  1101                           
  1102                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 209: disableWater(1);
  1103  02B1  3001               	movlw	1
  1104  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  1105  02B3  1303               	bcf	3,6	;RP1=0, select bank0
  1106  02B4  00A3               	movwf	disableWater@servoPin
  1107  02B5  3000               	movlw	0
  1108  02B6  00A4               	movwf	disableWater@servoPin+1
  1109  02B7  120A  158A  2438   	fcall	_disableWater
  1110                           
  1111                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 210: }
  1112                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 211: }
  1113  02BA  0008               	return
  1114  02BB                     l3138:	
  1115                           
  1116                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 212: else
  1117                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 213: {
  1118                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 214: valve1 = 1;
  1119  02BB  3001               	movlw	1
  1120  02BC  1683               	bsf	3,5	;RP0=1, select bank1
  1121  02BD  1303               	bcf	3,6	;RP1=0, select bank1
  1122  02BE  00B8               	movwf	_valve1^(0+128)
  1123  02BF  3000               	movlw	0
  1124  02C0  00B9               	movwf	(_valve1^(0+128)+1)
  1125                           
  1126                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 215: valve2 = 0;
  1127  02C1  01BA               	clrf	_valve2^(0+128)
  1128  02C2  01BB               	clrf	(_valve2+1)^(0+128)
  1129                           
  1130                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 216: seconds = 10;
  1131  02C3  300A               	movlw	10
  1132  02C4  00F8               	movwf	_seconds
  1133  02C5  3000               	movlw	0
  1134  02C6  00F9               	movwf	_seconds+1
  1135                           
  1136                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 218: if(!servo_one_status)
  1137  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  1138  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  1139  02C9  0860               	movf	_servo_one_status+1,w
  1140  02CA  045F               	iorwf	_servo_one_status,w
  1141  02CB  1D03               	skipz
  1142  02CC  2AE7               	goto	l3152
  1143                           
  1144                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 219: {
  1145                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 221: instCtrl(0xC8);
  1146  02CD  30C8               	movlw	200
  1147  02CE  120A  158A  2461  120A  118A  	fcall	_instCtrl
  1148                           
  1149                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 222: printString(" [ON]   OFF ");
  1150  02D3  3065               	movlw	low (STR_7-__stringbase)
  1151  02D4  00F4               	movwf	printString@string
  1152  02D5  3080               	movlw	128
  1153  02D6  00F5               	movwf	printString@string+1
  1154  02D7  120A  158A  2415  120A  118A  	fcall	_printString
  1155                           
  1156                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 223: enableWater(1);
  1157  02DC  3001               	movlw	1
  1158  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  1159  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  1160  02DF  00A3               	movwf	enableWater@servoPin
  1161  02E0  3000               	movlw	0
  1162  02E1  00A4               	movwf	enableWater@servoPin+1
  1163  02E2  120A  158A  24B7  120A  118A  	fcall	_enableWater
  1164  02E7                     l3152:	
  1165                           
  1166                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 224: }
  1167                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 225: if(servo_two_status)
  1168  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  1169  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  1170  02E9  0862               	movf	_servo_two_status+1,w
  1171  02EA  0461               	iorwf	_servo_two_status,w
  1172  02EB  1903               	skipnz
  1173  02EC  0008               	return
  1174                           
  1175                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 226: {
  1176                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 228: instCtrl(0x9C);
  1177  02ED  309C               	movlw	156
  1178  02EE  120A  158A  2461  120A  118A  	fcall	_instCtrl
  1179                           
  1180                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 229: printString("  ON   [OFF]");
  1181  02F3  3013               	movlw	low ((STR_3+8)-__stringbase)
  1182  02F4  00F4               	movwf	printString@string
  1183  02F5  3080               	movlw	128
  1184  02F6  00F5               	movwf	printString@string+1
  1185  02F7  120A  158A  2415  120A  118A  	fcall	_printString
  1186                           
  1187                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 230: disableWater(2);
  1188  02FC  3002               	movlw	2
  1189  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  1190  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  1191  02FF  00A3               	movwf	disableWater@servoPin
  1192  0300  3000               	movlw	0
  1193  0301  00A4               	movwf	disableWater@servoPin+1
  1194  0302  120A  158A  2438   	fcall	_disableWater
  1195                           
  1196                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 231: }
  1197                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 232: }
  1198                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 233: }
  1199                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 234: }
  1200  0305  0008               	return
  1201  0306                     l3160:	
  1202                           
  1203                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 235: else
  1204                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 236: {
  1205                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 240: valve1 = 0;
  1206  0306  1683               	bsf	3,5	;RP0=1, select bank1
  1207  0307  1303               	bcf	3,6	;RP1=0, select bank1
  1208  0308  01B8               	clrf	_valve1^(0+128)
  1209  0309  01B9               	clrf	(_valve1+1)^(0+128)
  1210                           
  1211                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 241: valve2 = 0;
  1212  030A  01BA               	clrf	_valve2^(0+128)
  1213  030B  01BB               	clrf	(_valve2+1)^(0+128)
  1214                           
  1215                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 242: instCtrl(0x80);
  1216  030C  3080               	movlw	128
  1217  030D  120A  158A  2461  120A  118A  	fcall	_instCtrl
  1218                           
  1219                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 244: printString("                  ");
  1220  0312  3035               	movlw	low (STR_11-__stringbase)
  1221  0313  00F4               	movwf	printString@string
  1222  0314  3080               	movlw	128
  1223  0315  00F5               	movwf	printString@string+1
  1224  0316  120A  158A  2415  120A  118A  	fcall	_printString
  1225                           
  1226                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 245: instCtrl(0xC8);
  1227  031B  30C8               	movlw	200
  1228  031C  120A  158A  2461  120A  118A  	fcall	_instCtrl
  1229                           
  1230                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 246: printString(" [ON]   OFF ");
  1231  0321  3065               	movlw	low (STR_7-__stringbase)
  1232  0322  00F4               	movwf	printString@string
  1233  0323  3080               	movlw	128
  1234  0324  00F5               	movwf	printString@string+1
  1235  0325  120A  158A  2415  120A  118A  	fcall	_printString
  1236                           
  1237                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 247: instCtrl(0x9C);
  1238  032A  309C               	movlw	156
  1239  032B  120A  158A  2461  120A  118A  	fcall	_instCtrl
  1240                           
  1241                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 248: printString(" [ON]   OFF ");
  1242  0330  3065               	movlw	low (STR_7-__stringbase)
  1243  0331  00F4               	movwf	printString@string
  1244  0332  3080               	movlw	128
  1245  0333  00F5               	movwf	printString@string+1
  1246  0334  120A  158A  2415  120A  118A  	fcall	_printString
  1247                           
  1248                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 249: if(!servo_one_status)
  1249  0339  1283               	bcf	3,5	;RP0=0, select bank0
  1250  033A  1303               	bcf	3,6	;RP1=0, select bank0
  1251  033B  0860               	movf	_servo_one_status+1,w
  1252  033C  045F               	iorwf	_servo_one_status,w
  1253  033D  1D03               	skipz
  1254  033E  2B48               	goto	l3178
  1255                           
  1256                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 250: enableWater(1);
  1257  033F  3001               	movlw	1
  1258  0340  00A3               	movwf	enableWater@servoPin
  1259  0341  3000               	movlw	0
  1260  0342  00A4               	movwf	enableWater@servoPin+1
  1261  0343  120A  158A  24B7  120A  118A  	fcall	_enableWater
  1262  0348                     l3178:	
  1263                           
  1264                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 251: if(!servo_two_status)
  1265  0348  1283               	bcf	3,5	;RP0=0, select bank0
  1266  0349  1303               	bcf	3,6	;RP1=0, select bank0
  1267  034A  0862               	movf	_servo_two_status+1,w
  1268  034B  0461               	iorwf	_servo_two_status,w
  1269  034C  1D03               	skipz
  1270  034D  0008               	return
  1271                           
  1272                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 252: enableWater(2);
  1273  034E  3002               	movlw	2
  1274  034F  00A3               	movwf	enableWater@servoPin
  1275  0350  3000               	movlw	0
  1276  0351  00A4               	movwf	enableWater@servoPin+1
  1277  0352  120A  158A  24B7   	fcall	_enableWater
  1278                           
  1279                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 253: }
  1280                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 254: }
  1281  0355  0008               	return
  1282  0356                     l3182:	
  1283                           
  1284                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 255: else
  1285                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 256: {
  1286                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 257: valve1 = 0;
  1287  0356  1683               	bsf	3,5	;RP0=1, select bank1
  1288  0357  1303               	bcf	3,6	;RP1=0, select bank1
  1289  0358  01B8               	clrf	_valve1^(0+128)
  1290  0359  01B9               	clrf	(_valve1+1)^(0+128)
  1291                           
  1292                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 258: valve2 = 0;
  1293  035A  01BA               	clrf	_valve2^(0+128)
  1294  035B  01BB               	clrf	(_valve2+1)^(0+128)
  1295                           
  1296                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 259: instCtrl(0x80);
  1297  035C  3080               	movlw	128
  1298  035D  120A  158A  2461  120A  118A  	fcall	_instCtrl
  1299                           
  1300                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 260: printString("TANK IS EMPTY");
  1301  0362  3057               	movlw	low (STR_14-__stringbase)
  1302  0363  00F4               	movwf	printString@string
  1303  0364  3080               	movlw	128
  1304  0365  00F5               	movwf	printString@string+1
  1305  0366  120A  158A  2415  120A  118A  	fcall	_printString
  1306                           
  1307                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 261: if(servo_one_status)
  1308  036B  1283               	bcf	3,5	;RP0=0, select bank0
  1309  036C  1303               	bcf	3,6	;RP1=0, select bank0
  1310  036D  0860               	movf	_servo_one_status+1,w
  1311  036E  045F               	iorwf	_servo_one_status,w
  1312  036F  1903               	skipnz
  1313  0370  2B8B               	goto	l3196
  1314                           
  1315                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 262: {
  1316                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 263: instCtrl(0xC8);
  1317  0371  30C8               	movlw	200
  1318  0372  120A  158A  2461  120A  118A  	fcall	_instCtrl
  1319                           
  1320                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 264: printString("  ON   [OFF]");
  1321  0377  3013               	movlw	low ((STR_3+8)-__stringbase)
  1322  0378  00F4               	movwf	printString@string
  1323  0379  3080               	movlw	128
  1324  037A  00F5               	movwf	printString@string+1
  1325  037B  120A  158A  2415  120A  118A  	fcall	_printString
  1326                           
  1327                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 265: disableWater(1);
  1328  0380  3001               	movlw	1
  1329  0381  1283               	bcf	3,5	;RP0=0, select bank0
  1330  0382  1303               	bcf	3,6	;RP1=0, select bank0
  1331  0383  00A3               	movwf	disableWater@servoPin
  1332  0384  3000               	movlw	0
  1333  0385  00A4               	movwf	disableWater@servoPin+1
  1334  0386  120A  158A  2438  120A  118A  	fcall	_disableWater
  1335  038B                     l3196:	
  1336                           
  1337                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 266: }
  1338                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 267: if(servo_two_status)
  1339  038B  1283               	bcf	3,5	;RP0=0, select bank0
  1340  038C  1303               	bcf	3,6	;RP1=0, select bank0
  1341  038D  0862               	movf	_servo_two_status+1,w
  1342  038E  0461               	iorwf	_servo_two_status,w
  1343  038F  1903               	skipnz
  1344  0390  0008               	return
  1345                           
  1346                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 268: {
  1347                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 269: instCtrl(0x9C);
  1348  0391  309C               	movlw	156
  1349  0392  120A  158A  2461  120A  118A  	fcall	_instCtrl
  1350                           
  1351                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 270: printString("  ON   [OFF]");
  1352  0397  3013               	movlw	low ((STR_3+8)-__stringbase)
  1353  0398  00F4               	movwf	printString@string
  1354  0399  3080               	movlw	128
  1355  039A  00F5               	movwf	printString@string+1
  1356  039B  120A  158A  2415  120A  118A  	fcall	_printString
  1357                           
  1358                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 271: disableWater(2);
  1359  03A0  3002               	movlw	2
  1360  03A1  1283               	bcf	3,5	;RP0=0, select bank0
  1361  03A2  1303               	bcf	3,6	;RP1=0, select bank0
  1362  03A3  00A3               	movwf	disableWater@servoPin
  1363  03A4  3000               	movlw	0
  1364  03A5  00A4               	movwf	disableWater@servoPin+1
  1365  03A6  120A  158A  2438   	fcall	_disableWater
  1366  03A9  0008               	return
  1367  03AA                     __end_of_updateDisplay:	
  1368                           
  1369                           	psect	text2
  1370  0BF8                     __ptext2:	
  1371 ;; *************** function _timerDelay *****************
  1372 ;; Defined at:
  1373 ;;		line 281 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Automated_Water_Distributi
      +on\build\Alin_Ceballos_Francis_Gere_Ratificar_DP.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;		None
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;  localClock      2    4[COMMON] int 
  1378 ;; Return value:  Size  Location     Type
  1379 ;;		None               void
  1380 ;; Registers used:
  1381 ;;		wreg, status,2, btemp+1
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1387 ;;      Params:         0       0       0       0       0
  1388 ;;      Locals:         2       0       0       0       0
  1389 ;;      Temps:          0       0       0       0       0
  1390 ;;      Totals:         2       0       0       0       0
  1391 ;;Total ram usage:        2 bytes
  1392 ;; Hardware stack levels used:    1
  1393 ;; Hardware stack levels required when called:    1
  1394 ;; This function calls:
  1395 ;;		Nothing
  1396 ;; This function is called by:
  1397 ;;		_updateDisplay
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           
  1402                           ;psect for function _timerDelay
  1403  0BF8                     _timerDelay:	
  1404                           
  1405                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 299: int localClock = 0;
  1406                           
  1407                           ;incstack = 0
  1408                           ; Regs used in _timerDelay: [wreg+status,2+btemp+1]
  1409  0BF8  01F4               	clrf	timerDelay@localClock
  1410  0BF9  01F5               	clrf	timerDelay@localClock+1
  1411  0BFA                     l1846:	
  1412                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 300: while(localClock < 73)
  1413                           
  1414  0BFA  0875               	movf	timerDelay@localClock+1,w
  1415  0BFB  3A80               	xorlw	128
  1416  0BFC  00FF               	movwf	127
  1417  0BFD  3080               	movlw	128
  1418  0BFE  027F               	subwf	127,w
  1419  0BFF  1D03               	skipz
  1420  0C00  2C03               	goto	u1705
  1421  0C01  3049               	movlw	73
  1422  0C02  0274               	subwf	timerDelay@localClock,w
  1423  0C03                     u1705:	
  1424  0C03  1803               	btfsc	3,0
  1425  0C04  0008               	return
  1426                           
  1427                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 301: {
  1428                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 302: if(countflag == 1)
  1429  0C05  3001               	movlw	1
  1430  0C06  1683               	bsf	3,5	;RP0=1, select bank1
  1431  0C07  1303               	bcf	3,6	;RP1=0, select bank1
  1432  0C08  0634               	xorwf	_countflag^(0+128),w
  1433  0C09  0435               	iorwf	(_countflag+1)^(0+128),w
  1434  0C0A  1D03               	skipz
  1435  0C0B  2BFA               	goto	l1846
  1436                           
  1437                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 303: {
  1438                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 304: countflag = 0;
  1439  0C0C  01B4               	clrf	_countflag^(0+128)
  1440  0C0D  01B5               	clrf	(_countflag+1)^(0+128)
  1441                           
  1442                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 305: localClock++;
  1443  0C0E  3001               	movlw	1
  1444  0C0F  07F4               	addwf	timerDelay@localClock,f
  1445  0C10  1803               	skipnc
  1446  0C11  0AF5               	incf	timerDelay@localClock+1,f
  1447  0C12  3000               	movlw	0
  1448  0C13  07F5               	addwf	timerDelay@localClock+1,f
  1449  0C14  2BFA               	goto	l1846
  1450  0C15                     __end_of_timerDelay:	
  1451                           
  1452                           	psect	text3
  1453  0CB7                     __ptext3:	
  1454 ;; *************** function _enableWater *****************
  1455 ;; Defined at:
  1456 ;;		line 391 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Automated_Water_Distributi
      +on\build\Alin_Ceballos_Francis_Gere_Ratificar_DP.c"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;  servoPin        2    3[BANK0 ] int 
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;		None
  1461 ;; Return value:  Size  Location     Type
  1462 ;;		None               void
  1463 ;; Registers used:
  1464 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1465 ;; Tracked objects:
  1466 ;;		On entry : 0/0
  1467 ;;		On exit  : 0/0
  1468 ;;		Unchanged: 0/0
  1469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1470 ;;      Params:         0       2       0       0       0
  1471 ;;      Locals:         0       0       0       0       0
  1472 ;;      Temps:          0       0       0       0       0
  1473 ;;      Totals:         0       2       0       0       0
  1474 ;;Total ram usage:        2 bytes
  1475 ;; Hardware stack levels used:    1
  1476 ;; Hardware stack levels required when called:    2
  1477 ;; This function calls:
  1478 ;;		_rotateLeft
  1479 ;; This function is called by:
  1480 ;;		_updateDisplay
  1481 ;; This function uses a non-reentrant model
  1482 ;;
  1483                           
  1484                           
  1485                           ;psect for function _enableWater
  1486  0CB7                     _enableWater:	
  1487                           
  1488                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 400: switch(servoPin)
  1489                           
  1490                           ;incstack = 0
  1491                           ; Regs used in _enableWater: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1492  0CB7  2CD4               	goto	l2714
  1493  0CB8                     l2704:	
  1494                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 401: {
  1495                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 402: case 1:
  1496                           
  1497                           
  1498                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 403: rotateLeft(1);
  1499  0CB8  3001               	movlw	1
  1500  0CB9  00F4               	movwf	rotateLeft@servoPin
  1501  0CBA  3000               	movlw	0
  1502  0CBB  00F5               	movwf	rotateLeft@servoPin+1
  1503  0CBC  120A  158A  25EF   	fcall	_rotateLeft
  1504                           
  1505                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 404: servo_one_status = 1;
  1506  0CBF  3001               	movlw	1
  1507  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  1508  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  1509  0CC2  00DF               	movwf	_servo_one_status
  1510  0CC3  3000               	movlw	0
  1511  0CC4  00E0               	movwf	_servo_one_status+1
  1512                           
  1513                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 405: break;
  1514  0CC5  0008               	return
  1515  0CC6                     l2708:	
  1516                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 406: case 2:
  1517                           
  1518                           
  1519                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 407: rotateLeft(2);
  1520  0CC6  3002               	movlw	2
  1521  0CC7  00F4               	movwf	rotateLeft@servoPin
  1522  0CC8  3000               	movlw	0
  1523  0CC9  00F5               	movwf	rotateLeft@servoPin+1
  1524  0CCA  120A  158A  25EF   	fcall	_rotateLeft
  1525                           
  1526                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 408: servo_two_status = 1;
  1527  0CCD  3001               	movlw	1
  1528  0CCE  1283               	bcf	3,5	;RP0=0, select bank0
  1529  0CCF  1303               	bcf	3,6	;RP1=0, select bank0
  1530  0CD0  00E1               	movwf	_servo_two_status
  1531  0CD1  3000               	movlw	0
  1532  0CD2  00E2               	movwf	_servo_two_status+1
  1533                           
  1534                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 412: }
  1535                           
  1536                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 411: break;
  1537                           
  1538                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 410: default:
  1539                           
  1540                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 409: break;
  1541  0CD3  0008               	return
  1542  0CD4                     l2714:	
  1543                           
  1544                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1545                           ; Switch size 1, requested type "space"
  1546                           ; Number of cases is 1, Range of values is 0 to 0
  1547                           ; switch strategies available:
  1548                           ; Name         Instructions Cycles
  1549                           ; simple_byte            4     3 (average)
  1550                           ; direct_byte           11     8 (fixed)
  1551                           ; jumptable            260     6 (fixed)
  1552                           ;	Chosen strategy is simple_byte
  1553  0CD4  1283               	bcf	3,5	;RP0=0, select bank0
  1554  0CD5  1303               	bcf	3,6	;RP1=0, select bank0
  1555  0CD6  0824               	movf	enableWater@servoPin+1,w
  1556  0CD7  3A00               	xorlw	0	; case 0
  1557  0CD8  1903               	skipnz
  1558  0CD9  2CDB               	goto	l3310
  1559  0CDA  2CE3               	goto	l174
  1560  0CDB                     l3310:	
  1561                           
  1562                           ; Switch size 1, requested type "space"
  1563                           ; Number of cases is 2, Range of values is 1 to 2
  1564                           ; switch strategies available:
  1565                           ; Name         Instructions Cycles
  1566                           ; simple_byte            7     4 (average)
  1567                           ; direct_byte           17    11 (fixed)
  1568                           ; jumptable            263     9 (fixed)
  1569                           ;	Chosen strategy is simple_byte
  1570  0CDB  0823               	movf	enableWater@servoPin,w
  1571  0CDC  3A01               	xorlw	1	; case 1
  1572  0CDD  1903               	skipnz
  1573  0CDE  2CB8               	goto	l2704
  1574  0CDF  3A03               	xorlw	3	; case 2
  1575  0CE0  1903               	skipnz
  1576  0CE1  2CC6               	goto	l2708
  1577  0CE2  2CE3               	goto	l174
  1578  0CE3                     l174:	
  1579  0CE3  0008               	return
  1580  0CE4                     __end_of_enableWater:	
  1581                           
  1582                           	psect	text4
  1583  0DEF                     __ptext4:	
  1584 ;; *************** function _rotateLeft *****************
  1585 ;; Defined at:
  1586 ;;		line 451 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Automated_Water_Distributi
      +on\build\Alin_Ceballos_Francis_Gere_Ratificar_DP.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;  servoPin        2    4[COMMON] int 
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;		None
  1591 ;; Return value:  Size  Location     Type
  1592 ;;		None               void
  1593 ;; Registers used:
  1594 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1600 ;;      Params:         2       0       0       0       0
  1601 ;;      Locals:         0       0       0       0       0
  1602 ;;      Temps:          0       3       0       0       0
  1603 ;;      Totals:         2       3       0       0       0
  1604 ;;Total ram usage:        5 bytes
  1605 ;; Hardware stack levels used:    1
  1606 ;; Hardware stack levels required when called:    1
  1607 ;; This function calls:
  1608 ;;		Nothing
  1609 ;; This function is called by:
  1610 ;;		_enableWater
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614                           
  1615                           ;psect for function _rotateLeft
  1616  0DEF                     _rotateLeft:	
  1617                           
  1618                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 453: switch(servoPin)
  1619                           
  1620                           ;incstack = 0
  1621                           ; Regs used in _rotateLeft: [wreg-fsr0h+status,2+status,0]
  1622  0DEF  2E3C               	goto	l2480
  1623  0DF0                     l186:	
  1624                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 454: {
  1625                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 455: case 1:
  1626                           
  1627                           
  1628                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 456: RC3 = 1;
  1629  0DF0  1283               	bcf	3,5	;RP0=0, select bank0
  1630  0DF1  1303               	bcf	3,6	;RP1=0, select bank0
  1631  0DF2  1587               	bsf	7,3	;volatile
  1632                           
  1633                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 457: _delay((unsigned long)((1000)*(4000000/
      +                          4000000.0)));
  1634  0DF3  30F9               	movlw	249
  1635  0DF4  00A0               	movwf	??_rotateLeft
  1636  0DF5                     u3917:	
  1637  0DF5  0000               	nop
  1638  0DF6  0BA0               	decfsz	??_rotateLeft,f
  1639  0DF7  2DF5               	goto	u3917
  1640  0DF8  2DF9               	nop2	;nop
  1641  0DF9  0000               	nop
  1642                           
  1643                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 458: RC3 = 0;
  1644  0DFA  1283               	bcf	3,5	;RP0=0, select bank0
  1645  0DFB  1303               	bcf	3,6	;RP1=0, select bank0
  1646  0DFC  1187               	bcf	7,3	;volatile
  1647                           
  1648                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 459: _delay((unsigned long)((20)*(4000000/40
      +                          00.0)));
  1649  0DFD  301A               	movlw	26
  1650  0DFE  00A1               	movwf	??_rotateLeft+1
  1651  0DFF  30F8               	movlw	248
  1652  0E00  00A0               	movwf	??_rotateLeft
  1653  0E01                     u3927:	
  1654  0E01  0BA0               	decfsz	??_rotateLeft,f
  1655  0E02  2E01               	goto	u3927
  1656  0E03  0BA1               	decfsz	??_rotateLeft+1,f
  1657  0E04  2E01               	goto	u3927
  1658  0E05  0000               	nop
  1659                           
  1660                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 460: _delay((unsigned long)((1000)*(4000000/
      +                          4000.0)));
  1661  0E06  3006               	movlw	6
  1662  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  1663  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  1664  0E09  00A2               	movwf	??_rotateLeft+2
  1665  0E0A  3013               	movlw	19
  1666  0E0B  00A1               	movwf	??_rotateLeft+1
  1667  0E0C  30B1               	movlw	177
  1668  0E0D  00A0               	movwf	??_rotateLeft
  1669  0E0E                     u3937:	
  1670  0E0E  0BA0               	decfsz	??_rotateLeft,f
  1671  0E0F  2E0E               	goto	u3937
  1672  0E10  0BA1               	decfsz	??_rotateLeft+1,f
  1673  0E11  2E0E               	goto	u3937
  1674  0E12  0BA2               	decfsz	??_rotateLeft+2,f
  1675  0E13  2E0E               	goto	u3937
  1676  0E14  2E15               	nop2
  1677                           
  1678                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 461: break;
  1679  0E15  0008               	return
  1680  0E16                     l188:	
  1681                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 462: case 2:
  1682                           
  1683                           
  1684                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 463: RC4 = 1;
  1685  0E16  1283               	bcf	3,5	;RP0=0, select bank0
  1686  0E17  1303               	bcf	3,6	;RP1=0, select bank0
  1687  0E18  1607               	bsf	7,4	;volatile
  1688                           
  1689                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 464: _delay((unsigned long)((1000)*(4000000/
      +                          4000000.0)));
  1690  0E19  30F9               	movlw	249
  1691  0E1A  00A0               	movwf	??_rotateLeft
  1692  0E1B                     u3947:	
  1693  0E1B  0000               	nop
  1694  0E1C  0BA0               	decfsz	??_rotateLeft,f
  1695  0E1D  2E1B               	goto	u3947
  1696  0E1E  2E1F               	nop2	;nop
  1697  0E1F  0000               	nop
  1698                           
  1699                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 465: RC4 = 0;
  1700  0E20  1283               	bcf	3,5	;RP0=0, select bank0
  1701  0E21  1303               	bcf	3,6	;RP1=0, select bank0
  1702  0E22  1207               	bcf	7,4	;volatile
  1703                           
  1704                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 466: _delay((unsigned long)((20)*(4000000/40
      +                          00.0)));
  1705  0E23  301A               	movlw	26
  1706  0E24  00A1               	movwf	??_rotateLeft+1
  1707  0E25  30F8               	movlw	248
  1708  0E26  00A0               	movwf	??_rotateLeft
  1709  0E27                     u3957:	
  1710  0E27  0BA0               	decfsz	??_rotateLeft,f
  1711  0E28  2E27               	goto	u3957
  1712  0E29  0BA1               	decfsz	??_rotateLeft+1,f
  1713  0E2A  2E27               	goto	u3957
  1714  0E2B  0000               	nop
  1715                           
  1716                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 467: _delay((unsigned long)((1000)*(4000000/
      +                          4000.0)));
  1717  0E2C  3006               	movlw	6
  1718  0E2D  1283               	bcf	3,5	;RP0=0, select bank0
  1719  0E2E  1303               	bcf	3,6	;RP1=0, select bank0
  1720  0E2F  00A2               	movwf	??_rotateLeft+2
  1721  0E30  3013               	movlw	19
  1722  0E31  00A1               	movwf	??_rotateLeft+1
  1723  0E32  30B1               	movlw	177
  1724  0E33  00A0               	movwf	??_rotateLeft
  1725  0E34                     u3967:	
  1726  0E34  0BA0               	decfsz	??_rotateLeft,f
  1727  0E35  2E34               	goto	u3967
  1728  0E36  0BA1               	decfsz	??_rotateLeft+1,f
  1729  0E37  2E34               	goto	u3967
  1730  0E38  0BA2               	decfsz	??_rotateLeft+2,f
  1731  0E39  2E34               	goto	u3967
  1732  0E3A  2E3B               	nop2
  1733                           
  1734                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 471: }
  1735                           
  1736                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 470: break;
  1737                           
  1738                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 469: default:
  1739                           
  1740                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 468: break;
  1741  0E3B  0008               	return
  1742  0E3C                     l2480:	
  1743                           
  1744                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1745                           ; Switch size 1, requested type "space"
  1746                           ; Number of cases is 1, Range of values is 0 to 0
  1747                           ; switch strategies available:
  1748                           ; Name         Instructions Cycles
  1749                           ; simple_byte            4     3 (average)
  1750                           ; direct_byte           11     8 (fixed)
  1751                           ; jumptable            260     6 (fixed)
  1752                           ;	Chosen strategy is simple_byte
  1753  0E3C  0875               	movf	rotateLeft@servoPin+1,w
  1754  0E3D  3A00               	xorlw	0	; case 0
  1755  0E3E  1903               	skipnz
  1756  0E3F  2E41               	goto	l3312
  1757  0E40  2E49               	goto	l190
  1758  0E41                     l3312:	
  1759                           
  1760                           ; Switch size 1, requested type "space"
  1761                           ; Number of cases is 2, Range of values is 1 to 2
  1762                           ; switch strategies available:
  1763                           ; Name         Instructions Cycles
  1764                           ; simple_byte            7     4 (average)
  1765                           ; direct_byte           17    11 (fixed)
  1766                           ; jumptable            263     9 (fixed)
  1767                           ;	Chosen strategy is simple_byte
  1768  0E41  0874               	movf	rotateLeft@servoPin,w
  1769  0E42  3A01               	xorlw	1	; case 1
  1770  0E43  1903               	skipnz
  1771  0E44  2DF0               	goto	l186
  1772  0E45  3A03               	xorlw	3	; case 2
  1773  0E46  1903               	skipnz
  1774  0E47  2E16               	goto	l188
  1775  0E48  2E49               	goto	l190
  1776  0E49                     l190:	
  1777  0E49  0008               	return
  1778  0E4A                     __end_of_rotateLeft:	
  1779                           
  1780                           	psect	text5
  1781  07AD                     __ptext5:	
  1782 ;; *************** function _initSYS *****************
  1783 ;; Defined at:
  1784 ;;		line 157 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Automated_Water_Distributi
      +on\build\Alin_Ceballos_Francis_Gere_Ratificar_DP.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;		None
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;		None
  1789 ;; Return value:  Size  Location     Type
  1790 ;;		None               void
  1791 ;; Registers used:
  1792 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1798 ;;      Params:         0       0       0       0       0
  1799 ;;      Locals:         0       0       0       0       0
  1800 ;;      Temps:          0       0       0       0       0
  1801 ;;      Totals:         0       0       0       0       0
  1802 ;;Total ram usage:        0 bytes
  1803 ;; Hardware stack levels used:    1
  1804 ;; Hardware stack levels required when called:    3
  1805 ;; This function calls:
  1806 ;;		_disableWater
  1807 ;;		_instCtrl
  1808 ;;		_printString
  1809 ;; This function is called by:
  1810 ;;		_main
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814                           
  1815                           ;psect for function _initSYS
  1816  07AD                     _initSYS:	
  1817                           
  1818                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 159: instCtrl(0x80);
  1819                           
  1820                           ;incstack = 0
  1821                           ; Regs used in _initSYS: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1822  07AD  3080               	movlw	128
  1823  07AE  120A  158A  2461  120A  118A  	fcall	_instCtrl
  1824                           
  1825                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 160: printString("STARTING UP...");
  1826  07B3  3048               	movlw	low (STR_2-__stringbase)
  1827  07B4  00F4               	movwf	printString@string
  1828  07B5  3080               	movlw	128
  1829  07B6  00F5               	movwf	printString@string+1
  1830  07B7  120A  158A  2415  120A  118A  	fcall	_printString
  1831                           
  1832                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 161: instCtrl(0xC0);
  1833  07BC  30C0               	movlw	192
  1834  07BD  120A  158A  2461  120A  118A  	fcall	_instCtrl
  1835                           
  1836                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 162: printString("VALVE 1:  ON   [OFF]");
  1837  07C2  300B               	movlw	low (STR_3-__stringbase)
  1838  07C3  00F4               	movwf	printString@string
  1839  07C4  3080               	movlw	128
  1840  07C5  00F5               	movwf	printString@string+1
  1841  07C6  120A  158A  2415  120A  118A  	fcall	_printString
  1842                           
  1843                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 164: instCtrl(0x94);
  1844  07CB  3094               	movlw	148
  1845  07CC  120A  158A  2461  120A  118A  	fcall	_instCtrl
  1846                           
  1847                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 165: printString("VALVE 2:  ON   [OFF]");
  1848  07D1  3020               	movlw	low (STR_4-__stringbase)
  1849  07D2  00F4               	movwf	printString@string
  1850  07D3  3080               	movlw	128
  1851  07D4  00F5               	movwf	printString@string+1
  1852  07D5  120A  158A  2415  120A  118A  	fcall	_printString
  1853                           
  1854                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 166: instCtrl(0xD4);
  1855  07DA  30D4               	movlw	212
  1856  07DB  120A  158A  2461  120A  118A  	fcall	_instCtrl
  1857                           
  1858                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 167: printString("WATER: ");
  1859  07E0  3072               	movlw	low (STR_5-__stringbase)
  1860  07E1  00F4               	movwf	printString@string
  1861  07E2  3080               	movlw	128
  1862  07E3  00F5               	movwf	printString@string+1
  1863  07E4  120A  158A  2415  120A  118A  	fcall	_printString
  1864                           
  1865                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 168: disableWater(1); disableWater(2);
  1866  07E9  3001               	movlw	1
  1867  07EA  1283               	bcf	3,5	;RP0=0, select bank0
  1868  07EB  1303               	bcf	3,6	;RP1=0, select bank0
  1869  07EC  00A3               	movwf	disableWater@servoPin
  1870  07ED  3000               	movlw	0
  1871  07EE  00A4               	movwf	disableWater@servoPin+1
  1872  07EF  120A  158A  2438  120A  118A  	fcall	_disableWater
  1873  07F4  3002               	movlw	2
  1874  07F5  1283               	bcf	3,5	;RP0=0, select bank0
  1875  07F6  1303               	bcf	3,6	;RP1=0, select bank0
  1876  07F7  00A3               	movwf	disableWater@servoPin
  1877  07F8  3000               	movlw	0
  1878  07F9  00A4               	movwf	disableWater@servoPin+1
  1879  07FA  120A  158A  2438   	fcall	_disableWater
  1880  07FD  0008               	return
  1881  07FE                     __end_of_initSYS:	
  1882                           
  1883                           	psect	text6
  1884  0C38                     __ptext6:	
  1885 ;; *************** function _disableWater *****************
  1886 ;; Defined at:
  1887 ;;		line 421 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Automated_Water_Distributi
      +on\build\Alin_Ceballos_Francis_Gere_Ratificar_DP.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;  servoPin        2    3[BANK0 ] int 
  1890 ;; Auto vars:     Size  Location     Type
  1891 ;;		None
  1892 ;; Return value:  Size  Location     Type
  1893 ;;		None               void
  1894 ;; Registers used:
  1895 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1896 ;; Tracked objects:
  1897 ;;		On entry : 0/0
  1898 ;;		On exit  : 0/0
  1899 ;;		Unchanged: 0/0
  1900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1901 ;;      Params:         0       2       0       0       0
  1902 ;;      Locals:         0       0       0       0       0
  1903 ;;      Temps:          0       0       0       0       0
  1904 ;;      Totals:         0       2       0       0       0
  1905 ;;Total ram usage:        2 bytes
  1906 ;; Hardware stack levels used:    1
  1907 ;; Hardware stack levels required when called:    2
  1908 ;; This function calls:
  1909 ;;		_rotateRight
  1910 ;; This function is called by:
  1911 ;;		_initSYS
  1912 ;;		_updateDisplay
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           
  1917                           ;psect for function _disableWater
  1918  0C38                     _disableWater:	
  1919                           
  1920                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 430: switch(servoPin)
  1921                           
  1922                           ;incstack = 0
  1923                           ; Regs used in _disableWater: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1924  0C38  2C51               	goto	l2634
  1925  0C39                     l2624:	
  1926                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 431: {
  1927                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 432: case 1:
  1928                           
  1929                           
  1930                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 433: rotateRight(1);
  1931  0C39  3001               	movlw	1
  1932  0C3A  00F4               	movwf	rotateRight@servoPin
  1933  0C3B  3000               	movlw	0
  1934  0C3C  00F5               	movwf	rotateRight@servoPin+1
  1935  0C3D  120A  158A  26A9   	fcall	_rotateRight
  1936                           
  1937                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 434: servo_one_status = 0;
  1938  0C40  1283               	bcf	3,5	;RP0=0, select bank0
  1939  0C41  1303               	bcf	3,6	;RP1=0, select bank0
  1940  0C42  01DF               	clrf	_servo_one_status
  1941  0C43  01E0               	clrf	_servo_one_status+1
  1942                           
  1943                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 435: break;
  1944  0C44  0008               	return
  1945  0C45                     l2628:	
  1946                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 436: case 2:
  1947                           
  1948                           
  1949                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 437: rotateRight(2);
  1950  0C45  3002               	movlw	2
  1951  0C46  00F4               	movwf	rotateRight@servoPin
  1952  0C47  3000               	movlw	0
  1953  0C48  00F5               	movwf	rotateRight@servoPin+1
  1954  0C49  120A  158A  26A9   	fcall	_rotateRight
  1955                           
  1956                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 438: servo_two_status = 0;
  1957  0C4C  1283               	bcf	3,5	;RP0=0, select bank0
  1958  0C4D  1303               	bcf	3,6	;RP1=0, select bank0
  1959  0C4E  01E1               	clrf	_servo_two_status
  1960  0C4F  01E2               	clrf	_servo_two_status+1
  1961                           
  1962                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 442: }
  1963                           
  1964                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 441: break;
  1965                           
  1966                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 440: default:
  1967                           
  1968                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 439: break;
  1969  0C50  0008               	return
  1970  0C51                     l2634:	
  1971                           
  1972                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1973                           ; Switch size 1, requested type "space"
  1974                           ; Number of cases is 1, Range of values is 0 to 0
  1975                           ; switch strategies available:
  1976                           ; Name         Instructions Cycles
  1977                           ; simple_byte            4     3 (average)
  1978                           ; direct_byte           11     8 (fixed)
  1979                           ; jumptable            260     6 (fixed)
  1980                           ;	Chosen strategy is simple_byte
  1981  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  1982  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  1983  0C53  0824               	movf	disableWater@servoPin+1,w
  1984  0C54  3A00               	xorlw	0	; case 0
  1985  0C55  1903               	skipnz
  1986  0C56  2C58               	goto	l3314
  1987  0C57  2C60               	goto	l182
  1988  0C58                     l3314:	
  1989                           
  1990                           ; Switch size 1, requested type "space"
  1991                           ; Number of cases is 2, Range of values is 1 to 2
  1992                           ; switch strategies available:
  1993                           ; Name         Instructions Cycles
  1994                           ; simple_byte            7     4 (average)
  1995                           ; direct_byte           17    11 (fixed)
  1996                           ; jumptable            263     9 (fixed)
  1997                           ;	Chosen strategy is simple_byte
  1998  0C58  0823               	movf	disableWater@servoPin,w
  1999  0C59  3A01               	xorlw	1	; case 1
  2000  0C5A  1903               	skipnz
  2001  0C5B  2C39               	goto	l2624
  2002  0C5C  3A03               	xorlw	3	; case 2
  2003  0C5D  1903               	skipnz
  2004  0C5E  2C45               	goto	l2628
  2005  0C5F  2C60               	goto	l182
  2006  0C60                     l182:	
  2007  0C60  0008               	return
  2008  0C61                     __end_of_disableWater:	
  2009                           
  2010                           	psect	text7
  2011  0EA9                     __ptext7:	
  2012 ;; *************** function _rotateRight *****************
  2013 ;; Defined at:
  2014 ;;		line 480 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Automated_Water_Distributi
      +on\build\Alin_Ceballos_Francis_Gere_Ratificar_DP.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;  servoPin        2    4[COMMON] int 
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;		None
  2019 ;; Return value:  Size  Location     Type
  2020 ;;		None               void
  2021 ;; Registers used:
  2022 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2028 ;;      Params:         2       0       0       0       0
  2029 ;;      Locals:         0       0       0       0       0
  2030 ;;      Temps:          0       3       0       0       0
  2031 ;;      Totals:         2       3       0       0       0
  2032 ;;Total ram usage:        5 bytes
  2033 ;; Hardware stack levels used:    1
  2034 ;; Hardware stack levels required when called:    1
  2035 ;; This function calls:
  2036 ;;		Nothing
  2037 ;; This function is called by:
  2038 ;;		_disableWater
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           
  2042                           
  2043                           ;psect for function _rotateRight
  2044  0EA9                     _rotateRight:	
  2045                           
  2046                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 482: switch(servoPin)
  2047                           
  2048                           ;incstack = 0
  2049                           ; Regs used in _rotateRight: [wreg-fsr0h+status,2+status,0]
  2050  0EA9  2EFA               	goto	l2498
  2051  0EAA                     l194:	
  2052                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 483: {
  2053                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 484: case 1:
  2054                           
  2055                           
  2056                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 485: RC3 = 1;
  2057  0EAA  1283               	bcf	3,5	;RP0=0, select bank0
  2058  0EAB  1303               	bcf	3,6	;RP1=0, select bank0
  2059  0EAC  1587               	bsf	7,3	;volatile
  2060                           
  2061                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 486: _delay((unsigned long)((2000)*(4000000/
      +                          4000000.0)));
  2062  0EAD  3003               	movlw	3
  2063  0EAE  00A1               	movwf	??_rotateRight+1
  2064  0EAF  3097               	movlw	151
  2065  0EB0  00A0               	movwf	??_rotateRight
  2066  0EB1                     u3977:	
  2067  0EB1  0BA0               	decfsz	??_rotateRight,f
  2068  0EB2  2EB1               	goto	u3977
  2069  0EB3  0BA1               	decfsz	??_rotateRight+1,f
  2070  0EB4  2EB1               	goto	u3977
  2071  0EB5  2EB6               	nop2
  2072                           
  2073                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 487: RC3 = 0;
  2074  0EB6  1283               	bcf	3,5	;RP0=0, select bank0
  2075  0EB7  1303               	bcf	3,6	;RP1=0, select bank0
  2076  0EB8  1187               	bcf	7,3	;volatile
  2077                           
  2078                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 488: _delay((unsigned long)((20)*(4000000/40
      +                          00.0)));
  2079  0EB9  301A               	movlw	26
  2080  0EBA  00A1               	movwf	??_rotateRight+1
  2081  0EBB  30F8               	movlw	248
  2082  0EBC  00A0               	movwf	??_rotateRight
  2083  0EBD                     u3987:	
  2084  0EBD  0BA0               	decfsz	??_rotateRight,f
  2085  0EBE  2EBD               	goto	u3987
  2086  0EBF  0BA1               	decfsz	??_rotateRight+1,f
  2087  0EC0  2EBD               	goto	u3987
  2088  0EC1  0000               	nop
  2089                           
  2090                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 489: _delay((unsigned long)((1000)*(4000000/
      +                          4000.0)));
  2091  0EC2  3006               	movlw	6
  2092  0EC3  1283               	bcf	3,5	;RP0=0, select bank0
  2093  0EC4  1303               	bcf	3,6	;RP1=0, select bank0
  2094  0EC5  00A2               	movwf	??_rotateRight+2
  2095  0EC6  3013               	movlw	19
  2096  0EC7  00A1               	movwf	??_rotateRight+1
  2097  0EC8  30B1               	movlw	177
  2098  0EC9  00A0               	movwf	??_rotateRight
  2099  0ECA                     u3997:	
  2100  0ECA  0BA0               	decfsz	??_rotateRight,f
  2101  0ECB  2ECA               	goto	u3997
  2102  0ECC  0BA1               	decfsz	??_rotateRight+1,f
  2103  0ECD  2ECA               	goto	u3997
  2104  0ECE  0BA2               	decfsz	??_rotateRight+2,f
  2105  0ECF  2ECA               	goto	u3997
  2106  0ED0  2ED1               	nop2
  2107                           
  2108                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 490: break;
  2109  0ED1  0008               	return
  2110  0ED2                     l196:	
  2111                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 491: case 2:
  2112                           
  2113                           
  2114                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 492: RC4 = 1;
  2115  0ED2  1283               	bcf	3,5	;RP0=0, select bank0
  2116  0ED3  1303               	bcf	3,6	;RP1=0, select bank0
  2117  0ED4  1607               	bsf	7,4	;volatile
  2118                           
  2119                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 493: _delay((unsigned long)((2000)*(4000000/
      +                          4000000.0)));
  2120  0ED5  3003               	movlw	3
  2121  0ED6  00A1               	movwf	??_rotateRight+1
  2122  0ED7  3097               	movlw	151
  2123  0ED8  00A0               	movwf	??_rotateRight
  2124  0ED9                     u4007:	
  2125  0ED9  0BA0               	decfsz	??_rotateRight,f
  2126  0EDA  2ED9               	goto	u4007
  2127  0EDB  0BA1               	decfsz	??_rotateRight+1,f
  2128  0EDC  2ED9               	goto	u4007
  2129  0EDD  2EDE               	nop2
  2130                           
  2131                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 494: RC4 = 0;
  2132  0EDE  1283               	bcf	3,5	;RP0=0, select bank0
  2133  0EDF  1303               	bcf	3,6	;RP1=0, select bank0
  2134  0EE0  1207               	bcf	7,4	;volatile
  2135                           
  2136                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 495: _delay((unsigned long)((20)*(4000000/40
      +                          00.0)));
  2137  0EE1  301A               	movlw	26
  2138  0EE2  00A1               	movwf	??_rotateRight+1
  2139  0EE3  30F8               	movlw	248
  2140  0EE4  00A0               	movwf	??_rotateRight
  2141  0EE5                     u4017:	
  2142  0EE5  0BA0               	decfsz	??_rotateRight,f
  2143  0EE6  2EE5               	goto	u4017
  2144  0EE7  0BA1               	decfsz	??_rotateRight+1,f
  2145  0EE8  2EE5               	goto	u4017
  2146  0EE9  0000               	nop
  2147                           
  2148                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 496: _delay((unsigned long)((1000)*(4000000/
      +                          4000.0)));
  2149  0EEA  3006               	movlw	6
  2150  0EEB  1283               	bcf	3,5	;RP0=0, select bank0
  2151  0EEC  1303               	bcf	3,6	;RP1=0, select bank0
  2152  0EED  00A2               	movwf	??_rotateRight+2
  2153  0EEE  3013               	movlw	19
  2154  0EEF  00A1               	movwf	??_rotateRight+1
  2155  0EF0  30B1               	movlw	177
  2156  0EF1  00A0               	movwf	??_rotateRight
  2157  0EF2                     u4027:	
  2158  0EF2  0BA0               	decfsz	??_rotateRight,f
  2159  0EF3  2EF2               	goto	u4027
  2160  0EF4  0BA1               	decfsz	??_rotateRight+1,f
  2161  0EF5  2EF2               	goto	u4027
  2162  0EF6  0BA2               	decfsz	??_rotateRight+2,f
  2163  0EF7  2EF2               	goto	u4027
  2164  0EF8  2EF9               	nop2
  2165                           
  2166                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 500: }
  2167                           
  2168                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 499: break;
  2169                           
  2170                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 498: default:
  2171                           
  2172                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 497: break;
  2173  0EF9  0008               	return
  2174  0EFA                     l2498:	
  2175                           
  2176                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2177                           ; Switch size 1, requested type "space"
  2178                           ; Number of cases is 1, Range of values is 0 to 0
  2179                           ; switch strategies available:
  2180                           ; Name         Instructions Cycles
  2181                           ; simple_byte            4     3 (average)
  2182                           ; direct_byte           11     8 (fixed)
  2183                           ; jumptable            260     6 (fixed)
  2184                           ;	Chosen strategy is simple_byte
  2185  0EFA  0875               	movf	rotateRight@servoPin+1,w
  2186  0EFB  3A00               	xorlw	0	; case 0
  2187  0EFC  1903               	skipnz
  2188  0EFD  2EFF               	goto	l3316
  2189  0EFE  2F07               	goto	l198
  2190  0EFF                     l3316:	
  2191                           
  2192                           ; Switch size 1, requested type "space"
  2193                           ; Number of cases is 2, Range of values is 1 to 2
  2194                           ; switch strategies available:
  2195                           ; Name         Instructions Cycles
  2196                           ; simple_byte            7     4 (average)
  2197                           ; direct_byte           17    11 (fixed)
  2198                           ; jumptable            263     9 (fixed)
  2199                           ;	Chosen strategy is simple_byte
  2200  0EFF  0874               	movf	rotateRight@servoPin,w
  2201  0F00  3A01               	xorlw	1	; case 1
  2202  0F01  1903               	skipnz
  2203  0F02  2EAA               	goto	l194
  2204  0F03  3A03               	xorlw	3	; case 2
  2205  0F04  1903               	skipnz
  2206  0F05  2ED2               	goto	l196
  2207  0F06  2F07               	goto	l198
  2208  0F07                     l198:	
  2209  0F07  0008               	return
  2210  0F08                     __end_of_rotateRight:	
  2211                           
  2212                           	psect	text8
  2213  0BDB                     __ptext8:	
  2214 ;; *************** function _initLCD *****************
  2215 ;; Defined at:
  2216 ;;		line 543 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Automated_Water_Distributi
      +on\build\Alin_Ceballos_Francis_Gere_Ratificar_DP.c"
  2217 ;; Parameters:    Size  Location     Type
  2218 ;;		None
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;		None
  2221 ;; Return value:  Size  Location     Type
  2222 ;;		None               void
  2223 ;; Registers used:
  2224 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2230 ;;      Params:         0       0       0       0       0
  2231 ;;      Locals:         0       0       0       0       0
  2232 ;;      Temps:          0       0       0       0       0
  2233 ;;      Totals:         0       0       0       0       0
  2234 ;;Total ram usage:        0 bytes
  2235 ;; Hardware stack levels used:    1
  2236 ;; Hardware stack levels required when called:    2
  2237 ;; This function calls:
  2238 ;;		_instCtrl
  2239 ;; This function is called by:
  2240 ;;		_main
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244                           
  2245                           ;psect for function _initLCD
  2246  0BDB                     _initLCD:	
  2247                           
  2248                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 545: instCtrl(0x38);
  2249                           
  2250                           ;incstack = 0
  2251                           ; Regs used in _initLCD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2252  0BDB  3038               	movlw	56
  2253  0BDC  120A  158A  2461  120A  158A  	fcall	_instCtrl
  2254                           
  2255                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 546: instCtrl(0x0C);
  2256  0BE1  300C               	movlw	12
  2257  0BE2  120A  158A  2461  120A  158A  	fcall	_instCtrl
  2258                           
  2259                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 547: instCtrl(0x01);
  2260  0BE7  3001               	movlw	1
  2261  0BE8  120A  158A  2461  120A  158A  	fcall	_instCtrl
  2262                           
  2263                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 548: instCtrl(0x06);
  2264  0BED  3006               	movlw	6
  2265  0BEE  120A  158A  2461  120A  158A  	fcall	_instCtrl
  2266                           
  2267                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 549: instCtrl(0x80);
  2268  0BF3  3080               	movlw	128
  2269  0BF4  120A  158A  2461   	fcall	_instCtrl
  2270  0BF7  0008               	return
  2271  0BF8                     __end_of_initLCD:	
  2272                           
  2273                           	psect	text9
  2274  002C                     __ptext9:	
  2275 ;; *************** function _checkWaterLevel *****************
  2276 ;; Defined at:
  2277 ;;		line 321 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Automated_Water_Distributi
      +on\build\Alin_Ceballos_Francis_Gere_Ratificar_DP.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;		None
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;  i               2   16[BANK1 ] int 
  2282 ;;  percentage     10    0[BANK1 ] unsigned char [10]
  2283 ;;  percentValue    2   14[BANK1 ] int 
  2284 ;;  distance        2   12[BANK1 ] int 
  2285 ;;  duration        2   10[BANK1 ] unsigned int 
  2286 ;; Return value:  Size  Location     Type
  2287 ;;		None               void
  2288 ;; Registers used:
  2289 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2295 ;;      Params:         0       0       0       0       0
  2296 ;;      Locals:         0       0      18       0       0
  2297 ;;      Temps:          0       1       0       0       0
  2298 ;;      Totals:         0       1      18       0       0
  2299 ;;Total ram usage:       19 bytes
  2300 ;; Hardware stack levels used:    1
  2301 ;; Hardware stack levels required when called:    3
  2302 ;; This function calls:
  2303 ;;		___awmod
  2304 ;;		___ftadd
  2305 ;;		___ftdiv
  2306 ;;		___ftge
  2307 ;;		___ftmul
  2308 ;;		___ftneg
  2309 ;;		___fttol
  2310 ;;		___lwtoft
  2311 ;;		_instCtrl
  2312 ;;		_printString
  2313 ;;		_sprintf
  2314 ;; This function is called by:
  2315 ;;		_main
  2316 ;; This function uses a non-reentrant model
  2317 ;;
  2318                           
  2319                           
  2320                           ;psect for function _checkWaterLevel
  2321  002C                     _checkWaterLevel:	
  2322                           
  2323                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 323: TMR1H = TMR1L = 0;
  2324                           
  2325                           ;incstack = 0
  2326                           ; Regs used in _checkWaterLevel: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2327  002C  1283               	bcf	3,5	;RP0=0, select bank0
  2328  002D  1303               	bcf	3,6	;RP1=0, select bank0
  2329  002E  018E               	clrf	14	;volatile
  2330  002F  018F               	clrf	15	;volatile
  2331                           
  2332                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 324: RB1 = 1;
  2333  0030  1486               	bsf	6,1	;volatile
  2334                           
  2335                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 325: _delay((unsigned long)((10)*(4000000/40
      +                          00000.0)));
  2336  0031  3003               	movlw	3
  2337  0032  00D9               	movwf	??_checkWaterLevel
  2338  0033                     u4037:	
  2339  0033  0BD9               	decfsz	??_checkWaterLevel,f
  2340  0034  2833               	goto	u4037
  2341                           
  2342                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 327: RB1 = 0;
  2343  0035  1283               	bcf	3,5	;RP0=0, select bank0
  2344  0036  1303               	bcf	3,6	;RP1=0, select bank0
  2345  0037  1086               	bcf	6,1	;volatile
  2346  0038                     l146:	
  2347                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 329: while(!RB2);
  2348                           
  2349  0038  1D06               	btfss	6,2	;volatile
  2350  0039  2838               	goto	l146
  2351                           
  2352                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 330: TMR1ON = 1;
  2353  003A  1410               	bsf	16,0	;volatile
  2354  003B                     l149:	
  2355                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 331: while(RB2);
  2356                           
  2357  003B  1906               	btfsc	6,2	;volatile
  2358  003C  283B               	goto	l149
  2359                           
  2360                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 333: unsigned int duration = (int)(((TMR1H <
      +                          < 8)|(TMR1L)));
  2361  003D  080F               	movf	15,w	;volatile
  2362  003E  1683               	bsf	3,5	;RP0=1, select bank1
  2363  003F  1303               	bcf	3,6	;RP1=0, select bank1
  2364  0040  01C7               	clrf	(checkWaterLevel@duration+1)^(0+128)
  2365  0041  07C7               	addwf	(checkWaterLevel@duration+1)^(0+128),f
  2366  0042  1283               	bcf	3,5	;RP0=0, select bank0
  2367  0043  1303               	bcf	3,6	;RP1=0, select bank0
  2368  0044  080E               	movf	14,w	;volatile
  2369  0045  1683               	bsf	3,5	;RP0=1, select bank1
  2370  0046  1303               	bcf	3,6	;RP1=0, select bank1
  2371  0047  01C6               	clrf	checkWaterLevel@duration^(0+128)
  2372  0048  07C6               	addwf	checkWaterLevel@duration^(0+128),f
  2373                           
  2374                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 334: TMR1ON = 0;
  2375  0049  1283               	bcf	3,5	;RP0=0, select bank0
  2376  004A  1303               	bcf	3,6	;RP1=0, select bank0
  2377  004B  1010               	bcf	16,0	;volatile
  2378                           
  2379                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 335: int distance = duration*(0.034/2);
  2380  004C  1683               	bsf	3,5	;RP0=1, select bank1
  2381  004D  1303               	bcf	3,6	;RP1=0, select bank1
  2382  004E  0847               	movf	(checkWaterLevel@duration+1)^(0+128),w
  2383  004F  1283               	bcf	3,5	;RP0=0, select bank0
  2384  0050  1303               	bcf	3,6	;RP1=0, select bank0
  2385  0051  01A9               	clrf	___lwtoft@c+1
  2386  0052  07A9               	addwf	___lwtoft@c+1,f
  2387  0053  1683               	bsf	3,5	;RP0=1, select bank1
  2388  0054  1303               	bcf	3,6	;RP1=0, select bank1
  2389  0055  0846               	movf	checkWaterLevel@duration^(0+128),w
  2390  0056  1283               	bcf	3,5	;RP0=0, select bank0
  2391  0057  1303               	bcf	3,6	;RP1=0, select bank0
  2392  0058  01A8               	clrf	___lwtoft@c
  2393  0059  07A8               	addwf	___lwtoft@c,f
  2394  005A  120A  158A  23C3  120A  118A  	fcall	___lwtoft
  2395  005F  1283               	bcf	3,5	;RP0=0, select bank0
  2396  0060  1303               	bcf	3,6	;RP1=0, select bank0
  2397  0061  0828               	movf	?___lwtoft,w
  2398  0062  00AE               	movwf	___ftmul@f2
  2399  0063  0829               	movf	?___lwtoft+1,w
  2400  0064  00AF               	movwf	___ftmul@f2+1
  2401  0065  082A               	movf	?___lwtoft+2,w
  2402  0066  00B0               	movwf	___ftmul@f2+2
  2403  0067  3044               	movlw	68
  2404  0068  00AB               	movwf	___ftmul@f1
  2405  0069  308B               	movlw	139
  2406  006A  00AC               	movwf	___ftmul@f1+1
  2407  006B  303C               	movlw	60
  2408  006C  00AD               	movwf	___ftmul@f1+2
  2409  006D  120A  118A  258E  120A  118A  	fcall	___ftmul
  2410  0072  1283               	bcf	3,5	;RP0=0, select bank0
  2411  0073  1303               	bcf	3,6	;RP1=0, select bank0
  2412  0074  082B               	movf	?___ftmul,w
  2413  0075  00CB               	movwf	___fttol@f1
  2414  0076  082C               	movf	?___ftmul+1,w
  2415  0077  00CC               	movwf	___fttol@f1+1
  2416  0078  082D               	movf	?___ftmul+2,w
  2417  0079  00CD               	movwf	___fttol@f1+2
  2418  007A  120A  158A  2772  120A  118A  	fcall	___fttol
  2419  007F  1283               	bcf	3,5	;RP0=0, select bank0
  2420  0080  1303               	bcf	3,6	;RP1=0, select bank0
  2421  0081  084C               	movf	?___fttol+1,w
  2422  0082  1683               	bsf	3,5	;RP0=1, select bank1
  2423  0083  1303               	bcf	3,6	;RP1=0, select bank1
  2424  0084  01C9               	clrf	(checkWaterLevel@distance+1)^(0+128)
  2425  0085  07C9               	addwf	(checkWaterLevel@distance+1)^(0+128),f
  2426  0086  1283               	bcf	3,5	;RP0=0, select bank0
  2427  0087  1303               	bcf	3,6	;RP1=0, select bank0
  2428  0088  084B               	movf	?___fttol,w
  2429  0089  1683               	bsf	3,5	;RP0=1, select bank1
  2430  008A  1303               	bcf	3,6	;RP1=0, select bank1
  2431  008B  01C8               	clrf	checkWaterLevel@distance^(0+128)
  2432  008C  07C8               	addwf	checkWaterLevel@distance^(0+128),f
  2433                           
  2434                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 336: collection[index++] = distance;
  2435  008D  1283               	bcf	3,5	;RP0=0, select bank0
  2436  008E  1303               	bcf	3,6	;RP1=0, select bank0
  2437  008F  085D               	movf	_index,w
  2438  0090  00D9               	movwf	??_checkWaterLevel
  2439  0091  0759               	addwf	??_checkWaterLevel,w
  2440  0092  3EA0               	addlw	_collection& (0+255)
  2441  0093  0084               	movwf	4
  2442  0094  1683               	bsf	3,5	;RP0=1, select bank1
  2443  0095  1303               	bcf	3,6	;RP1=0, select bank1
  2444  0096  0848               	movf	checkWaterLevel@distance^(0+128),w
  2445  0097  1383               	bcf	3,7	;select IRP bank1
  2446  0098  0080               	movwf	0
  2447  0099  0A84               	incf	4,f
  2448  009A  0849               	movf	(checkWaterLevel@distance+1)^(0+128),w
  2449  009B  0080               	movwf	0
  2450  009C  3001               	movlw	1
  2451  009D  1283               	bcf	3,5	;RP0=0, select bank0
  2452  009E  1303               	bcf	3,6	;RP1=0, select bank0
  2453  009F  07DD               	addwf	_index,f
  2454  00A0  1803               	skipnc
  2455  00A1  0ADE               	incf	_index+1,f
  2456  00A2  3000               	movlw	0
  2457  00A3  07DE               	addwf	_index+1,f
  2458                           
  2459                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 337: for(int i=0;i<10;i++)
  2460  00A4  1683               	bsf	3,5	;RP0=1, select bank1
  2461  00A5  1303               	bcf	3,6	;RP1=0, select bank1
  2462  00A6  01CC               	clrf	checkWaterLevel@i^(0+128)
  2463  00A7  01CD               	clrf	(checkWaterLevel@i+1)^(0+128)
  2464  00A8  084D               	movf	(checkWaterLevel@i+1)^(0+128),w
  2465  00A9  3A80               	xorlw	128
  2466  00AA  00FF               	movwf	127
  2467  00AB  3080               	movlw	128
  2468  00AC  027F               	subwf	127,w
  2469  00AD  1D03               	skipz
  2470  00AE  28B1               	goto	u3735
  2471  00AF  300A               	movlw	10
  2472  00B0  024C               	subwf	checkWaterLevel@i^(0+128),w
  2473  00B1                     u3735:	
  2474  00B1  1803               	btfsc	3,0
  2475  00B2  28F5               	goto	l3046
  2476  00B3                     l3040:	
  2477                           
  2478                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 338: {
  2479                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 339: avg += collection[i];
  2480  00B3  1683               	bsf	3,5	;RP0=1, select bank1
  2481  00B4  1303               	bcf	3,6	;RP1=0, select bank1
  2482  00B5  084C               	movf	checkWaterLevel@i^(0+128),w
  2483  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  2484  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  2485  00B8  00D9               	movwf	??_checkWaterLevel
  2486  00B9  0759               	addwf	??_checkWaterLevel,w
  2487  00BA  3EA0               	addlw	_collection& (0+255)
  2488  00BB  0084               	movwf	4
  2489  00BC  1383               	bcf	3,7	;select IRP bank1
  2490  00BD  0800               	movf	0,w
  2491  00BE  00A8               	movwf	___lwtoft@c
  2492  00BF  0A84               	incf	4,f
  2493  00C0  0800               	movf	0,w
  2494  00C1  00A9               	movwf	___lwtoft@c+1
  2495  00C2  120A  158A  23C3  120A  118A  	fcall	___lwtoft
  2496  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  2497  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  2498  00C9  0828               	movf	?___lwtoft,w
  2499  00CA  00BE               	movwf	___ftadd@f1
  2500  00CB  0829               	movf	?___lwtoft+1,w
  2501  00CC  00BF               	movwf	___ftadd@f1+1
  2502  00CD  082A               	movf	?___lwtoft+2,w
  2503  00CE  00C0               	movwf	___ftadd@f1+2
  2504  00CF  085A               	movf	_avg,w
  2505  00D0  00C1               	movwf	___ftadd@f2
  2506  00D1  085B               	movf	_avg+1,w
  2507  00D2  00C2               	movwf	___ftadd@f2+1
  2508  00D3  085C               	movf	_avg+2,w
  2509  00D4  00C3               	movwf	___ftadd@f2+2
  2510  00D5  120A  118A  23AA  120A  118A  	fcall	___ftadd
  2511  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  2512  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  2513  00DC  083E               	movf	?___ftadd,w
  2514  00DD  00DA               	movwf	_avg
  2515  00DE  083F               	movf	?___ftadd+1,w
  2516  00DF  00DB               	movwf	_avg+1
  2517  00E0  0840               	movf	?___ftadd+2,w
  2518  00E1  00DC               	movwf	_avg+2
  2519  00E2  3001               	movlw	1
  2520  00E3  1683               	bsf	3,5	;RP0=1, select bank1
  2521  00E4  1303               	bcf	3,6	;RP1=0, select bank1
  2522  00E5  07CC               	addwf	checkWaterLevel@i^(0+128),f
  2523  00E6  1803               	skipnc
  2524  00E7  0ACD               	incf	(checkWaterLevel@i+1)^(0+128),f
  2525  00E8  3000               	movlw	0
  2526  00E9  07CD               	addwf	(checkWaterLevel@i+1)^(0+128),f
  2527  00EA  084D               	movf	(checkWaterLevel@i+1)^(0+128),w
  2528  00EB  3A80               	xorlw	128
  2529  00EC  00FF               	movwf	127
  2530  00ED  3080               	movlw	128
  2531  00EE  027F               	subwf	127,w
  2532  00EF  1D03               	skipz
  2533  00F0  28F3               	goto	u3745
  2534  00F1  300A               	movlw	10
  2535  00F2  024C               	subwf	checkWaterLevel@i^(0+128),w
  2536  00F3                     u3745:	
  2537  00F3  1C03               	skipc
  2538  00F4  28B3               	goto	l3040
  2539  00F5                     l3046:	
  2540                           
  2541                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 340: }
  2542                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 341: avg /= 10;
  2543  00F5  3000               	movlw	0
  2544  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  2545  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  2546  00F8  00A8               	movwf	___ftdiv@f2
  2547  00F9  3020               	movlw	32
  2548  00FA  00A9               	movwf	___ftdiv@f2+1
  2549  00FB  3041               	movlw	65
  2550  00FC  00AA               	movwf	___ftdiv@f2+2
  2551  00FD  085A               	movf	_avg,w
  2552  00FE  00AB               	movwf	___ftdiv@f1
  2553  00FF  085B               	movf	_avg+1,w
  2554  0100  00AC               	movwf	___ftdiv@f1+1
  2555  0101  085C               	movf	_avg+2,w
  2556  0102  00AD               	movwf	___ftdiv@f1+2
  2557  0103  120A  118A  2661  120A  118A  	fcall	___ftdiv
  2558  0108  1283               	bcf	3,5	;RP0=0, select bank0
  2559  0109  1303               	bcf	3,6	;RP1=0, select bank0
  2560  010A  0828               	movf	?___ftdiv,w
  2561  010B  00DA               	movwf	_avg
  2562  010C  0829               	movf	?___ftdiv+1,w
  2563  010D  00DB               	movwf	_avg+1
  2564  010E  082A               	movf	?___ftdiv+2,w
  2565  010F  00DC               	movwf	_avg+2
  2566                           
  2567                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 343: avg <= 2? avg = 0 : avg = avg;
  2568  0110  3000               	movlw	0
  2569  0111  00A0               	movwf	___ftge@ff1
  2570  0112  3000               	movlw	0
  2571  0113  00A1               	movwf	___ftge@ff1+1
  2572  0114  3040               	movlw	64
  2573  0115  00A2               	movwf	___ftge@ff1+2
  2574  0116  085A               	movf	_avg,w
  2575  0117  00A3               	movwf	___ftge@ff2
  2576  0118  085B               	movf	_avg+1,w
  2577  0119  00A4               	movwf	___ftge@ff2+1
  2578  011A  085C               	movf	_avg+2,w
  2579  011B  00A5               	movwf	___ftge@ff2+2
  2580  011C  120A  158A  264A  120A  118A  	fcall	___ftge
  2581  0121  1C03               	btfss	3,0
  2582  0122  292B               	goto	l3050
  2583  0123  3000               	movlw	0
  2584  0124  1283               	bcf	3,5	;RP0=0, select bank0
  2585  0125  1303               	bcf	3,6	;RP1=0, select bank0
  2586  0126  00DA               	movwf	_avg
  2587  0127  3000               	movlw	0
  2588  0128  00DB               	movwf	_avg+1
  2589  0129  3000               	movlw	0
  2590  012A  00DC               	movwf	_avg+2
  2591  012B                     l3050:	
  2592                           
  2593                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 344: avg >= 20? avg = 20: avg = avg;
  2594  012B  1283               	bcf	3,5	;RP0=0, select bank0
  2595  012C  1303               	bcf	3,6	;RP1=0, select bank0
  2596  012D  085A               	movf	_avg,w
  2597  012E  00A0               	movwf	___ftge@ff1
  2598  012F  085B               	movf	_avg+1,w
  2599  0130  00A1               	movwf	___ftge@ff1+1
  2600  0131  085C               	movf	_avg+2,w
  2601  0132  00A2               	movwf	___ftge@ff1+2
  2602  0133  3000               	movlw	0
  2603  0134  00A3               	movwf	___ftge@ff2
  2604  0135  30A0               	movlw	160
  2605  0136  00A4               	movwf	___ftge@ff2+1
  2606  0137  3041               	movlw	65
  2607  0138  00A5               	movwf	___ftge@ff2+2
  2608  0139  120A  158A  264A  120A  118A  	fcall	___ftge
  2609  013E  1C03               	btfss	3,0
  2610  013F  2948               	goto	l3054
  2611  0140  3000               	movlw	0
  2612  0141  1283               	bcf	3,5	;RP0=0, select bank0
  2613  0142  1303               	bcf	3,6	;RP1=0, select bank0
  2614  0143  00DA               	movwf	_avg
  2615  0144  30A0               	movlw	160
  2616  0145  00DB               	movwf	_avg+1
  2617  0146  3041               	movlw	65
  2618  0147  00DC               	movwf	_avg+2
  2619  0148                     l3054:	
  2620                           
  2621                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 346: int percentValue = 100-(avg*5);
  2622  0148  1283               	bcf	3,5	;RP0=0, select bank0
  2623  0149  1303               	bcf	3,6	;RP1=0, select bank0
  2624  014A  085A               	movf	_avg,w
  2625  014B  00AE               	movwf	___ftmul@f2
  2626  014C  085B               	movf	_avg+1,w
  2627  014D  00AF               	movwf	___ftmul@f2+1
  2628  014E  085C               	movf	_avg+2,w
  2629  014F  00B0               	movwf	___ftmul@f2+2
  2630  0150  3000               	movlw	0
  2631  0151  00AB               	movwf	___ftmul@f1
  2632  0152  30A0               	movlw	160
  2633  0153  00AC               	movwf	___ftmul@f1+1
  2634  0154  3040               	movlw	64
  2635  0155  00AD               	movwf	___ftmul@f1+2
  2636  0156  120A  118A  258E  120A  118A  	fcall	___ftmul
  2637  015B  1283               	bcf	3,5	;RP0=0, select bank0
  2638  015C  1303               	bcf	3,6	;RP1=0, select bank0
  2639  015D  082B               	movf	?___ftmul,w
  2640  015E  00BB               	movwf	___ftneg@f1
  2641  015F  082C               	movf	?___ftmul+1,w
  2642  0160  00BC               	movwf	___ftneg@f1+1
  2643  0161  082D               	movf	?___ftmul+2,w
  2644  0162  00BD               	movwf	___ftneg@f1+2
  2645  0163  120A  158A  23A2  120A  118A  	fcall	___ftneg
  2646  0168  1283               	bcf	3,5	;RP0=0, select bank0
  2647  0169  1303               	bcf	3,6	;RP1=0, select bank0
  2648  016A  083B               	movf	?___ftneg,w
  2649  016B  00C1               	movwf	___ftadd@f2
  2650  016C  083C               	movf	?___ftneg+1,w
  2651  016D  00C2               	movwf	___ftadd@f2+1
  2652  016E  083D               	movf	?___ftneg+2,w
  2653  016F  00C3               	movwf	___ftadd@f2+2
  2654  0170  3000               	movlw	0
  2655  0171  00BE               	movwf	___ftadd@f1
  2656  0172  30C8               	movlw	200
  2657  0173  00BF               	movwf	___ftadd@f1+1
  2658  0174  3042               	movlw	66
  2659  0175  00C0               	movwf	___ftadd@f1+2
  2660  0176  120A  118A  23AA  120A  118A  	fcall	___ftadd
  2661  017B  1283               	bcf	3,5	;RP0=0, select bank0
  2662  017C  1303               	bcf	3,6	;RP1=0, select bank0
  2663  017D  083E               	movf	?___ftadd,w
  2664  017E  00CB               	movwf	___fttol@f1
  2665  017F  083F               	movf	?___ftadd+1,w
  2666  0180  00CC               	movwf	___fttol@f1+1
  2667  0181  0840               	movf	?___ftadd+2,w
  2668  0182  00CD               	movwf	___fttol@f1+2
  2669  0183  120A  158A  2772  120A  118A  	fcall	___fttol
  2670  0188  1283               	bcf	3,5	;RP0=0, select bank0
  2671  0189  1303               	bcf	3,6	;RP1=0, select bank0
  2672  018A  084C               	movf	?___fttol+1,w
  2673  018B  1683               	bsf	3,5	;RP0=1, select bank1
  2674  018C  1303               	bcf	3,6	;RP1=0, select bank1
  2675  018D  01CB               	clrf	(checkWaterLevel@percentValue+1)^(0+128)
  2676  018E  07CB               	addwf	(checkWaterLevel@percentValue+1)^(0+128),f
  2677  018F  1283               	bcf	3,5	;RP0=0, select bank0
  2678  0190  1303               	bcf	3,6	;RP1=0, select bank0
  2679  0191  084B               	movf	?___fttol,w
  2680  0192  1683               	bsf	3,5	;RP0=1, select bank1
  2681  0193  1303               	bcf	3,6	;RP1=0, select bank1
  2682  0194  01CA               	clrf	checkWaterLevel@percentValue^(0+128)
  2683  0195  07CA               	addwf	checkWaterLevel@percentValue^(0+128),f
  2684                           
  2685                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 347: index = index % 10;
  2686  0196  300A               	movlw	10
  2687  0197  1283               	bcf	3,5	;RP0=0, select bank0
  2688  0198  1303               	bcf	3,6	;RP1=0, select bank0
  2689  0199  00A0               	movwf	___awmod@divisor
  2690  019A  3000               	movlw	0
  2691  019B  00A1               	movwf	___awmod@divisor+1
  2692  019C  085E               	movf	_index+1,w
  2693  019D  01A3               	clrf	___awmod@dividend+1
  2694  019E  07A3               	addwf	___awmod@dividend+1,f
  2695  019F  085D               	movf	_index,w
  2696  01A0  01A2               	clrf	___awmod@dividend
  2697  01A1  07A2               	addwf	___awmod@dividend,f
  2698  01A2  120A  158A  25A0  120A  118A  	fcall	___awmod
  2699  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  2700  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  2701  01A9  0821               	movf	?___awmod+1,w
  2702  01AA  01DE               	clrf	_index+1
  2703  01AB  07DE               	addwf	_index+1,f
  2704  01AC  0820               	movf	?___awmod,w
  2705  01AD  01DD               	clrf	_index
  2706  01AE  07DD               	addwf	_index,f
  2707                           
  2708                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 348: char percentage[10];
  2709                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 349: instCtrl(0xDA);
  2710  01AF  30DA               	movlw	218
  2711  01B0  120A  158A  2461  120A  118A  	fcall	_instCtrl
  2712                           
  2713                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 350: printString("    ");
  2714  01B5  3043               	movlw	low ((STR_11+14)-__stringbase)
  2715  01B6  00F4               	movwf	printString@string
  2716  01B7  3080               	movlw	128
  2717  01B8  00F5               	movwf	printString@string+1
  2718  01B9  120A  158A  2415  120A  118A  	fcall	_printString
  2719                           
  2720                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 351: instCtrl(0xDA);
  2721  01BE  30DA               	movlw	218
  2722  01BF  120A  158A  2461  120A  118A  	fcall	_instCtrl
  2723                           
  2724                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 352: sprintf(percentage, "%d%%", percentValu
      +                          e);
  2725  01C4  3080               	movlw	(STR_18-__stringbase)& (0+255)
  2726  01C5  1283               	bcf	3,5	;RP0=0, select bank0
  2727  01C6  1303               	bcf	3,6	;RP1=0, select bank0
  2728  01C7  00D9               	movwf	??_checkWaterLevel
  2729  01C8  0859               	movf	??_checkWaterLevel,w
  2730  01C9  00AC               	movwf	sprintf@f
  2731  01CA  1683               	bsf	3,5	;RP0=1, select bank1
  2732  01CB  1303               	bcf	3,6	;RP1=0, select bank1
  2733  01CC  084B               	movf	(checkWaterLevel@percentValue+1)^(0+128),w
  2734  01CD  1283               	bcf	3,5	;RP0=0, select bank0
  2735  01CE  1303               	bcf	3,6	;RP1=0, select bank0
  2736  01CF  01AE               	clrf	?_sprintf+2
  2737  01D0  07AE               	addwf	?_sprintf+2,f
  2738  01D1  1683               	bsf	3,5	;RP0=1, select bank1
  2739  01D2  1303               	bcf	3,6	;RP1=0, select bank1
  2740  01D3  084A               	movf	checkWaterLevel@percentValue^(0+128),w
  2741  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  2742  01D5  1303               	bcf	3,6	;RP1=0, select bank0
  2743  01D6  01AD               	clrf	?_sprintf+1
  2744  01D7  07AD               	addwf	?_sprintf+1,f
  2745  01D8  30BC               	movlw	checkWaterLevel@percentage& (0+255)
  2746  01D9  120A  118A  24B3  120A  118A  	fcall	_sprintf
  2747                           
  2748                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 353: printString(percentage);
  2749  01DE  30BC               	movlw	checkWaterLevel@percentage& (0+255)
  2750  01DF  00F4               	movwf	printString@string
  2751  01E0  3000               	movlw	0
  2752  01E1  00F5               	movwf	printString@string+1
  2753  01E2  120A  158A  2415  120A  118A  	fcall	_printString
  2754                           
  2755                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 354: if(percentValue == 0)
  2756  01E7  1683               	bsf	3,5	;RP0=1, select bank1
  2757  01E8  1303               	bcf	3,6	;RP1=0, select bank1
  2758  01E9  084B               	movf	(checkWaterLevel@percentValue+1)^(0+128),w
  2759  01EA  044A               	iorwf	checkWaterLevel@percentValue^(0+128),w
  2760  01EB  1D03               	skipz
  2761  01EC  29F6               	goto	l3076
  2762                           
  2763                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 355: {
  2764                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 356: schedulerFlag = 0;
  2765  01ED  01B6               	clrf	_schedulerFlag^(0+128)
  2766  01EE  01B7               	clrf	(_schedulerFlag+1)^(0+128)
  2767                           
  2768                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 357: empty = 1;
  2769  01EF  3001               	movlw	1
  2770  01F0  00F6               	movwf	_empty
  2771  01F1  3000               	movlw	0
  2772  01F2  00F7               	movwf	_empty+1
  2773                           
  2774                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 358: TMR0IE = 0;
  2775  01F3  128B               	bcf	11,5	;volatile
  2776                           
  2777                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 359: TMR0IF = 0;
  2778  01F4  110B               	bcf	11,2	;volatile
  2779                           
  2780                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 360: }
  2781  01F5  0008               	return
  2782  01F6                     l3076:	
  2783                           
  2784                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 361: else if(percentValue < 50)
  2785  01F6  084B               	movf	(checkWaterLevel@percentValue+1)^(0+128),w
  2786  01F7  3A80               	xorlw	128
  2787  01F8  00FF               	movwf	127
  2788  01F9  3080               	movlw	128
  2789  01FA  027F               	subwf	127,w
  2790  01FB  1D03               	skipz
  2791  01FC  29FF               	goto	u3785
  2792  01FD  3032               	movlw	50
  2793  01FE  024A               	subwf	checkWaterLevel@percentValue^(0+128),w
  2794  01FF                     u3785:	
  2795  01FF  1803               	skipnc
  2796  0200  2A19               	goto	l3090
  2797                           
  2798                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 362: {
  2799                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 363: schedulerFlag = 1;
  2800  0201  3001               	movlw	1
  2801  0202  1683               	bsf	3,5	;RP0=1, select bank1
  2802  0203  1303               	bcf	3,6	;RP1=0, select bank1
  2803  0204  00B6               	movwf	_schedulerFlag^(0+128)
  2804  0205  3000               	movlw	0
  2805  0206  00B7               	movwf	(_schedulerFlag^(0+128)+1)
  2806                           
  2807                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 364: TMR0IE = 1;
  2808  0207  168B               	bsf	11,5	;volatile
  2809                           
  2810                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 365: TMR0IF = 0;
  2811  0208  110B               	bcf	11,2	;volatile
  2812                           
  2813                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 366: empty = 0;
  2814  0209  01F6               	clrf	_empty
  2815  020A  01F7               	clrf	_empty+1
  2816                           
  2817                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 367: instCtrl(0x80);
  2818  020B  3080               	movlw	128
  2819  020C  120A  158A  2461  120A  118A  	fcall	_instCtrl
  2820                           
  2821                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 368: printString("             ");
  2822  0211  303A               	movlw	low ((STR_11+5)-__stringbase)
  2823  0212  00F4               	movwf	printString@string
  2824  0213  3080               	movlw	128
  2825  0214  00F5               	movwf	printString@string+1
  2826  0215  120A  158A  2415   	fcall	_printString
  2827                           
  2828                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 369: }
  2829  0218  0008               	return
  2830  0219                     l3090:	
  2831                           
  2832                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 370: else
  2833                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 371: {
  2834                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 372: schedulerFlag = 0;
  2835  0219  1683               	bsf	3,5	;RP0=1, select bank1
  2836  021A  1303               	bcf	3,6	;RP1=0, select bank1
  2837  021B  01B6               	clrf	_schedulerFlag^(0+128)
  2838  021C  01B7               	clrf	(_schedulerFlag+1)^(0+128)
  2839                           
  2840                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 373: TMR0IE = 0;
  2841  021D  128B               	bcf	11,5	;volatile
  2842                           
  2843                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 374: TMR0IF = 0;
  2844  021E  110B               	bcf	11,2	;volatile
  2845                           
  2846                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 375: empty = 0;
  2847  021F  01F6               	clrf	_empty
  2848  0220  01F7               	clrf	_empty+1
  2849                           
  2850                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 376: instCtrl(0x80);
  2851  0221  3080               	movlw	128
  2852  0222  120A  158A  2461  120A  118A  	fcall	_instCtrl
  2853                           
  2854                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 377: printString("             ");
  2855  0227  303A               	movlw	low ((STR_11+5)-__stringbase)
  2856  0228  00F4               	movwf	printString@string
  2857  0229  3080               	movlw	128
  2858  022A  00F5               	movwf	printString@string+1
  2859  022B  120A  158A  2415   	fcall	_printString
  2860  022E  0008               	return
  2861  022F                     __end_of_checkWaterLevel:	
  2862                           
  2863                           	psect	text10
  2864  04B3                     __ptext10:	
  2865 ;; *************** function _sprintf *****************
  2866 ;; Defined at:
  2867 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;  sp              1    wreg     PTR unsigned char 
  2870 ;;		 -> checkWaterLevel@percentage(10), updateDisplay@seconds_str(10), 
  2871 ;;  f               1   12[BANK0 ] PTR const unsigned char 
  2872 ;;		 -> STR_18(5), STR_6(6), 
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;  sp              1   25[BANK0 ] PTR unsigned char 
  2875 ;;		 -> checkWaterLevel@percentage(10), updateDisplay@seconds_str(10), 
  2876 ;;  _val            4   21[BANK0 ] struct .
  2877 ;;  c               1   26[BANK0 ] char 
  2878 ;;  prec            1   20[BANK0 ] char 
  2879 ;;  flag            1   19[BANK0 ] unsigned char 
  2880 ;;  ap              1   18[BANK0 ] PTR void [1]
  2881 ;;		 -> ?_sprintf(2), 
  2882 ;; Return value:  Size  Location     Type
  2883 ;;                  2   12[BANK0 ] int 
  2884 ;; Registers used:
  2885 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2886 ;; Tracked objects:
  2887 ;;		On entry : 0/0
  2888 ;;		On exit  : 0/0
  2889 ;;		Unchanged: 0/0
  2890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2891 ;;      Params:         0       3       0       0       0
  2892 ;;      Locals:         0       9       0       0       0
  2893 ;;      Temps:          0       3       0       0       0
  2894 ;;      Totals:         0      15       0       0       0
  2895 ;;Total ram usage:       15 bytes
  2896 ;; Hardware stack levels used:    1
  2897 ;; Hardware stack levels required when called:    2
  2898 ;; This function calls:
  2899 ;;		___lwdiv
  2900 ;;		___lwmod
  2901 ;; This function is called by:
  2902 ;;		_updateDisplay
  2903 ;;		_checkWaterLevel
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907                           
  2908                           ;psect for function _sprintf
  2909  04B3                     _sprintf:	
  2910                           
  2911                           ;incstack = 0
  2912                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2913                           ;sprintf@sp stored from wreg
  2914  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  2915  04B4  1303               	bcf	3,6	;RP1=0, select bank0
  2916  04B5  00B9               	movwf	sprintf@sp
  2917                           
  2918                           ;doprnt.c: 494: va_list ap;
  2919                           ;doprnt.c: 499: signed char c;
  2920                           ;doprnt.c: 506: signed char prec;
  2921                           ;doprnt.c: 508: unsigned char flag;
  2922                           ;doprnt.c: 527: union {
  2923                           ;doprnt.c: 528: unsigned int _val;
  2924                           ;doprnt.c: 529: struct {
  2925                           ;doprnt.c: 530: const char * _cp;
  2926                           ;doprnt.c: 531: unsigned _len;
  2927                           ;doprnt.c: 532: } _str;
  2928                           ;doprnt.c: 533: } _val;
  2929                           ;doprnt.c: 542: *ap = __va_start();
  2930  04B6  302D               	movlw	(?_sprintf+1)& (0+255)
  2931  04B7  00AF               	movwf	??_sprintf
  2932  04B8  082F               	movf	??_sprintf,w
  2933  04B9  00B2               	movwf	sprintf@ap
  2934                           
  2935                           ;doprnt.c: 644: switch(c = *f++) {
  2936  04BA  2CC6               	goto	l2696
  2937  04BB                     l2650:	
  2938                           ;doprnt.c: 811: default:
  2939                           
  2940                           ;doprnt.c: 707: case 'i':
  2941                           ;doprnt.c: 708: break;
  2942                           
  2943                           ;doprnt.c: 706: case 'd':
  2944                           
  2945                           ;doprnt.c: 647: goto alldone;
  2946                           
  2947                           ;doprnt.c: 646: case 0:
  2948                           
  2949                           
  2950                           ;doprnt.c: 818: ((*sp++ = (c)));
  2951  04BB  083A               	movf	sprintf@c,w
  2952  04BC  00AF               	movwf	??_sprintf
  2953  04BD  0839               	movf	sprintf@sp,w
  2954  04BE  0084               	movwf	4
  2955  04BF  082F               	movf	??_sprintf,w
  2956  04C0  1383               	bcf	3,7	;select IRP bank0
  2957  04C1  0080               	movwf	0
  2958  04C2  3001               	movlw	1
  2959  04C3  00AF               	movwf	??_sprintf
  2960  04C4  082F               	movf	??_sprintf,w
  2961  04C5  07B9               	addwf	sprintf@sp,f
  2962  04C6                     l2696:	
  2963                           ;doprnt.c: 545: while(c = *f++) {
  2964                           
  2965                           ;doprnt.c: 819: continue;
  2966                           
  2967  04C6  3001               	movlw	1
  2968  04C7  07AC               	addwf	sprintf@f,f
  2969  04C8  30FF               	movlw	-1
  2970  04C9  072C               	addwf	sprintf@f,w
  2971  04CA  0084               	movwf	4
  2972  04CB  120A  118A  2723  120A  118A  	fcall	stringdir
  2973  04D0  00AF               	movwf	??_sprintf
  2974  04D1  082F               	movf	??_sprintf,w
  2975  04D2  00BA               	movwf	sprintf@c
  2976  04D3  08BA               	movf	sprintf@c,f
  2977  04D4  1903               	btfsc	3,2
  2978  04D5  2D89               	goto	l2698
  2979                           
  2980                           ;doprnt.c: 547: if(c != '%')
  2981  04D6  083A               	movf	sprintf@c,w
  2982  04D7  3A25               	xorlw	37
  2983  04D8  1D03               	btfss	3,2
  2984  04D9  2CBB               	goto	l2650
  2985                           
  2986                           ;doprnt.c: 552: }
  2987                           ;doprnt.c: 557: flag = 0;
  2988                           
  2989                           ;doprnt.c: 551: continue;
  2990                           
  2991                           ;doprnt.c: 549: {
  2992                           ;doprnt.c: 550: ((*sp++ = (c)));
  2993  04DA  01B3               	clrf	sprintf@flag
  2994                           
  2995                           ;doprnt.c: 831: }
  2996  04DB  3001               	movlw	1
  2997  04DC  07AC               	addwf	sprintf@f,f
  2998  04DD  30FF               	movlw	-1
  2999  04DE  072C               	addwf	sprintf@f,w
  3000  04DF  0084               	movwf	4
  3001  04E0  120A  118A  2723  120A  118A  	fcall	stringdir
  3002  04E5  00BA               	movwf	sprintf@c
  3003                           
  3004                           ; Switch size 1, requested type "space"
  3005                           ; Number of cases is 3, Range of values is 0 to 105
  3006                           ; switch strategies available:
  3007                           ; Name         Instructions Cycles
  3008                           ; simple_byte           10     6 (average)
  3009                           ; jumptable            260     6 (fixed)
  3010                           ;	Chosen strategy is simple_byte
  3011  04E6  3A00               	xorlw	0	; case 0
  3012  04E7  1903               	skipnz
  3013  04E8  2D89               	goto	l2698
  3014  04E9  3A64               	xorlw	100	; case 100
  3015  04EA  1903               	skipnz
  3016  04EB  2CF0               	goto	l2658
  3017  04EC  3A0D               	xorlw	13	; case 105
  3018  04ED  1903               	skipnz
  3019  04EE  2CF0               	goto	l2658
  3020  04EF  2CBB               	goto	l2650
  3021  04F0                     l2658:	
  3022                           
  3023                           ;doprnt.c: 1262: {
  3024                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3025  04F0  0832               	movf	sprintf@ap,w
  3026  04F1  0084               	movwf	4
  3027  04F2  1383               	bcf	3,7	;select IRP bank0
  3028  04F3  0800               	movf	0,w
  3029  04F4  00B5               	movwf	sprintf@_val
  3030  04F5  0A84               	incf	4,f
  3031  04F6  0800               	movf	0,w
  3032  04F7  00B6               	movwf	sprintf@_val+1
  3033  04F8  3002               	movlw	2
  3034  04F9  00AF               	movwf	??_sprintf
  3035  04FA  082F               	movf	??_sprintf,w
  3036  04FB  07B2               	addwf	sprintf@ap,f
  3037                           
  3038                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  3039  04FC  1FB6               	btfss	sprintf@_val+1,7
  3040  04FD  2D07               	goto	l2668
  3041                           
  3042                           ;doprnt.c: 1271: flag |= 0x03;
  3043  04FE  3003               	movlw	3
  3044  04FF  00AF               	movwf	??_sprintf
  3045  0500  082F               	movf	??_sprintf,w
  3046  0501  04B3               	iorwf	sprintf@flag,f
  3047                           
  3048                           ;doprnt.c: 1272: _val._val = -_val._val;
  3049  0502  09B5               	comf	sprintf@_val,f
  3050  0503  09B6               	comf	sprintf@_val+1,f
  3051  0504  0AB5               	incf	sprintf@_val,f
  3052  0505  1903               	skipnz
  3053  0506  0AB6               	incf	sprintf@_val+1,f
  3054  0507                     l2668:	
  3055                           
  3056                           ;doprnt.c: 1273: }
  3057                           ;doprnt.c: 1275: }
  3058                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3059  0507  01BA               	clrf	sprintf@c
  3060  0508  0ABA               	incf	sprintf@c,f
  3061  0509  083A               	movf	sprintf@c,w
  3062  050A  3A05               	xorlw	5
  3063  050B  1903               	btfsc	3,2
  3064  050C  2D2E               	goto	l2680
  3065  050D                     l2672:	
  3066                           
  3067                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  3068  050D  083A               	movf	sprintf@c,w
  3069  050E  00AF               	movwf	??_sprintf
  3070  050F  072F               	addwf	??_sprintf,w
  3071  0510  3E01               	addlw	low (_dpowers-__stringbase)
  3072  0511  0084               	movwf	4
  3073  0512  120A  118A  2723  120A  118A  	fcall	stringdir
  3074  0517  00B0               	movwf	??_sprintf+1
  3075  0518  120A  118A  2723  120A  118A  	fcall	stringdir
  3076  051D  00B1               	movwf	??_sprintf+2
  3077  051E  0831               	movf	??_sprintf+2,w
  3078  051F  0236               	subwf	sprintf@_val+1,w
  3079  0520  1D03               	skipz
  3080  0521  2D24               	goto	u2955
  3081  0522  0830               	movf	??_sprintf+1,w
  3082  0523  0235               	subwf	sprintf@_val,w
  3083  0524                     u2955:	
  3084  0524  1C03               	btfss	3,0
  3085  0525  2D2E               	goto	l2680
  3086                           
  3087                           ;doprnt.c: 1316: break;
  3088  0526  3001               	movlw	1
  3089  0527  00AF               	movwf	??_sprintf
  3090  0528  082F               	movf	??_sprintf,w
  3091  0529  07BA               	addwf	sprintf@c,f
  3092  052A  083A               	movf	sprintf@c,w
  3093  052B  3A05               	xorlw	5
  3094  052C  1D03               	skipz
  3095  052D  2D0D               	goto	l2672
  3096  052E                     l2680:	
  3097                           
  3098                           ;doprnt.c: 1431: {
  3099                           ;doprnt.c: 1447: if(flag & 0x03)
  3100  052E  0833               	movf	sprintf@flag,w
  3101  052F  3903               	andlw	3
  3102  0530  1903               	btfsc	3,2
  3103  0531  2D3D               	goto	l2686
  3104                           
  3105                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  3106  0532  302D               	movlw	45
  3107  0533  00AF               	movwf	??_sprintf
  3108  0534  0839               	movf	sprintf@sp,w
  3109  0535  0084               	movwf	4
  3110  0536  082F               	movf	??_sprintf,w
  3111  0537  1383               	bcf	3,7	;select IRP bank0
  3112  0538  0080               	movwf	0
  3113  0539  3001               	movlw	1
  3114  053A  00AF               	movwf	??_sprintf
  3115  053B  082F               	movf	??_sprintf,w
  3116  053C  07B9               	addwf	sprintf@sp,f
  3117  053D                     l2686:	
  3118                           
  3119                           ;doprnt.c: 1478: }
  3120                           ;doprnt.c: 1481: prec = c;
  3121  053D  083A               	movf	sprintf@c,w
  3122  053E  00AF               	movwf	??_sprintf
  3123  053F  082F               	movf	??_sprintf,w
  3124  0540  00B4               	movwf	sprintf@prec
  3125  0541                     l2694:	
  3126                           ;doprnt.c: 1483: while(prec--) {
  3127                           
  3128  0541  30FF               	movlw	-1
  3129  0542  00AF               	movwf	??_sprintf
  3130  0543  082F               	movf	??_sprintf,w
  3131  0544  07B4               	addwf	sprintf@prec,f
  3132  0545  0834               	movf	sprintf@prec,w
  3133  0546  3AFF               	xorlw	-1
  3134  0547  1903               	btfsc	3,2
  3135  0548  2CC6               	goto	l2696
  3136                           
  3137                           ;doprnt.c: 1487: {
  3138                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  3139  0549  300A               	movlw	10
  3140  054A  00A7               	movwf	___lwmod@divisor
  3141  054B  3000               	movlw	0
  3142  054C  00A8               	movwf	___lwmod@divisor+1
  3143  054D  0834               	movf	sprintf@prec,w
  3144  054E  00AF               	movwf	??_sprintf
  3145  054F  072F               	addwf	??_sprintf,w
  3146  0550  3E01               	addlw	low (_dpowers-__stringbase)
  3147  0551  0084               	movwf	4
  3148  0552  120A  118A  2723  120A  118A  	fcall	stringdir
  3149  0557  00A0               	movwf	___lwdiv@divisor
  3150  0558  120A  118A  2723  120A  118A  	fcall	stringdir
  3151  055D  00A1               	movwf	___lwdiv@divisor+1
  3152  055E  0836               	movf	sprintf@_val+1,w
  3153  055F  01A3               	clrf	___lwdiv@dividend+1
  3154  0560  07A3               	addwf	___lwdiv@dividend+1,f
  3155  0561  0835               	movf	sprintf@_val,w
  3156  0562  01A2               	clrf	___lwdiv@dividend
  3157  0563  07A2               	addwf	___lwdiv@dividend,f
  3158  0564  120A  158A  251A  120A  118A  	fcall	___lwdiv
  3159  0569  1283               	bcf	3,5	;RP0=0, select bank0
  3160  056A  1303               	bcf	3,6	;RP1=0, select bank0
  3161  056B  0821               	movf	?___lwdiv+1,w
  3162  056C  01AA               	clrf	___lwmod@dividend+1
  3163  056D  07AA               	addwf	___lwmod@dividend+1,f
  3164  056E  0820               	movf	?___lwdiv,w
  3165  056F  01A9               	clrf	___lwmod@dividend
  3166  0570  07A9               	addwf	___lwmod@dividend,f
  3167  0571  120A  158A  24E4  120A  118A  	fcall	___lwmod
  3168  0576  1283               	bcf	3,5	;RP0=0, select bank0
  3169  0577  1303               	bcf	3,6	;RP1=0, select bank0
  3170  0578  0827               	movf	?___lwmod,w
  3171  0579  3E30               	addlw	48
  3172  057A  00B0               	movwf	??_sprintf+1
  3173  057B  0830               	movf	??_sprintf+1,w
  3174  057C  00BA               	movwf	sprintf@c
  3175                           
  3176                           ;doprnt.c: 1532: }
  3177                           ;doprnt.c: 1533: ((*sp++ = (c)));
  3178  057D  083A               	movf	sprintf@c,w
  3179  057E  00AF               	movwf	??_sprintf
  3180  057F  0839               	movf	sprintf@sp,w
  3181  0580  0084               	movwf	4
  3182  0581  082F               	movf	??_sprintf,w
  3183  0582  1383               	bcf	3,7	;select IRP bank0
  3184  0583  0080               	movwf	0
  3185  0584  3001               	movlw	1
  3186  0585  00AF               	movwf	??_sprintf
  3187  0586  082F               	movf	??_sprintf,w
  3188  0587  07B9               	addwf	sprintf@sp,f
  3189  0588  2D41               	goto	l2694
  3190  0589                     l2698:	
  3191                           ;doprnt.c: 1534: }
  3192                           ;doprnt.c: 1542: }
  3193                           ;doprnt.c: 1544: alldone:
  3194                           
  3195                           
  3196                           ;doprnt.c: 1547: *sp = 0;
  3197  0589  0839               	movf	sprintf@sp,w
  3198  058A  0084               	movwf	4
  3199  058B  1383               	bcf	3,7	;select IRP bank0
  3200  058C  0180               	clrf	0
  3201  058D  0008               	return
  3202  058E                     __end_of_sprintf:	
  3203                           ;doprnt.c: 1549: return 0;
  3204                           ;	Return value of _sprintf is never used
  3205                           
  3206                           
  3207                           	psect	text11
  3208  0CE4                     __ptext11:	
  3209 ;; *************** function ___lwmod *****************
  3210 ;; Defined at:
  3211 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;  divisor         2    7[BANK0 ] unsigned int 
  3214 ;;  dividend        2    9[BANK0 ] unsigned int 
  3215 ;; Auto vars:     Size  Location     Type
  3216 ;;  counter         1   11[BANK0 ] unsigned char 
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  2    7[BANK0 ] unsigned int 
  3219 ;; Registers used:
  3220 ;;		wreg, status,2, status,0
  3221 ;; Tracked objects:
  3222 ;;		On entry : 0/0
  3223 ;;		On exit  : 0/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3226 ;;      Params:         0       4       0       0       0
  3227 ;;      Locals:         0       1       0       0       0
  3228 ;;      Temps:          1       0       0       0       0
  3229 ;;      Totals:         1       5       0       0       0
  3230 ;;Total ram usage:        6 bytes
  3231 ;; Hardware stack levels used:    1
  3232 ;; Hardware stack levels required when called:    1
  3233 ;; This function calls:
  3234 ;;		Nothing
  3235 ;; This function is called by:
  3236 ;;		_sprintf
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240                           
  3241                           ;psect for function ___lwmod
  3242  0CE4                     ___lwmod:	
  3243                           
  3244                           ;incstack = 0
  3245                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3246  0CE4  1283               	bcf	3,5	;RP0=0, select bank0
  3247  0CE5  1303               	bcf	3,6	;RP1=0, select bank0
  3248  0CE6  0828               	movf	___lwmod@divisor+1,w
  3249  0CE7  0427               	iorwf	___lwmod@divisor,w
  3250  0CE8  1903               	skipnz
  3251  0CE9  2D13               	goto	l2594
  3252  0CEA  01AB               	clrf	___lwmod@counter
  3253  0CEB  0AAB               	incf	___lwmod@counter,f
  3254  0CEC                     l2584:	
  3255  0CEC  1BA8               	btfsc	___lwmod@divisor+1,7
  3256  0CED  2CFA               	goto	l2586
  3257  0CEE  3001               	movlw	1
  3258  0CEF                     u2845:	
  3259  0CEF  1003               	clrc
  3260  0CF0  0DA7               	rlf	___lwmod@divisor,f
  3261  0CF1  0DA8               	rlf	___lwmod@divisor+1,f
  3262  0CF2  3EFF               	addlw	-1
  3263  0CF3  1D03               	skipz
  3264  0CF4  2CEF               	goto	u2845
  3265  0CF5  3001               	movlw	1
  3266  0CF6  00F5               	movwf	??___lwmod
  3267  0CF7  0875               	movf	??___lwmod,w
  3268  0CF8  07AB               	addwf	___lwmod@counter,f
  3269  0CF9  2CEC               	goto	l2584
  3270  0CFA                     l2586:	
  3271  0CFA  0828               	movf	___lwmod@divisor+1,w
  3272  0CFB  022A               	subwf	___lwmod@dividend+1,w
  3273  0CFC  1D03               	skipz
  3274  0CFD  2D00               	goto	u2865
  3275  0CFE  0827               	movf	___lwmod@divisor,w
  3276  0CFF  0229               	subwf	___lwmod@dividend,w
  3277  0D00                     u2865:	
  3278  0D00  1C03               	skipc
  3279  0D01  2D08               	goto	l2590
  3280  0D02  0827               	movf	___lwmod@divisor,w
  3281  0D03  02A9               	subwf	___lwmod@dividend,f
  3282  0D04  0828               	movf	___lwmod@divisor+1,w
  3283  0D05  1C03               	skipc
  3284  0D06  03AA               	decf	___lwmod@dividend+1,f
  3285  0D07  02AA               	subwf	___lwmod@dividend+1,f
  3286  0D08                     l2590:	
  3287  0D08  3001               	movlw	1
  3288  0D09                     u2875:	
  3289  0D09  1003               	clrc
  3290  0D0A  0CA8               	rrf	___lwmod@divisor+1,f
  3291  0D0B  0CA7               	rrf	___lwmod@divisor,f
  3292  0D0C  3EFF               	addlw	-1
  3293  0D0D  1D03               	skipz
  3294  0D0E  2D09               	goto	u2875
  3295  0D0F  3001               	movlw	1
  3296  0D10  02AB               	subwf	___lwmod@counter,f
  3297  0D11  1D03               	btfss	3,2
  3298  0D12  2CFA               	goto	l2586
  3299  0D13                     l2594:	
  3300  0D13  082A               	movf	___lwmod@dividend+1,w
  3301  0D14  01A8               	clrf	?___lwmod+1
  3302  0D15  07A8               	addwf	?___lwmod+1,f
  3303  0D16  0829               	movf	___lwmod@dividend,w
  3304  0D17  01A7               	clrf	?___lwmod
  3305  0D18  07A7               	addwf	?___lwmod,f
  3306  0D19  0008               	return
  3307  0D1A                     __end_of___lwmod:	
  3308                           
  3309                           	psect	text12
  3310  0D1A                     __ptext12:	
  3311 ;; *************** function ___lwdiv *****************
  3312 ;; Defined at:
  3313 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  3314 ;; Parameters:    Size  Location     Type
  3315 ;;  divisor         2    0[BANK0 ] unsigned int 
  3316 ;;  dividend        2    2[BANK0 ] unsigned int 
  3317 ;; Auto vars:     Size  Location     Type
  3318 ;;  quotient        2    5[BANK0 ] unsigned int 
  3319 ;;  counter         1    4[BANK0 ] unsigned char 
  3320 ;; Return value:  Size  Location     Type
  3321 ;;                  2    0[BANK0 ] unsigned int 
  3322 ;; Registers used:
  3323 ;;		wreg, status,2, status,0
  3324 ;; Tracked objects:
  3325 ;;		On entry : 0/0
  3326 ;;		On exit  : 0/0
  3327 ;;		Unchanged: 0/0
  3328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3329 ;;      Params:         0       4       0       0       0
  3330 ;;      Locals:         0       3       0       0       0
  3331 ;;      Temps:          1       0       0       0       0
  3332 ;;      Totals:         1       7       0       0       0
  3333 ;;Total ram usage:        8 bytes
  3334 ;; Hardware stack levels used:    1
  3335 ;; Hardware stack levels required when called:    1
  3336 ;; This function calls:
  3337 ;;		Nothing
  3338 ;; This function is called by:
  3339 ;;		_sprintf
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           
  3344                           ;psect for function ___lwdiv
  3345  0D1A                     ___lwdiv:	
  3346                           
  3347                           ;incstack = 0
  3348                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3349  0D1A  1283               	bcf	3,5	;RP0=0, select bank0
  3350  0D1B  1303               	bcf	3,6	;RP1=0, select bank0
  3351  0D1C  01A5               	clrf	___lwdiv@quotient
  3352  0D1D  01A6               	clrf	___lwdiv@quotient+1
  3353  0D1E  0821               	movf	___lwdiv@divisor+1,w
  3354  0D1F  0420               	iorwf	___lwdiv@divisor,w
  3355  0D20  1903               	skipnz
  3356  0D21  2D53               	goto	l2572
  3357  0D22  01A4               	clrf	___lwdiv@counter
  3358  0D23  0AA4               	incf	___lwdiv@counter,f
  3359  0D24                     l2560:	
  3360  0D24  1BA1               	btfsc	___lwdiv@divisor+1,7
  3361  0D25  2D32               	goto	l2562
  3362  0D26  3001               	movlw	1
  3363  0D27                     u2775:	
  3364  0D27  1003               	clrc
  3365  0D28  0DA0               	rlf	___lwdiv@divisor,f
  3366  0D29  0DA1               	rlf	___lwdiv@divisor+1,f
  3367  0D2A  3EFF               	addlw	-1
  3368  0D2B  1D03               	skipz
  3369  0D2C  2D27               	goto	u2775
  3370  0D2D  3001               	movlw	1
  3371  0D2E  00F4               	movwf	??___lwdiv
  3372  0D2F  0874               	movf	??___lwdiv,w
  3373  0D30  07A4               	addwf	___lwdiv@counter,f
  3374  0D31  2D24               	goto	l2560
  3375  0D32                     l2562:	
  3376  0D32  3001               	movlw	1
  3377  0D33                     u2795:	
  3378  0D33  1003               	clrc
  3379  0D34  0DA5               	rlf	___lwdiv@quotient,f
  3380  0D35  0DA6               	rlf	___lwdiv@quotient+1,f
  3381  0D36  3EFF               	addlw	-1
  3382  0D37  1D03               	skipz
  3383  0D38  2D33               	goto	u2795
  3384  0D39  0821               	movf	___lwdiv@divisor+1,w
  3385  0D3A  0223               	subwf	___lwdiv@dividend+1,w
  3386  0D3B  1D03               	skipz
  3387  0D3C  2D3F               	goto	u2805
  3388  0D3D  0820               	movf	___lwdiv@divisor,w
  3389  0D3E  0222               	subwf	___lwdiv@dividend,w
  3390  0D3F                     u2805:	
  3391  0D3F  1C03               	skipc
  3392  0D40  2D48               	goto	l2568
  3393  0D41  0820               	movf	___lwdiv@divisor,w
  3394  0D42  02A2               	subwf	___lwdiv@dividend,f
  3395  0D43  0821               	movf	___lwdiv@divisor+1,w
  3396  0D44  1C03               	skipc
  3397  0D45  03A3               	decf	___lwdiv@dividend+1,f
  3398  0D46  02A3               	subwf	___lwdiv@dividend+1,f
  3399  0D47  1425               	bsf	___lwdiv@quotient,0
  3400  0D48                     l2568:	
  3401  0D48  3001               	movlw	1
  3402  0D49                     u2815:	
  3403  0D49  1003               	clrc
  3404  0D4A  0CA1               	rrf	___lwdiv@divisor+1,f
  3405  0D4B  0CA0               	rrf	___lwdiv@divisor,f
  3406  0D4C  3EFF               	addlw	-1
  3407  0D4D  1D03               	skipz
  3408  0D4E  2D49               	goto	u2815
  3409  0D4F  3001               	movlw	1
  3410  0D50  02A4               	subwf	___lwdiv@counter,f
  3411  0D51  1D03               	btfss	3,2
  3412  0D52  2D32               	goto	l2562
  3413  0D53                     l2572:	
  3414  0D53  0826               	movf	___lwdiv@quotient+1,w
  3415  0D54  01A1               	clrf	?___lwdiv+1
  3416  0D55  07A1               	addwf	?___lwdiv+1,f
  3417  0D56  0825               	movf	___lwdiv@quotient,w
  3418  0D57  01A0               	clrf	?___lwdiv
  3419  0D58  07A0               	addwf	?___lwdiv,f
  3420  0D59  0008               	return
  3421  0D5A                     __end_of___lwdiv:	
  3422                           
  3423                           	psect	text13
  3424  0C15                     __ptext13:	
  3425 ;; *************** function _printString *****************
  3426 ;; Defined at:
  3427 ;;		line 588 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Automated_Water_Distributi
      +on\build\Alin_Ceballos_Francis_Gere_Ratificar_DP.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;  string          2    4[COMMON] PTR unsigned char 
  3430 ;;		 -> STR_20(14), STR_19(14), checkWaterLevel@percentage(10), STR_17(5), 
  3431 ;;		 -> STR_16(13), STR_15(13), STR_14(14), STR_13(13), 
  3432 ;;		 -> STR_12(13), STR_11(19), STR_10(13), STR_9(13), 
  3433 ;;		 -> STR_8(13), STR_7(13), updateDisplay@seconds_str(10), STR_5(8), 
  3434 ;;		 -> STR_4(21), STR_3(21), STR_2(15), STR_1(11), 
  3435 ;; Auto vars:     Size  Location     Type
  3436 ;;		None
  3437 ;; Return value:  Size  Location     Type
  3438 ;;		None               void
  3439 ;; Registers used:
  3440 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3441 ;; Tracked objects:
  3442 ;;		On entry : 0/0
  3443 ;;		On exit  : 0/0
  3444 ;;		Unchanged: 0/0
  3445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3446 ;;      Params:         2       0       0       0       0
  3447 ;;      Locals:         0       0       0       0       0
  3448 ;;      Temps:          0       0       0       0       0
  3449 ;;      Totals:         2       0       0       0       0
  3450 ;;Total ram usage:        2 bytes
  3451 ;; Hardware stack levels used:    1
  3452 ;; Hardware stack levels required when called:    2
  3453 ;; This function calls:
  3454 ;;		_dataCtrl
  3455 ;; This function is called by:
  3456 ;;		_main
  3457 ;;		_initSYS
  3458 ;;		_updateDisplay
  3459 ;;		_checkWaterLevel
  3460 ;; This function uses a non-reentrant model
  3461 ;;
  3462                           
  3463                           
  3464                           ;psect for function _printString
  3465  0C15                     _printString:	
  3466  0C15                     l2620:	
  3467                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 590: while(*string)
  3468                           
  3469                           ;incstack = 0
  3470                           ; Regs used in _printString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3471                           
  3472  0C15  0875               	movf	printString@string+1,w
  3473  0C16  1283               	bcf	3,5	;RP0=0, select bank0
  3474  0C17  1303               	bcf	3,6	;RP1=0, select bank0
  3475  0C18  00FF               	movwf	127
  3476  0C19  0874               	movf	printString@string,w
  3477  0C1A  0084               	movwf	4
  3478  0C1B  120A  118A  2719  120A  158A  	fcall	stringtab
  3479  0C20  3800               	iorlw	0
  3480  0C21  1903               	btfsc	3,2
  3481  0C22  0008               	return
  3482                           
  3483                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 591: {
  3484                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 592: dataCtrl(*string++);
  3485  0C23  0875               	movf	printString@string+1,w
  3486  0C24  1283               	bcf	3,5	;RP0=0, select bank0
  3487  0C25  1303               	bcf	3,6	;RP1=0, select bank0
  3488  0C26  00FF               	movwf	127
  3489  0C27  0874               	movf	printString@string,w
  3490  0C28  0084               	movwf	4
  3491  0C29  120A  118A  2719  120A  158A  	fcall	stringtab
  3492  0C2E  120A  158A  248C  120A  158A  	fcall	_dataCtrl
  3493  0C33  3001               	movlw	1
  3494  0C34  07F4               	addwf	printString@string,f
  3495  0C35  1803               	skipnc
  3496  0C36  0AF5               	incf	printString@string+1,f
  3497  0C37  2C15               	goto	l2620
  3498  0C38                     __end_of_printString:	
  3499                           
  3500                           	psect	text14
  3501  0C8C                     __ptext14:	
  3502 ;; *************** function _dataCtrl *****************
  3503 ;; Defined at:
  3504 ;;		line 558 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Automated_Water_Distributi
      +on\build\Alin_Ceballos_Francis_Gere_Ratificar_DP.c"
  3505 ;; Parameters:    Size  Location     Type
  3506 ;;  data            1    wreg     unsigned char 
  3507 ;; Auto vars:     Size  Location     Type
  3508 ;;  data            1    0[BANK0 ] unsigned char 
  3509 ;;  i               2    1[BANK0 ] int 
  3510 ;; Return value:  Size  Location     Type
  3511 ;;		None               void
  3512 ;; Registers used:
  3513 ;;		wreg, status,2, btemp+1
  3514 ;; Tracked objects:
  3515 ;;		On entry : 0/0
  3516 ;;		On exit  : 0/0
  3517 ;;		Unchanged: 0/0
  3518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3519 ;;      Params:         0       0       0       0       0
  3520 ;;      Locals:         0       3       0       0       0
  3521 ;;      Temps:          0       0       0       0       0
  3522 ;;      Totals:         0       3       0       0       0
  3523 ;;Total ram usage:        3 bytes
  3524 ;; Hardware stack levels used:    1
  3525 ;; Hardware stack levels required when called:    1
  3526 ;; This function calls:
  3527 ;;		Nothing
  3528 ;; This function is called by:
  3529 ;;		_printString
  3530 ;; This function uses a non-reentrant model
  3531 ;;
  3532                           
  3533                           
  3534                           ;psect for function _dataCtrl
  3535  0C8C                     _dataCtrl:	
  3536                           
  3537                           ;incstack = 0
  3538                           ; Regs used in _dataCtrl: [wreg+status,2+btemp+1]
  3539                           ;dataCtrl@data stored from wreg
  3540  0C8C  1283               	bcf	3,5	;RP0=0, select bank0
  3541  0C8D  1303               	bcf	3,6	;RP1=0, select bank0
  3542  0C8E  00A0               	movwf	dataCtrl@data
  3543                           
  3544                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 560: RC0 = 1;
  3545  0C8F  1407               	bsf	7,0	;volatile
  3546                           
  3547                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 561: PORTD = data;
  3548  0C90  0820               	movf	dataCtrl@data,w
  3549  0C91  0088               	movwf	8	;volatile
  3550                           
  3551                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 562: RC2 = 1;
  3552  0C92  1507               	bsf	7,2	;volatile
  3553                           
  3554                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 563: for(int i = 0; i < 1000; i++);
  3555  0C93  01A1               	clrf	dataCtrl@i
  3556  0C94  01A2               	clrf	dataCtrl@i+1
  3557  0C95  0822               	movf	dataCtrl@i+1,w
  3558  0C96  3A80               	xorlw	128
  3559  0C97  00FF               	movwf	127
  3560  0C98  3083               	movlw	131
  3561  0C99  027F               	subwf	127,w
  3562  0C9A  1D03               	skipz
  3563  0C9B  2C9E               	goto	u2635
  3564  0C9C  30E8               	movlw	232
  3565  0C9D  0221               	subwf	dataCtrl@i,w
  3566  0C9E                     u2635:	
  3567  0C9E  1803               	btfsc	3,0
  3568  0C9F  2CB3               	goto	l213
  3569  0CA0                     l2516:	
  3570  0CA0  3001               	movlw	1
  3571  0CA1  1283               	bcf	3,5	;RP0=0, select bank0
  3572  0CA2  1303               	bcf	3,6	;RP1=0, select bank0
  3573  0CA3  07A1               	addwf	dataCtrl@i,f
  3574  0CA4  1803               	skipnc
  3575  0CA5  0AA2               	incf	dataCtrl@i+1,f
  3576  0CA6  3000               	movlw	0
  3577  0CA7  07A2               	addwf	dataCtrl@i+1,f
  3578  0CA8  0822               	movf	dataCtrl@i+1,w
  3579  0CA9  3A80               	xorlw	128
  3580  0CAA  00FF               	movwf	127
  3581  0CAB  3083               	movlw	131
  3582  0CAC  027F               	subwf	127,w
  3583  0CAD  1D03               	skipz
  3584  0CAE  2CB1               	goto	u2645
  3585  0CAF  30E8               	movlw	232
  3586  0CB0  0221               	subwf	dataCtrl@i,w
  3587  0CB1                     u2645:	
  3588  0CB1  1C03               	skipc
  3589  0CB2  2CA0               	goto	l2516
  3590  0CB3                     l213:	
  3591                           
  3592                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 564: RC2 = 0;
  3593  0CB3  1283               	bcf	3,5	;RP0=0, select bank0
  3594  0CB4  1303               	bcf	3,6	;RP1=0, select bank0
  3595  0CB5  1107               	bcf	7,2	;volatile
  3596  0CB6  0008               	return
  3597  0CB7                     __end_of_dataCtrl:	
  3598                           
  3599                           	psect	text15
  3600  0C61                     __ptext15:	
  3601 ;; *************** function _instCtrl *****************
  3602 ;; Defined at:
  3603 ;;		line 573 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Automated_Water_Distributi
      +on\build\Alin_Ceballos_Francis_Gere_Ratificar_DP.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;  inst            1    wreg     unsigned char 
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;  inst            1    0[BANK0 ] unsigned char 
  3608 ;;  i               2    1[BANK0 ] int 
  3609 ;; Return value:  Size  Location     Type
  3610 ;;		None               void
  3611 ;; Registers used:
  3612 ;;		wreg, status,2, btemp+1
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3618 ;;      Params:         0       0       0       0       0
  3619 ;;      Locals:         0       3       0       0       0
  3620 ;;      Temps:          0       0       0       0       0
  3621 ;;      Totals:         0       3       0       0       0
  3622 ;;Total ram usage:        3 bytes
  3623 ;; Hardware stack levels used:    1
  3624 ;; Hardware stack levels required when called:    1
  3625 ;; This function calls:
  3626 ;;		Nothing
  3627 ;; This function is called by:
  3628 ;;		_main
  3629 ;;		_initSYS
  3630 ;;		_updateDisplay
  3631 ;;		_checkWaterLevel
  3632 ;;		_initLCD
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635                           
  3636                           
  3637                           ;psect for function _instCtrl
  3638  0C61                     _instCtrl:	
  3639                           
  3640                           ;incstack = 0
  3641                           ; Regs used in _instCtrl: [wreg+status,2+btemp+1]
  3642                           ;instCtrl@inst stored from wreg
  3643  0C61  1283               	bcf	3,5	;RP0=0, select bank0
  3644  0C62  1303               	bcf	3,6	;RP1=0, select bank0
  3645  0C63  00A0               	movwf	instCtrl@inst
  3646                           
  3647                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 575: RC0 = 0;
  3648  0C64  1007               	bcf	7,0	;volatile
  3649                           
  3650                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 576: PORTD = inst;
  3651  0C65  0820               	movf	instCtrl@inst,w
  3652  0C66  0088               	movwf	8	;volatile
  3653                           
  3654                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 577: RC2 = 1;
  3655  0C67  1507               	bsf	7,2	;volatile
  3656                           
  3657                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 578: for(int i = 0; i < 1000; i++);
  3658  0C68  01A1               	clrf	instCtrl@i
  3659  0C69  01A2               	clrf	instCtrl@i+1
  3660  0C6A  0822               	movf	instCtrl@i+1,w
  3661  0C6B  3A80               	xorlw	128
  3662  0C6C  00FF               	movwf	127
  3663  0C6D  3083               	movlw	131
  3664  0C6E  027F               	subwf	127,w
  3665  0C6F  1D03               	skipz
  3666  0C70  2C73               	goto	u2895
  3667  0C71  30E8               	movlw	232
  3668  0C72  0221               	subwf	instCtrl@i,w
  3669  0C73                     u2895:	
  3670  0C73  1803               	btfsc	3,0
  3671  0C74  2C88               	goto	l218
  3672  0C75                     l2610:	
  3673  0C75  3001               	movlw	1
  3674  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  3675  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  3676  0C78  07A1               	addwf	instCtrl@i,f
  3677  0C79  1803               	skipnc
  3678  0C7A  0AA2               	incf	instCtrl@i+1,f
  3679  0C7B  3000               	movlw	0
  3680  0C7C  07A2               	addwf	instCtrl@i+1,f
  3681  0C7D  0822               	movf	instCtrl@i+1,w
  3682  0C7E  3A80               	xorlw	128
  3683  0C7F  00FF               	movwf	127
  3684  0C80  3083               	movlw	131
  3685  0C81  027F               	subwf	127,w
  3686  0C82  1D03               	skipz
  3687  0C83  2C86               	goto	u2905
  3688  0C84  30E8               	movlw	232
  3689  0C85  0221               	subwf	instCtrl@i,w
  3690  0C86                     u2905:	
  3691  0C86  1C03               	skipc
  3692  0C87  2C75               	goto	l2610
  3693  0C88                     l218:	
  3694                           
  3695                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 579: RC2 = 0;
  3696  0C88  1283               	bcf	3,5	;RP0=0, select bank0
  3697  0C89  1303               	bcf	3,6	;RP1=0, select bank0
  3698  0C8A  1107               	bcf	7,2	;volatile
  3699  0C8B  0008               	return
  3700  0C8C                     __end_of_instCtrl:	
  3701                           
  3702                           	psect	text16
  3703  0BC3                     __ptext16:	
  3704 ;; *************** function ___lwtoft *****************
  3705 ;; Defined at:
  3706 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  3707 ;; Parameters:    Size  Location     Type
  3708 ;;  c               2    8[BANK0 ] unsigned int 
  3709 ;; Auto vars:     Size  Location     Type
  3710 ;;		None
  3711 ;; Return value:  Size  Location     Type
  3712 ;;                  3    8[BANK0 ] float 
  3713 ;; Registers used:
  3714 ;;		wreg, status,2, status,0, pclath, cstack
  3715 ;; Tracked objects:
  3716 ;;		On entry : 0/0
  3717 ;;		On exit  : 0/0
  3718 ;;		Unchanged: 0/0
  3719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3720 ;;      Params:         0       3       0       0       0
  3721 ;;      Locals:         0       0       0       0       0
  3722 ;;      Temps:          1       0       0       0       0
  3723 ;;      Totals:         1       3       0       0       0
  3724 ;;Total ram usage:        4 bytes
  3725 ;; Hardware stack levels used:    1
  3726 ;; Hardware stack levels required when called:    2
  3727 ;; This function calls:
  3728 ;;		___ftpack
  3729 ;; This function is called by:
  3730 ;;		_checkWaterLevel
  3731 ;; This function uses a non-reentrant model
  3732 ;;
  3733                           
  3734                           
  3735                           ;psect for function ___lwtoft
  3736  0BC3                     ___lwtoft:	
  3737                           
  3738                           ;incstack = 0
  3739                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  3740  0BC3  1283               	bcf	3,5	;RP0=0, select bank0
  3741  0BC4  1303               	bcf	3,6	;RP1=0, select bank0
  3742  0BC5  0828               	movf	___lwtoft@c,w
  3743  0BC6  00A0               	movwf	___ftpack@arg
  3744  0BC7  0829               	movf	___lwtoft@c+1,w
  3745  0BC8  00A1               	movwf	___ftpack@arg+1
  3746  0BC9  01A2               	clrf	___ftpack@arg+2
  3747  0BCA  308E               	movlw	142
  3748  0BCB  00F4               	movwf	??___lwtoft
  3749  0BCC  0874               	movf	??___lwtoft,w
  3750  0BCD  00A3               	movwf	___ftpack@exp
  3751  0BCE  01A4               	clrf	___ftpack@sign
  3752  0BCF  120A  158A  2708   	fcall	___ftpack
  3753  0BD2  1283               	bcf	3,5	;RP0=0, select bank0
  3754  0BD3  1303               	bcf	3,6	;RP1=0, select bank0
  3755  0BD4  0820               	movf	?___ftpack,w
  3756  0BD5  00A8               	movwf	?___lwtoft
  3757  0BD6  0821               	movf	?___ftpack+1,w
  3758  0BD7  00A9               	movwf	?___lwtoft+1
  3759  0BD8  0822               	movf	?___ftpack+2,w
  3760  0BD9  00AA               	movwf	?___lwtoft+2
  3761  0BDA  0008               	return
  3762  0BDB                     __end_of___lwtoft:	
  3763                           
  3764                           	psect	text17
  3765  0F72                     __ptext17:	
  3766 ;; *************** function ___fttol *****************
  3767 ;; Defined at:
  3768 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;  f1              3   43[BANK0 ] float 
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;  lval            4   52[BANK0 ] unsigned long 
  3773 ;;  exp1            1   56[BANK0 ] unsigned char 
  3774 ;;  sign1           1   51[BANK0 ] unsigned char 
  3775 ;; Return value:  Size  Location     Type
  3776 ;;                  4   43[BANK0 ] long 
  3777 ;; Registers used:
  3778 ;;		wreg, status,2, status,0
  3779 ;; Tracked objects:
  3780 ;;		On entry : 0/0
  3781 ;;		On exit  : 0/0
  3782 ;;		Unchanged: 0/0
  3783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3784 ;;      Params:         0       4       0       0       0
  3785 ;;      Locals:         0       6       0       0       0
  3786 ;;      Temps:          0       4       0       0       0
  3787 ;;      Totals:         0      14       0       0       0
  3788 ;;Total ram usage:       14 bytes
  3789 ;; Hardware stack levels used:    1
  3790 ;; Hardware stack levels required when called:    1
  3791 ;; This function calls:
  3792 ;;		Nothing
  3793 ;; This function is called by:
  3794 ;;		_checkWaterLevel
  3795 ;; This function uses a non-reentrant model
  3796 ;;
  3797                           
  3798                           
  3799                           ;psect for function ___fttol
  3800  0F72                     ___fttol:	
  3801                           
  3802                           ;incstack = 0
  3803                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3804  0F72  1283               	bcf	3,5	;RP0=0, select bank0
  3805  0F73  1303               	bcf	3,6	;RP1=0, select bank0
  3806  0F74  084B               	movf	___fttol@f1,w
  3807  0F75  00CF               	movwf	??___fttol
  3808  0F76  084C               	movf	___fttol@f1+1,w
  3809  0F77  00D0               	movwf	??___fttol+1
  3810  0F78  084D               	movf	___fttol@f1+2,w
  3811  0F79  00D1               	movwf	??___fttol+2
  3812  0F7A  1003               	clrc
  3813  0F7B  0D50               	rlf	??___fttol+1,w
  3814  0F7C  0D51               	rlf	??___fttol+2,w
  3815  0F7D  00D2               	movwf	??___fttol+3
  3816  0F7E  0852               	movf	??___fttol+3,w
  3817  0F7F  00D8               	movwf	___fttol@exp1
  3818  0F80  08D8               	movf	___fttol@exp1,f
  3819  0F81  1D03               	skipz
  3820  0F82  2F8C               	goto	l2956
  3821  0F83  3000               	movlw	0
  3822  0F84  00CE               	movwf	?___fttol+3
  3823  0F85  3000               	movlw	0
  3824  0F86  00CD               	movwf	?___fttol+2
  3825  0F87  3000               	movlw	0
  3826  0F88  00CC               	movwf	?___fttol+1
  3827  0F89  3000               	movlw	0
  3828  0F8A  00CB               	movwf	?___fttol
  3829  0F8B  0008               	return
  3830  0F8C                     l2956:	
  3831  0F8C  084B               	movf	___fttol@f1,w
  3832  0F8D  00CF               	movwf	??___fttol
  3833  0F8E  084C               	movf	___fttol@f1+1,w
  3834  0F8F  00D0               	movwf	??___fttol+1
  3835  0F90  084D               	movf	___fttol@f1+2,w
  3836  0F91  00D1               	movwf	??___fttol+2
  3837  0F92  3017               	movlw	23
  3838  0F93                     u3625:	
  3839  0F93  1003               	clrc
  3840  0F94  0CD1               	rrf	??___fttol+2,f
  3841  0F95  0CD0               	rrf	??___fttol+1,f
  3842  0F96  0CCF               	rrf	??___fttol,f
  3843  0F97  3EFF               	addlw	-1
  3844  0F98  1D03               	skipz
  3845  0F99  2F93               	goto	u3625
  3846  0F9A  084F               	movf	??___fttol,w
  3847  0F9B  00D2               	movwf	??___fttol+3
  3848  0F9C  0852               	movf	??___fttol+3,w
  3849  0F9D  00D3               	movwf	___fttol@sign1
  3850  0F9E  17CC               	bsf	___fttol@f1+1,7
  3851  0F9F  30FF               	movlw	255
  3852  0FA0  05CB               	andwf	___fttol@f1,f
  3853  0FA1  30FF               	movlw	255
  3854  0FA2  05CC               	andwf	___fttol@f1+1,f
  3855  0FA3  3000               	movlw	0
  3856  0FA4  05CD               	andwf	___fttol@f1+2,f
  3857  0FA5  084B               	movf	___fttol@f1,w
  3858  0FA6  00D4               	movwf	___fttol@lval
  3859  0FA7  084C               	movf	___fttol@f1+1,w
  3860  0FA8  00D5               	movwf	___fttol@lval+1
  3861  0FA9  084D               	movf	___fttol@f1+2,w
  3862  0FAA  00D6               	movwf	___fttol@lval+2
  3863  0FAB  01D7               	clrf	___fttol@lval+3
  3864  0FAC  308E               	movlw	142
  3865  0FAD  02D8               	subwf	___fttol@exp1,f
  3866  0FAE  1FD8               	btfss	___fttol@exp1,7
  3867  0FAF  2FCE               	goto	l2976
  3868  0FB0  0858               	movf	___fttol@exp1,w
  3869  0FB1  3A80               	xorlw	128
  3870  0FB2  3E8F               	addlw	143
  3871  0FB3  1803               	skipnc
  3872  0FB4  2FBE               	goto	l2974
  3873  0FB5  3000               	movlw	0
  3874  0FB6  00CE               	movwf	?___fttol+3
  3875  0FB7  3000               	movlw	0
  3876  0FB8  00CD               	movwf	?___fttol+2
  3877  0FB9  3000               	movlw	0
  3878  0FBA  00CC               	movwf	?___fttol+1
  3879  0FBB  3000               	movlw	0
  3880  0FBC  00CB               	movwf	?___fttol
  3881  0FBD  0008               	return
  3882  0FBE                     l2974:	
  3883  0FBE  3001               	movlw	1
  3884  0FBF                     u3655:	
  3885  0FBF  1003               	clrc
  3886  0FC0  0CD7               	rrf	___fttol@lval+3,f
  3887  0FC1  0CD6               	rrf	___fttol@lval+2,f
  3888  0FC2  0CD5               	rrf	___fttol@lval+1,f
  3889  0FC3  0CD4               	rrf	___fttol@lval,f
  3890  0FC4  3EFF               	addlw	-1
  3891  0FC5  1D03               	skipz
  3892  0FC6  2FBF               	goto	u3655
  3893  0FC7  3001               	movlw	1
  3894  0FC8  00CF               	movwf	??___fttol
  3895  0FC9  084F               	movf	??___fttol,w
  3896  0FCA  07D8               	addwf	___fttol@exp1,f
  3897  0FCB  1903               	btfsc	3,2
  3898  0FCC  2FE9               	goto	l2986
  3899  0FCD  2FBE               	goto	l2974
  3900  0FCE                     l2976:	
  3901  0FCE  3018               	movlw	24
  3902  0FCF  0258               	subwf	___fttol@exp1,w
  3903  0FD0  1C03               	skipc
  3904  0FD1  2FE6               	goto	l2984
  3905  0FD2  3000               	movlw	0
  3906  0FD3  00CE               	movwf	?___fttol+3
  3907  0FD4  3000               	movlw	0
  3908  0FD5  00CD               	movwf	?___fttol+2
  3909  0FD6  3000               	movlw	0
  3910  0FD7  00CC               	movwf	?___fttol+1
  3911  0FD8  3000               	movlw	0
  3912  0FD9  00CB               	movwf	?___fttol
  3913  0FDA  0008               	return
  3914  0FDB                     l2982:	
  3915  0FDB  3001               	movlw	1
  3916  0FDC  00CF               	movwf	??___fttol
  3917  0FDD                     u3685:	
  3918  0FDD  1003               	clrc
  3919  0FDE  0DD4               	rlf	___fttol@lval,f
  3920  0FDF  0DD5               	rlf	___fttol@lval+1,f
  3921  0FE0  0DD6               	rlf	___fttol@lval+2,f
  3922  0FE1  0DD7               	rlf	___fttol@lval+3,f
  3923  0FE2  0BCF               	decfsz	??___fttol,f
  3924  0FE3  2FDD               	goto	u3685
  3925  0FE4  3001               	movlw	1
  3926  0FE5  02D8               	subwf	___fttol@exp1,f
  3927  0FE6                     l2984:	
  3928  0FE6  08D8               	movf	___fttol@exp1,f
  3929  0FE7  1D03               	skipz
  3930  0FE8  2FDB               	goto	l2982
  3931  0FE9                     l2986:	
  3932  0FE9  0853               	movf	___fttol@sign1,w
  3933  0FEA  1903               	btfsc	3,2
  3934  0FEB  2FF7               	goto	l2990
  3935  0FEC  09D4               	comf	___fttol@lval,f
  3936  0FED  09D5               	comf	___fttol@lval+1,f
  3937  0FEE  09D6               	comf	___fttol@lval+2,f
  3938  0FEF  09D7               	comf	___fttol@lval+3,f
  3939  0FF0  0AD4               	incf	___fttol@lval,f
  3940  0FF1  1903               	skipnz
  3941  0FF2  0AD5               	incf	___fttol@lval+1,f
  3942  0FF3  1903               	skipnz
  3943  0FF4  0AD6               	incf	___fttol@lval+2,f
  3944  0FF5  1903               	skipnz
  3945  0FF6  0AD7               	incf	___fttol@lval+3,f
  3946  0FF7                     l2990:	
  3947  0FF7  0857               	movf	___fttol@lval+3,w
  3948  0FF8  00CE               	movwf	?___fttol+3
  3949  0FF9  0856               	movf	___fttol@lval+2,w
  3950  0FFA  00CD               	movwf	?___fttol+2
  3951  0FFB  0855               	movf	___fttol@lval+1,w
  3952  0FFC  00CC               	movwf	?___fttol+1
  3953  0FFD  0854               	movf	___fttol@lval,w
  3954  0FFE  00CB               	movwf	?___fttol
  3955  0FFF  0008               	return
  3956  1000                     __end_of___fttol:	
  3957                           
  3958                           	psect	text18
  3959  0BA2                     __ptext18:	
  3960 ;; *************** function ___ftneg *****************
  3961 ;; Defined at:
  3962 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  3963 ;; Parameters:    Size  Location     Type
  3964 ;;  f1              3   27[BANK0 ] float 
  3965 ;; Auto vars:     Size  Location     Type
  3966 ;;		None
  3967 ;; Return value:  Size  Location     Type
  3968 ;;                  3   27[BANK0 ] float 
  3969 ;; Registers used:
  3970 ;;		wreg
  3971 ;; Tracked objects:
  3972 ;;		On entry : 0/0
  3973 ;;		On exit  : 0/0
  3974 ;;		Unchanged: 0/0
  3975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3976 ;;      Params:         0       3       0       0       0
  3977 ;;      Locals:         0       0       0       0       0
  3978 ;;      Temps:          0       0       0       0       0
  3979 ;;      Totals:         0       3       0       0       0
  3980 ;;Total ram usage:        3 bytes
  3981 ;; Hardware stack levels used:    1
  3982 ;; Hardware stack levels required when called:    1
  3983 ;; This function calls:
  3984 ;;		Nothing
  3985 ;; This function is called by:
  3986 ;;		_checkWaterLevel
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           
  3990                           
  3991                           ;psect for function ___ftneg
  3992  0BA2                     ___ftneg:	
  3993                           
  3994                           ;incstack = 0
  3995                           ; Regs used in ___ftneg: [wreg]
  3996  0BA2  1283               	bcf	3,5	;RP0=0, select bank0
  3997  0BA3  1303               	bcf	3,6	;RP1=0, select bank0
  3998  0BA4  083D               	movf	___ftneg@f1+2,w
  3999  0BA5  043C               	iorwf	___ftneg@f1+1,w
  4000  0BA6  043B               	iorwf	___ftneg@f1,w
  4001  0BA7  1903               	skipnz
  4002  0BA8  0008               	return
  4003  0BA9  3080               	movlw	128
  4004  0BAA  06BD               	xorwf	___ftneg@f1+2,f
  4005  0BAB  0008               	return
  4006  0BAC                     __end_of___ftneg:	
  4007                           
  4008                           	psect	text19
  4009  058E                     __ptext19:	
  4010 ;; *************** function ___ftmul *****************
  4011 ;; Defined at:
  4012 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  4013 ;; Parameters:    Size  Location     Type
  4014 ;;  f1              3   11[BANK0 ] float 
  4015 ;;  f2              3   14[BANK0 ] float 
  4016 ;; Auto vars:     Size  Location     Type
  4017 ;;  f3_as_produc    3   22[BANK0 ] unsigned um
  4018 ;;  sign            1   26[BANK0 ] unsigned char 
  4019 ;;  cntr            1   25[BANK0 ] unsigned char 
  4020 ;;  exp             1   21[BANK0 ] unsigned char 
  4021 ;; Return value:  Size  Location     Type
  4022 ;;                  3   11[BANK0 ] float 
  4023 ;; Registers used:
  4024 ;;		wreg, status,2, status,0, pclath, cstack
  4025 ;; Tracked objects:
  4026 ;;		On entry : 0/0
  4027 ;;		On exit  : 0/0
  4028 ;;		Unchanged: 0/0
  4029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4030 ;;      Params:         0       6       0       0       0
  4031 ;;      Locals:         0       6       0       0       0
  4032 ;;      Temps:          0       4       0       0       0
  4033 ;;      Totals:         0      16       0       0       0
  4034 ;;Total ram usage:       16 bytes
  4035 ;; Hardware stack levels used:    1
  4036 ;; Hardware stack levels required when called:    2
  4037 ;; This function calls:
  4038 ;;		___ftpack
  4039 ;; This function is called by:
  4040 ;;		_checkWaterLevel
  4041 ;; This function uses a non-reentrant model
  4042 ;;
  4043                           
  4044                           
  4045                           ;psect for function ___ftmul
  4046  058E                     ___ftmul:	
  4047                           
  4048                           ;incstack = 0
  4049                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4050  058E  1283               	bcf	3,5	;RP0=0, select bank0
  4051  058F  1303               	bcf	3,6	;RP1=0, select bank0
  4052  0590  082B               	movf	___ftmul@f1,w
  4053  0591  00B1               	movwf	??___ftmul
  4054  0592  082C               	movf	___ftmul@f1+1,w
  4055  0593  00B2               	movwf	??___ftmul+1
  4056  0594  082D               	movf	___ftmul@f1+2,w
  4057  0595  00B3               	movwf	??___ftmul+2
  4058  0596  1003               	clrc
  4059  0597  0D32               	rlf	??___ftmul+1,w
  4060  0598  0D33               	rlf	??___ftmul+2,w
  4061  0599  00B4               	movwf	??___ftmul+3
  4062  059A  0834               	movf	??___ftmul+3,w
  4063  059B  00B5               	movwf	___ftmul@exp
  4064  059C  08B5               	movf	___ftmul@exp,f
  4065  059D  1D03               	skipz
  4066  059E  2DA6               	goto	l2898
  4067  059F  3000               	movlw	0
  4068  05A0  00AB               	movwf	?___ftmul
  4069  05A1  3000               	movlw	0
  4070  05A2  00AC               	movwf	?___ftmul+1
  4071  05A3  3000               	movlw	0
  4072  05A4  00AD               	movwf	?___ftmul+2
  4073  05A5  0008               	return
  4074  05A6                     l2898:	
  4075  05A6  082E               	movf	___ftmul@f2,w
  4076  05A7  00B1               	movwf	??___ftmul
  4077  05A8  082F               	movf	___ftmul@f2+1,w
  4078  05A9  00B2               	movwf	??___ftmul+1
  4079  05AA  0830               	movf	___ftmul@f2+2,w
  4080  05AB  00B3               	movwf	??___ftmul+2
  4081  05AC  1003               	clrc
  4082  05AD  0D32               	rlf	??___ftmul+1,w
  4083  05AE  0D33               	rlf	??___ftmul+2,w
  4084  05AF  00B4               	movwf	??___ftmul+3
  4085  05B0  0834               	movf	??___ftmul+3,w
  4086  05B1  00BA               	movwf	___ftmul@sign
  4087  05B2  08BA               	movf	___ftmul@sign,f
  4088  05B3  1D03               	skipz
  4089  05B4  2DBC               	goto	l2904
  4090  05B5  3000               	movlw	0
  4091  05B6  00AB               	movwf	?___ftmul
  4092  05B7  3000               	movlw	0
  4093  05B8  00AC               	movwf	?___ftmul+1
  4094  05B9  3000               	movlw	0
  4095  05BA  00AD               	movwf	?___ftmul+2
  4096  05BB  0008               	return
  4097  05BC                     l2904:	
  4098  05BC  083A               	movf	___ftmul@sign,w
  4099  05BD  3E7B               	addlw	123
  4100  05BE  00B1               	movwf	??___ftmul
  4101  05BF  0831               	movf	??___ftmul,w
  4102  05C0  07B5               	addwf	___ftmul@exp,f
  4103  05C1  082B               	movf	___ftmul@f1,w
  4104  05C2  00B1               	movwf	??___ftmul
  4105  05C3  082C               	movf	___ftmul@f1+1,w
  4106  05C4  00B2               	movwf	??___ftmul+1
  4107  05C5  082D               	movf	___ftmul@f1+2,w
  4108  05C6  00B3               	movwf	??___ftmul+2
  4109  05C7  3010               	movlw	16
  4110  05C8                     u3485:	
  4111  05C8  1003               	clrc
  4112  05C9  0CB3               	rrf	??___ftmul+2,f
  4113  05CA  0CB2               	rrf	??___ftmul+1,f
  4114  05CB  0CB1               	rrf	??___ftmul,f
  4115  05CC  3EFF               	addlw	-1
  4116  05CD  1D03               	skipz
  4117  05CE  2DC8               	goto	u3485
  4118  05CF  0831               	movf	??___ftmul,w
  4119  05D0  00B4               	movwf	??___ftmul+3
  4120  05D1  0834               	movf	??___ftmul+3,w
  4121  05D2  00BA               	movwf	___ftmul@sign
  4122  05D3  082E               	movf	___ftmul@f2,w
  4123  05D4  00B1               	movwf	??___ftmul
  4124  05D5  082F               	movf	___ftmul@f2+1,w
  4125  05D6  00B2               	movwf	??___ftmul+1
  4126  05D7  0830               	movf	___ftmul@f2+2,w
  4127  05D8  00B3               	movwf	??___ftmul+2
  4128  05D9  3010               	movlw	16
  4129  05DA                     u3495:	
  4130  05DA  1003               	clrc
  4131  05DB  0CB3               	rrf	??___ftmul+2,f
  4132  05DC  0CB2               	rrf	??___ftmul+1,f
  4133  05DD  0CB1               	rrf	??___ftmul,f
  4134  05DE  3EFF               	addlw	-1
  4135  05DF  1D03               	skipz
  4136  05E0  2DDA               	goto	u3495
  4137  05E1  0831               	movf	??___ftmul,w
  4138  05E2  00B4               	movwf	??___ftmul+3
  4139  05E3  0834               	movf	??___ftmul+3,w
  4140  05E4  06BA               	xorwf	___ftmul@sign,f
  4141  05E5  3080               	movlw	128
  4142  05E6  00B1               	movwf	??___ftmul
  4143  05E7  0831               	movf	??___ftmul,w
  4144  05E8  05BA               	andwf	___ftmul@sign,f
  4145  05E9  17AC               	bsf	___ftmul@f1+1,7
  4146  05EA  17AF               	bsf	___ftmul@f2+1,7
  4147  05EB  30FF               	movlw	255
  4148  05EC  05AE               	andwf	___ftmul@f2,f
  4149  05ED  30FF               	movlw	255
  4150  05EE  05AF               	andwf	___ftmul@f2+1,f
  4151  05EF  3000               	movlw	0
  4152  05F0  05B0               	andwf	___ftmul@f2+2,f
  4153  05F1  3000               	movlw	0
  4154  05F2  00B6               	movwf	___ftmul@f3_as_product
  4155  05F3  3000               	movlw	0
  4156  05F4  00B7               	movwf	___ftmul@f3_as_product+1
  4157  05F5  3000               	movlw	0
  4158  05F6  00B8               	movwf	___ftmul@f3_as_product+2
  4159  05F7  3007               	movlw	7
  4160  05F8  00B1               	movwf	??___ftmul
  4161  05F9  0831               	movf	??___ftmul,w
  4162  05FA  00B9               	movwf	___ftmul@cntr
  4163  05FB                     l2916:	
  4164  05FB  1C2B               	btfss	___ftmul@f1,0
  4165  05FC  2E0B               	goto	l2920
  4166  05FD  082E               	movf	___ftmul@f2,w
  4167  05FE  07B6               	addwf	___ftmul@f3_as_product,f
  4168  05FF  082F               	movf	___ftmul@f2+1,w
  4169  0600  1103               	clrz
  4170  0601  1803               	skipnc
  4171  0602  0A2F               	incf	___ftmul@f2+1,w
  4172  0603  1D03               	btfss	3,2
  4173  0604  07B7               	addwf	___ftmul@f3_as_product+1,f
  4174  0605  0830               	movf	___ftmul@f2+2,w
  4175  0606  1103               	clrz
  4176  0607  1803               	skipnc
  4177  0608  0A30               	incf	___ftmul@f2+2,w
  4178  0609  1D03               	btfss	3,2
  4179  060A  07B8               	addwf	___ftmul@f3_as_product+2,f
  4180  060B                     l2920:	
  4181  060B  3001               	movlw	1
  4182  060C                     u3525:	
  4183  060C  1003               	clrc
  4184  060D  0CAD               	rrf	___ftmul@f1+2,f
  4185  060E  0CAC               	rrf	___ftmul@f1+1,f
  4186  060F  0CAB               	rrf	___ftmul@f1,f
  4187  0610  3EFF               	addlw	-1
  4188  0611  1D03               	skipz
  4189  0612  2E0C               	goto	u3525
  4190  0613  3001               	movlw	1
  4191  0614                     u3535:	
  4192  0614  1003               	clrc
  4193  0615  0DAE               	rlf	___ftmul@f2,f
  4194  0616  0DAF               	rlf	___ftmul@f2+1,f
  4195  0617  0DB0               	rlf	___ftmul@f2+2,f
  4196  0618  3EFF               	addlw	-1
  4197  0619  1D03               	skipz
  4198  061A  2E14               	goto	u3535
  4199  061B  3001               	movlw	1
  4200  061C  02B9               	subwf	___ftmul@cntr,f
  4201  061D  1D03               	btfss	3,2
  4202  061E  2DFB               	goto	l2916
  4203  061F  3009               	movlw	9
  4204  0620  00B1               	movwf	??___ftmul
  4205  0621  0831               	movf	??___ftmul,w
  4206  0622  00B9               	movwf	___ftmul@cntr
  4207  0623                     l2928:	
  4208  0623  1C2B               	btfss	___ftmul@f1,0
  4209  0624  2E33               	goto	l2932
  4210  0625  082E               	movf	___ftmul@f2,w
  4211  0626  07B6               	addwf	___ftmul@f3_as_product,f
  4212  0627  082F               	movf	___ftmul@f2+1,w
  4213  0628  1103               	clrz
  4214  0629  1803               	skipnc
  4215  062A  0A2F               	incf	___ftmul@f2+1,w
  4216  062B  1D03               	btfss	3,2
  4217  062C  07B7               	addwf	___ftmul@f3_as_product+1,f
  4218  062D  0830               	movf	___ftmul@f2+2,w
  4219  062E  1103               	clrz
  4220  062F  1803               	skipnc
  4221  0630  0A30               	incf	___ftmul@f2+2,w
  4222  0631  1D03               	btfss	3,2
  4223  0632  07B8               	addwf	___ftmul@f3_as_product+2,f
  4224  0633                     l2932:	
  4225  0633  3001               	movlw	1
  4226  0634                     u3575:	
  4227  0634  1003               	clrc
  4228  0635  0CAD               	rrf	___ftmul@f1+2,f
  4229  0636  0CAC               	rrf	___ftmul@f1+1,f
  4230  0637  0CAB               	rrf	___ftmul@f1,f
  4231  0638  3EFF               	addlw	-1
  4232  0639  1D03               	skipz
  4233  063A  2E34               	goto	u3575
  4234  063B  3001               	movlw	1
  4235  063C                     u3585:	
  4236  063C  1003               	clrc
  4237  063D  0CB8               	rrf	___ftmul@f3_as_product+2,f
  4238  063E  0CB7               	rrf	___ftmul@f3_as_product+1,f
  4239  063F  0CB6               	rrf	___ftmul@f3_as_product,f
  4240  0640  3EFF               	addlw	-1
  4241  0641  1D03               	skipz
  4242  0642  2E3C               	goto	u3585
  4243  0643  3001               	movlw	1
  4244  0644  02B9               	subwf	___ftmul@cntr,f
  4245  0645  1D03               	btfss	3,2
  4246  0646  2E23               	goto	l2928
  4247  0647  0836               	movf	___ftmul@f3_as_product,w
  4248  0648  00A0               	movwf	___ftpack@arg
  4249  0649  0837               	movf	___ftmul@f3_as_product+1,w
  4250  064A  00A1               	movwf	___ftpack@arg+1
  4251  064B  0838               	movf	___ftmul@f3_as_product+2,w
  4252  064C  00A2               	movwf	___ftpack@arg+2
  4253  064D  0835               	movf	___ftmul@exp,w
  4254  064E  00B1               	movwf	??___ftmul
  4255  064F  0831               	movf	??___ftmul,w
  4256  0650  00A3               	movwf	___ftpack@exp
  4257  0651  083A               	movf	___ftmul@sign,w
  4258  0652  00B2               	movwf	??___ftmul+1
  4259  0653  0832               	movf	??___ftmul+1,w
  4260  0654  00A4               	movwf	___ftpack@sign
  4261  0655  120A  158A  2708   	fcall	___ftpack
  4262  0658  1283               	bcf	3,5	;RP0=0, select bank0
  4263  0659  1303               	bcf	3,6	;RP1=0, select bank0
  4264  065A  0820               	movf	?___ftpack,w
  4265  065B  00AB               	movwf	?___ftmul
  4266  065C  0821               	movf	?___ftpack+1,w
  4267  065D  00AC               	movwf	?___ftmul+1
  4268  065E  0822               	movf	?___ftpack+2,w
  4269  065F  00AD               	movwf	?___ftmul+2
  4270  0660  0008               	return
  4271  0661                     __end_of___ftmul:	
  4272                           
  4273                           	psect	text20
  4274  0E4A                     __ptext20:	
  4275 ;; *************** function ___ftge *****************
  4276 ;; Defined at:
  4277 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  4278 ;; Parameters:    Size  Location     Type
  4279 ;;  ff1             3    0[BANK0 ] float 
  4280 ;;  ff2             3    3[BANK0 ] float 
  4281 ;; Auto vars:     Size  Location     Type
  4282 ;;		None
  4283 ;; Return value:  Size  Location     Type
  4284 ;;		None               void
  4285 ;; Registers used:
  4286 ;;		wreg, status,2, status,0
  4287 ;; Tracked objects:
  4288 ;;		On entry : 0/0
  4289 ;;		On exit  : 0/0
  4290 ;;		Unchanged: 0/0
  4291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4292 ;;      Params:         0       6       0       0       0
  4293 ;;      Locals:         0       0       0       0       0
  4294 ;;      Temps:          0       6       0       0       0
  4295 ;;      Totals:         0      12       0       0       0
  4296 ;;Total ram usage:       12 bytes
  4297 ;; Hardware stack levels used:    1
  4298 ;; Hardware stack levels required when called:    1
  4299 ;; This function calls:
  4300 ;;		Nothing
  4301 ;; This function is called by:
  4302 ;;		_checkWaterLevel
  4303 ;; This function uses a non-reentrant model
  4304 ;;
  4305                           
  4306                           
  4307                           ;psect for function ___ftge
  4308  0E4A                     ___ftge:	
  4309                           
  4310                           ;incstack = 0
  4311                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  4312  0E4A  1283               	bcf	3,5	;RP0=0, select bank0
  4313  0E4B  1303               	bcf	3,6	;RP1=0, select bank0
  4314  0E4C  1FA2               	btfss	___ftge@ff1+2,7
  4315  0E4D  2E73               	goto	l2876
  4316  0E4E  3000               	movlw	0
  4317  0E4F  00A6               	movwf	??___ftge
  4318  0E50  3000               	movlw	0
  4319  0E51  00A7               	movwf	??___ftge+1
  4320  0E52  3080               	movlw	128
  4321  0E53  00A8               	movwf	??___ftge+2
  4322  0E54  0920               	comf	___ftge@ff1,w
  4323  0E55  00A9               	movwf	??___ftge+3
  4324  0E56  0921               	comf	___ftge@ff1+1,w
  4325  0E57  00AA               	movwf	??___ftge+4
  4326  0E58  0922               	comf	___ftge@ff1+2,w
  4327  0E59  00AB               	movwf	??___ftge+5
  4328  0E5A  0AA9               	incf	??___ftge+3,f
  4329  0E5B  1903               	skipnz
  4330  0E5C  0AAA               	incf	??___ftge+4,f
  4331  0E5D  1903               	skipnz
  4332  0E5E  0AAB               	incf	??___ftge+5,f
  4333  0E5F  0829               	movf	??___ftge+3,w
  4334  0E60  07A6               	addwf	??___ftge,f
  4335  0E61  082A               	movf	??___ftge+4,w
  4336  0E62  1803               	skipnc
  4337  0E63  0F2A               	incfsz	??___ftge+4,w
  4338  0E64  2E66               	goto	u3421
  4339  0E65  2E67               	goto	u3422
  4340  0E66                     u3421:	
  4341  0E66  07A7               	addwf	??___ftge+1,f
  4342  0E67                     u3422:	
  4343  0E67  082B               	movf	??___ftge+5,w
  4344  0E68  1803               	skipnc
  4345  0E69  0F2B               	incfsz	??___ftge+5,w
  4346  0E6A  2E6C               	goto	u3423
  4347  0E6B  2E6D               	goto	u3424
  4348  0E6C                     u3423:	
  4349  0E6C  07A8               	addwf	??___ftge+2,f
  4350  0E6D                     u3424:	
  4351  0E6D  0826               	movf	??___ftge,w
  4352  0E6E  00A0               	movwf	___ftge@ff1
  4353  0E6F  0827               	movf	??___ftge+1,w
  4354  0E70  00A1               	movwf	___ftge@ff1+1
  4355  0E71  0828               	movf	??___ftge+2,w
  4356  0E72  00A2               	movwf	___ftge@ff1+2
  4357  0E73                     l2876:	
  4358  0E73  1FA5               	btfss	___ftge@ff2+2,7
  4359  0E74  2E9A               	goto	l2880
  4360  0E75  3000               	movlw	0
  4361  0E76  00A6               	movwf	??___ftge
  4362  0E77  3000               	movlw	0
  4363  0E78  00A7               	movwf	??___ftge+1
  4364  0E79  3080               	movlw	128
  4365  0E7A  00A8               	movwf	??___ftge+2
  4366  0E7B  0923               	comf	___ftge@ff2,w
  4367  0E7C  00A9               	movwf	??___ftge+3
  4368  0E7D  0924               	comf	___ftge@ff2+1,w
  4369  0E7E  00AA               	movwf	??___ftge+4
  4370  0E7F  0925               	comf	___ftge@ff2+2,w
  4371  0E80  00AB               	movwf	??___ftge+5
  4372  0E81  0AA9               	incf	??___ftge+3,f
  4373  0E82  1903               	skipnz
  4374  0E83  0AAA               	incf	??___ftge+4,f
  4375  0E84  1903               	skipnz
  4376  0E85  0AAB               	incf	??___ftge+5,f
  4377  0E86  0829               	movf	??___ftge+3,w
  4378  0E87  07A6               	addwf	??___ftge,f
  4379  0E88  082A               	movf	??___ftge+4,w
  4380  0E89  1803               	skipnc
  4381  0E8A  0F2A               	incfsz	??___ftge+4,w
  4382  0E8B  2E8D               	goto	u3441
  4383  0E8C  2E8E               	goto	u3442
  4384  0E8D                     u3441:	
  4385  0E8D  07A7               	addwf	??___ftge+1,f
  4386  0E8E                     u3442:	
  4387  0E8E  082B               	movf	??___ftge+5,w
  4388  0E8F  1803               	skipnc
  4389  0E90  0F2B               	incfsz	??___ftge+5,w
  4390  0E91  2E93               	goto	u3443
  4391  0E92  2E94               	goto	u3444
  4392  0E93                     u3443:	
  4393  0E93  07A8               	addwf	??___ftge+2,f
  4394  0E94                     u3444:	
  4395  0E94  0826               	movf	??___ftge,w
  4396  0E95  00A3               	movwf	___ftge@ff2
  4397  0E96  0827               	movf	??___ftge+1,w
  4398  0E97  00A4               	movwf	___ftge@ff2+1
  4399  0E98  0828               	movf	??___ftge+2,w
  4400  0E99  00A5               	movwf	___ftge@ff2+2
  4401  0E9A                     l2880:	
  4402  0E9A  3080               	movlw	128
  4403  0E9B  06A2               	xorwf	___ftge@ff1+2,f
  4404  0E9C  3080               	movlw	128
  4405  0E9D  06A5               	xorwf	___ftge@ff2+2,f
  4406  0E9E  0825               	movf	___ftge@ff2+2,w
  4407  0E9F  0222               	subwf	___ftge@ff1+2,w
  4408  0EA0  1D03               	skipz
  4409  0EA1  0008               	return
  4410  0EA2  0824               	movf	___ftge@ff2+1,w
  4411  0EA3  0221               	subwf	___ftge@ff1+1,w
  4412  0EA4  1D03               	skipz
  4413  0EA5  0008               	return
  4414  0EA6  0823               	movf	___ftge@ff2,w
  4415  0EA7  0220               	subwf	___ftge@ff1,w
  4416  0EA8  0008               	return
  4417  0EA9                     __end_of___ftge:	
  4418                           
  4419                           	psect	text21
  4420  0661                     __ptext21:	
  4421 ;; *************** function ___ftdiv *****************
  4422 ;; Defined at:
  4423 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  4424 ;; Parameters:    Size  Location     Type
  4425 ;;  f2              3    8[BANK0 ] float 
  4426 ;;  f1              3   11[BANK0 ] float 
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;  f3              3   19[BANK0 ] float 
  4429 ;;  sign            1   23[BANK0 ] unsigned char 
  4430 ;;  exp             1   22[BANK0 ] unsigned char 
  4431 ;;  cntr            1   18[BANK0 ] unsigned char 
  4432 ;; Return value:  Size  Location     Type
  4433 ;;                  3    8[BANK0 ] float 
  4434 ;; Registers used:
  4435 ;;		wreg, status,2, status,0, pclath, cstack
  4436 ;; Tracked objects:
  4437 ;;		On entry : 0/0
  4438 ;;		On exit  : 0/0
  4439 ;;		Unchanged: 0/0
  4440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4441 ;;      Params:         0       6       0       0       0
  4442 ;;      Locals:         0       6       0       0       0
  4443 ;;      Temps:          0       4       0       0       0
  4444 ;;      Totals:         0      16       0       0       0
  4445 ;;Total ram usage:       16 bytes
  4446 ;; Hardware stack levels used:    1
  4447 ;; Hardware stack levels required when called:    2
  4448 ;; This function calls:
  4449 ;;		___ftpack
  4450 ;; This function is called by:
  4451 ;;		_checkWaterLevel
  4452 ;; This function uses a non-reentrant model
  4453 ;;
  4454                           
  4455                           
  4456                           ;psect for function ___ftdiv
  4457  0661                     ___ftdiv:	
  4458                           
  4459                           ;incstack = 0
  4460                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  4461  0661  1283               	bcf	3,5	;RP0=0, select bank0
  4462  0662  1303               	bcf	3,6	;RP1=0, select bank0
  4463  0663  082B               	movf	___ftdiv@f1,w
  4464  0664  00AE               	movwf	??___ftdiv
  4465  0665  082C               	movf	___ftdiv@f1+1,w
  4466  0666  00AF               	movwf	??___ftdiv+1
  4467  0667  082D               	movf	___ftdiv@f1+2,w
  4468  0668  00B0               	movwf	??___ftdiv+2
  4469  0669  1003               	clrc
  4470  066A  0D2F               	rlf	??___ftdiv+1,w
  4471  066B  0D30               	rlf	??___ftdiv+2,w
  4472  066C  00B1               	movwf	??___ftdiv+3
  4473  066D  0831               	movf	??___ftdiv+3,w
  4474  066E  00B6               	movwf	___ftdiv@exp
  4475  066F  08B6               	movf	___ftdiv@exp,f
  4476  0670  1D03               	skipz
  4477  0671  2E79               	goto	l2836
  4478  0672  3000               	movlw	0
  4479  0673  00A8               	movwf	?___ftdiv
  4480  0674  3000               	movlw	0
  4481  0675  00A9               	movwf	?___ftdiv+1
  4482  0676  3000               	movlw	0
  4483  0677  00AA               	movwf	?___ftdiv+2
  4484  0678  0008               	return
  4485  0679                     l2836:	
  4486  0679  0828               	movf	___ftdiv@f2,w
  4487  067A  00AE               	movwf	??___ftdiv
  4488  067B  0829               	movf	___ftdiv@f2+1,w
  4489  067C  00AF               	movwf	??___ftdiv+1
  4490  067D  082A               	movf	___ftdiv@f2+2,w
  4491  067E  00B0               	movwf	??___ftdiv+2
  4492  067F  1003               	clrc
  4493  0680  0D2F               	rlf	??___ftdiv+1,w
  4494  0681  0D30               	rlf	??___ftdiv+2,w
  4495  0682  00B1               	movwf	??___ftdiv+3
  4496  0683  0831               	movf	??___ftdiv+3,w
  4497  0684  00B7               	movwf	___ftdiv@sign
  4498  0685  08B7               	movf	___ftdiv@sign,f
  4499  0686  1D03               	skipz
  4500  0687  2E8F               	goto	l2842
  4501  0688  3000               	movlw	0
  4502  0689  00A8               	movwf	?___ftdiv
  4503  068A  3000               	movlw	0
  4504  068B  00A9               	movwf	?___ftdiv+1
  4505  068C  3000               	movlw	0
  4506  068D  00AA               	movwf	?___ftdiv+2
  4507  068E  0008               	return
  4508  068F                     l2842:	
  4509  068F  3000               	movlw	0
  4510  0690  00B3               	movwf	___ftdiv@f3
  4511  0691  3000               	movlw	0
  4512  0692  00B4               	movwf	___ftdiv@f3+1
  4513  0693  3000               	movlw	0
  4514  0694  00B5               	movwf	___ftdiv@f3+2
  4515  0695  3089               	movlw	137
  4516  0696  0737               	addwf	___ftdiv@sign,w
  4517  0697  00AE               	movwf	??___ftdiv
  4518  0698  082E               	movf	??___ftdiv,w
  4519  0699  02B6               	subwf	___ftdiv@exp,f
  4520  069A  082B               	movf	___ftdiv@f1,w
  4521  069B  00AE               	movwf	??___ftdiv
  4522  069C  082C               	movf	___ftdiv@f1+1,w
  4523  069D  00AF               	movwf	??___ftdiv+1
  4524  069E  082D               	movf	___ftdiv@f1+2,w
  4525  069F  00B0               	movwf	??___ftdiv+2
  4526  06A0  3010               	movlw	16
  4527  06A1                     u3355:	
  4528  06A1  1003               	clrc
  4529  06A2  0CB0               	rrf	??___ftdiv+2,f
  4530  06A3  0CAF               	rrf	??___ftdiv+1,f
  4531  06A4  0CAE               	rrf	??___ftdiv,f
  4532  06A5  3EFF               	addlw	-1
  4533  06A6  1D03               	skipz
  4534  06A7  2EA1               	goto	u3355
  4535  06A8  082E               	movf	??___ftdiv,w
  4536  06A9  00B1               	movwf	??___ftdiv+3
  4537  06AA  0831               	movf	??___ftdiv+3,w
  4538  06AB  00B7               	movwf	___ftdiv@sign
  4539  06AC  0828               	movf	___ftdiv@f2,w
  4540  06AD  00AE               	movwf	??___ftdiv
  4541  06AE  0829               	movf	___ftdiv@f2+1,w
  4542  06AF  00AF               	movwf	??___ftdiv+1
  4543  06B0  082A               	movf	___ftdiv@f2+2,w
  4544  06B1  00B0               	movwf	??___ftdiv+2
  4545  06B2  3010               	movlw	16
  4546  06B3                     u3365:	
  4547  06B3  1003               	clrc
  4548  06B4  0CB0               	rrf	??___ftdiv+2,f
  4549  06B5  0CAF               	rrf	??___ftdiv+1,f
  4550  06B6  0CAE               	rrf	??___ftdiv,f
  4551  06B7  3EFF               	addlw	-1
  4552  06B8  1D03               	skipz
  4553  06B9  2EB3               	goto	u3365
  4554  06BA  082E               	movf	??___ftdiv,w
  4555  06BB  00B1               	movwf	??___ftdiv+3
  4556  06BC  0831               	movf	??___ftdiv+3,w
  4557  06BD  06B7               	xorwf	___ftdiv@sign,f
  4558  06BE  3080               	movlw	128
  4559  06BF  00AE               	movwf	??___ftdiv
  4560  06C0  082E               	movf	??___ftdiv,w
  4561  06C1  05B7               	andwf	___ftdiv@sign,f
  4562  06C2  17AC               	bsf	___ftdiv@f1+1,7
  4563  06C3  30FF               	movlw	255
  4564  06C4  05AB               	andwf	___ftdiv@f1,f
  4565  06C5  30FF               	movlw	255
  4566  06C6  05AC               	andwf	___ftdiv@f1+1,f
  4567  06C7  3000               	movlw	0
  4568  06C8  05AD               	andwf	___ftdiv@f1+2,f
  4569  06C9  17A9               	bsf	___ftdiv@f2+1,7
  4570  06CA  30FF               	movlw	255
  4571  06CB  05A8               	andwf	___ftdiv@f2,f
  4572  06CC  30FF               	movlw	255
  4573  06CD  05A9               	andwf	___ftdiv@f2+1,f
  4574  06CE  3000               	movlw	0
  4575  06CF  05AA               	andwf	___ftdiv@f2+2,f
  4576  06D0  3018               	movlw	24
  4577  06D1  00AE               	movwf	??___ftdiv
  4578  06D2  082E               	movf	??___ftdiv,w
  4579  06D3  00B2               	movwf	___ftdiv@cntr
  4580  06D4                     l2856:	
  4581  06D4  3001               	movlw	1
  4582  06D5                     u3375:	
  4583  06D5  1003               	clrc
  4584  06D6  0DB3               	rlf	___ftdiv@f3,f
  4585  06D7  0DB4               	rlf	___ftdiv@f3+1,f
  4586  06D8  0DB5               	rlf	___ftdiv@f3+2,f
  4587  06D9  3EFF               	addlw	-1
  4588  06DA  1D03               	skipz
  4589  06DB  2ED5               	goto	u3375
  4590  06DC  082A               	movf	___ftdiv@f2+2,w
  4591  06DD  022D               	subwf	___ftdiv@f1+2,w
  4592  06DE  1D03               	skipz
  4593  06DF  2EE6               	goto	u3385
  4594  06E0  0829               	movf	___ftdiv@f2+1,w
  4595  06E1  022C               	subwf	___ftdiv@f1+1,w
  4596  06E2  1D03               	skipz
  4597  06E3  2EE6               	goto	u3385
  4598  06E4  0828               	movf	___ftdiv@f2,w
  4599  06E5  022B               	subwf	___ftdiv@f1,w
  4600  06E6                     u3385:	
  4601  06E6  1C03               	skipc
  4602  06E7  2EF3               	goto	l2864
  4603  06E8  0828               	movf	___ftdiv@f2,w
  4604  06E9  02AB               	subwf	___ftdiv@f1,f
  4605  06EA  0829               	movf	___ftdiv@f2+1,w
  4606  06EB  1C03               	skipc
  4607  06EC  0F29               	incfsz	___ftdiv@f2+1,w
  4608  06ED  02AC               	subwf	___ftdiv@f1+1,f
  4609  06EE  082A               	movf	___ftdiv@f2+2,w
  4610  06EF  1C03               	skipc
  4611  06F0  0A2A               	incf	___ftdiv@f2+2,w
  4612  06F1  02AD               	subwf	___ftdiv@f1+2,f
  4613  06F2  1433               	bsf	___ftdiv@f3,0
  4614  06F3                     l2864:	
  4615  06F3  3001               	movlw	1
  4616  06F4                     u3395:	
  4617  06F4  1003               	clrc
  4618  06F5  0DAB               	rlf	___ftdiv@f1,f
  4619  06F6  0DAC               	rlf	___ftdiv@f1+1,f
  4620  06F7  0DAD               	rlf	___ftdiv@f1+2,f
  4621  06F8  3EFF               	addlw	-1
  4622  06F9  1D03               	skipz
  4623  06FA  2EF4               	goto	u3395
  4624  06FB  3001               	movlw	1
  4625  06FC  02B2               	subwf	___ftdiv@cntr,f
  4626  06FD  1D03               	btfss	3,2
  4627  06FE  2ED4               	goto	l2856
  4628  06FF  0833               	movf	___ftdiv@f3,w
  4629  0700  00A0               	movwf	___ftpack@arg
  4630  0701  0834               	movf	___ftdiv@f3+1,w
  4631  0702  00A1               	movwf	___ftpack@arg+1
  4632  0703  0835               	movf	___ftdiv@f3+2,w
  4633  0704  00A2               	movwf	___ftpack@arg+2
  4634  0705  0836               	movf	___ftdiv@exp,w
  4635  0706  00AE               	movwf	??___ftdiv
  4636  0707  082E               	movf	??___ftdiv,w
  4637  0708  00A3               	movwf	___ftpack@exp
  4638  0709  0837               	movf	___ftdiv@sign,w
  4639  070A  00AF               	movwf	??___ftdiv+1
  4640  070B  082F               	movf	??___ftdiv+1,w
  4641  070C  00A4               	movwf	___ftpack@sign
  4642  070D  120A  158A  2708   	fcall	___ftpack
  4643  0710  1283               	bcf	3,5	;RP0=0, select bank0
  4644  0711  1303               	bcf	3,6	;RP1=0, select bank0
  4645  0712  0820               	movf	?___ftpack,w
  4646  0713  00A8               	movwf	?___ftdiv
  4647  0714  0821               	movf	?___ftpack+1,w
  4648  0715  00A9               	movwf	?___ftdiv+1
  4649  0716  0822               	movf	?___ftpack+2,w
  4650  0717  00AA               	movwf	?___ftdiv+2
  4651  0718  0008               	return
  4652  0719                     __end_of___ftdiv:	
  4653                           
  4654                           	psect	text22
  4655  03AA                     __ptext22:	
  4656 ;; *************** function ___ftadd *****************
  4657 ;; Defined at:
  4658 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;  f1              3   30[BANK0 ] float 
  4661 ;;  f2              3   33[BANK0 ] float 
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;  exp1            1   42[BANK0 ] unsigned char 
  4664 ;;  exp2            1   41[BANK0 ] unsigned char 
  4665 ;;  sign            1   40[BANK0 ] unsigned char 
  4666 ;; Return value:  Size  Location     Type
  4667 ;;                  3   30[BANK0 ] float 
  4668 ;; Registers used:
  4669 ;;		wreg, status,2, status,0, pclath, cstack
  4670 ;; Tracked objects:
  4671 ;;		On entry : 0/0
  4672 ;;		On exit  : 0/0
  4673 ;;		Unchanged: 0/0
  4674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4675 ;;      Params:         0       6       0       0       0
  4676 ;;      Locals:         0       3       0       0       0
  4677 ;;      Temps:          0       4       0       0       0
  4678 ;;      Totals:         0      13       0       0       0
  4679 ;;Total ram usage:       13 bytes
  4680 ;; Hardware stack levels used:    1
  4681 ;; Hardware stack levels required when called:    2
  4682 ;; This function calls:
  4683 ;;		___ftpack
  4684 ;; This function is called by:
  4685 ;;		_checkWaterLevel
  4686 ;; This function uses a non-reentrant model
  4687 ;;
  4688                           
  4689                           
  4690                           ;psect for function ___ftadd
  4691  03AA                     ___ftadd:	
  4692                           
  4693                           ;incstack = 0
  4694                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4695  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  4696  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  4697  03AC  083E               	movf	___ftadd@f1,w
  4698  03AD  00C4               	movwf	??___ftadd
  4699  03AE  083F               	movf	___ftadd@f1+1,w
  4700  03AF  00C5               	movwf	??___ftadd+1
  4701  03B0  0840               	movf	___ftadd@f1+2,w
  4702  03B1  00C6               	movwf	??___ftadd+2
  4703  03B2  1003               	clrc
  4704  03B3  0D45               	rlf	??___ftadd+1,w
  4705  03B4  0D46               	rlf	??___ftadd+2,w
  4706  03B5  00C7               	movwf	??___ftadd+3
  4707  03B6  0847               	movf	??___ftadd+3,w
  4708  03B7  00CA               	movwf	___ftadd@exp1
  4709  03B8  0841               	movf	___ftadd@f2,w
  4710  03B9  00C4               	movwf	??___ftadd
  4711  03BA  0842               	movf	___ftadd@f2+1,w
  4712  03BB  00C5               	movwf	??___ftadd+1
  4713  03BC  0843               	movf	___ftadd@f2+2,w
  4714  03BD  00C6               	movwf	??___ftadd+2
  4715  03BE  1003               	clrc
  4716  03BF  0D45               	rlf	??___ftadd+1,w
  4717  03C0  0D46               	rlf	??___ftadd+2,w
  4718  03C1  00C7               	movwf	??___ftadd+3
  4719  03C2  0847               	movf	??___ftadd+3,w
  4720  03C3  00C9               	movwf	___ftadd@exp2
  4721  03C4  084A               	movf	___ftadd@exp1,w
  4722  03C5  1903               	btfsc	3,2
  4723  03C6  2BD3               	goto	l2766
  4724  03C7  0849               	movf	___ftadd@exp2,w
  4725  03C8  024A               	subwf	___ftadd@exp1,w
  4726  03C9  1803               	skipnc
  4727  03CA  2BDA               	goto	l2770
  4728  03CB  034A               	decf	___ftadd@exp1,w
  4729  03CC  3AFF               	xorlw	255
  4730  03CD  0749               	addwf	___ftadd@exp2,w
  4731  03CE  00C4               	movwf	??___ftadd
  4732  03CF  3019               	movlw	25
  4733  03D0  0244               	subwf	??___ftadd,w
  4734  03D1  1C03               	skipc
  4735  03D2  2BDA               	goto	l2770
  4736  03D3                     l2766:	
  4737  03D3  0841               	movf	___ftadd@f2,w
  4738  03D4  00BE               	movwf	?___ftadd
  4739  03D5  0842               	movf	___ftadd@f2+1,w
  4740  03D6  00BF               	movwf	?___ftadd+1
  4741  03D7  0843               	movf	___ftadd@f2+2,w
  4742  03D8  00C0               	movwf	?___ftadd+2
  4743  03D9  0008               	return
  4744  03DA                     l2770:	
  4745  03DA  0849               	movf	___ftadd@exp2,w
  4746  03DB  1903               	btfsc	3,2
  4747  03DC  0008               	return
  4748  03DD  084A               	movf	___ftadd@exp1,w
  4749  03DE  0249               	subwf	___ftadd@exp2,w
  4750  03DF  1803               	skipnc
  4751  03E0  2BE9               	goto	l2776
  4752  03E1  0349               	decf	___ftadd@exp2,w
  4753  03E2  3AFF               	xorlw	255
  4754  03E3  074A               	addwf	___ftadd@exp1,w
  4755  03E4  00C4               	movwf	??___ftadd
  4756  03E5  3019               	movlw	25
  4757  03E6  0244               	subwf	??___ftadd,w
  4758  03E7  1803               	btfsc	3,0
  4759  03E8  0008               	return
  4760  03E9                     l2776:	
  4761  03E9  3006               	movlw	6
  4762  03EA  00C4               	movwf	??___ftadd
  4763  03EB  0844               	movf	??___ftadd,w
  4764  03EC  00C8               	movwf	___ftadd@sign
  4765  03ED  1BC0               	btfsc	___ftadd@f1+2,7
  4766  03EE  17C8               	bsf	___ftadd@sign,7
  4767  03EF  1BC3               	btfsc	___ftadd@f2+2,7
  4768  03F0  1748               	bsf	___ftadd@sign,6
  4769  03F1  17BF               	bsf	___ftadd@f1+1,7
  4770  03F2  30FF               	movlw	255
  4771  03F3  05BE               	andwf	___ftadd@f1,f
  4772  03F4  30FF               	movlw	255
  4773  03F5  05BF               	andwf	___ftadd@f1+1,f
  4774  03F6  3000               	movlw	0
  4775  03F7  05C0               	andwf	___ftadd@f1+2,f
  4776  03F8  17C2               	bsf	___ftadd@f2+1,7
  4777  03F9  30FF               	movlw	255
  4778  03FA  05C1               	andwf	___ftadd@f2,f
  4779  03FB  30FF               	movlw	255
  4780  03FC  05C2               	andwf	___ftadd@f2+1,f
  4781  03FD  3000               	movlw	0
  4782  03FE  05C3               	andwf	___ftadd@f2+2,f
  4783  03FF  0849               	movf	___ftadd@exp2,w
  4784  0400  024A               	subwf	___ftadd@exp1,w
  4785  0401  1803               	skipnc
  4786  0402  2C29               	goto	l2798
  4787  0403                     l2788:	
  4788  0403  3001               	movlw	1
  4789  0404                     u3185:	
  4790  0404  1003               	clrc
  4791  0405  0DC1               	rlf	___ftadd@f2,f
  4792  0406  0DC2               	rlf	___ftadd@f2+1,f
  4793  0407  0DC3               	rlf	___ftadd@f2+2,f
  4794  0408  3EFF               	addlw	-1
  4795  0409  1D03               	skipz
  4796  040A  2C04               	goto	u3185
  4797  040B  3001               	movlw	1
  4798  040C  02C9               	subwf	___ftadd@exp2,f
  4799  040D  0849               	movf	___ftadd@exp2,w
  4800  040E  064A               	xorwf	___ftadd@exp1,w
  4801  040F  1903               	skipnz
  4802  0410  2C24               	goto	l2796
  4803  0411  3001               	movlw	1
  4804  0412  02C8               	subwf	___ftadd@sign,f
  4805  0413  0848               	movf	___ftadd@sign,w
  4806  0414  3907               	andlw	7
  4807  0415  1903               	btfsc	3,2
  4808  0416  2C24               	goto	l2796
  4809  0417  2C03               	goto	l2788
  4810  0418                     l2794:	
  4811  0418  3001               	movlw	1
  4812  0419                     u3215:	
  4813  0419  1003               	clrc
  4814  041A  0CC0               	rrf	___ftadd@f1+2,f
  4815  041B  0CBF               	rrf	___ftadd@f1+1,f
  4816  041C  0CBE               	rrf	___ftadd@f1,f
  4817  041D  3EFF               	addlw	-1
  4818  041E  1D03               	skipz
  4819  041F  2C19               	goto	u3215
  4820  0420  3001               	movlw	1
  4821  0421  00C4               	movwf	??___ftadd
  4822  0422  0844               	movf	??___ftadd,w
  4823  0423  07CA               	addwf	___ftadd@exp1,f
  4824  0424                     l2796:	
  4825  0424  084A               	movf	___ftadd@exp1,w
  4826  0425  0649               	xorwf	___ftadd@exp2,w
  4827  0426  1903               	btfsc	3,2
  4828  0427  2C52               	goto	l527
  4829  0428  2C18               	goto	l2794
  4830  0429                     l2798:	
  4831  0429  084A               	movf	___ftadd@exp1,w
  4832  042A  0249               	subwf	___ftadd@exp2,w
  4833  042B  1803               	skipnc
  4834  042C  2C52               	goto	l527
  4835  042D                     l2800:	
  4836  042D  3001               	movlw	1
  4837  042E                     u3245:	
  4838  042E  1003               	clrc
  4839  042F  0DBE               	rlf	___ftadd@f1,f
  4840  0430  0DBF               	rlf	___ftadd@f1+1,f
  4841  0431  0DC0               	rlf	___ftadd@f1+2,f
  4842  0432  3EFF               	addlw	-1
  4843  0433  1D03               	skipz
  4844  0434  2C2E               	goto	u3245
  4845  0435  3001               	movlw	1
  4846  0436  02CA               	subwf	___ftadd@exp1,f
  4847  0437  0849               	movf	___ftadd@exp2,w
  4848  0438  064A               	xorwf	___ftadd@exp1,w
  4849  0439  1903               	skipnz
  4850  043A  2C4E               	goto	l2808
  4851  043B  3001               	movlw	1
  4852  043C  02C8               	subwf	___ftadd@sign,f
  4853  043D  0848               	movf	___ftadd@sign,w
  4854  043E  3907               	andlw	7
  4855  043F  1903               	btfsc	3,2
  4856  0440  2C4E               	goto	l2808
  4857  0441  2C2D               	goto	l2800
  4858  0442                     l2806:	
  4859  0442  3001               	movlw	1
  4860  0443                     u3275:	
  4861  0443  1003               	clrc
  4862  0444  0CC3               	rrf	___ftadd@f2+2,f
  4863  0445  0CC2               	rrf	___ftadd@f2+1,f
  4864  0446  0CC1               	rrf	___ftadd@f2,f
  4865  0447  3EFF               	addlw	-1
  4866  0448  1D03               	skipz
  4867  0449  2C43               	goto	u3275
  4868  044A  3001               	movlw	1
  4869  044B  00C4               	movwf	??___ftadd
  4870  044C  0844               	movf	??___ftadd,w
  4871  044D  07C9               	addwf	___ftadd@exp2,f
  4872  044E                     l2808:	
  4873  044E  084A               	movf	___ftadd@exp1,w
  4874  044F  0649               	xorwf	___ftadd@exp2,w
  4875  0450  1D03               	skipz
  4876  0451  2C42               	goto	l2806
  4877  0452                     l527:	
  4878  0452  1FC8               	btfss	___ftadd@sign,7
  4879  0453  2C64               	goto	l2812
  4880  0454  30FF               	movlw	255
  4881  0455  06BE               	xorwf	___ftadd@f1,f
  4882  0456  30FF               	movlw	255
  4883  0457  06BF               	xorwf	___ftadd@f1+1,f
  4884  0458  30FF               	movlw	255
  4885  0459  06C0               	xorwf	___ftadd@f1+2,f
  4886  045A  3001               	movlw	1
  4887  045B  07BE               	addwf	___ftadd@f1,f
  4888  045C  3000               	movlw	0
  4889  045D  1803               	skipnc
  4890  045E  3001               	movlw	1
  4891  045F  07BF               	addwf	___ftadd@f1+1,f
  4892  0460  3000               	movlw	0
  4893  0461  1803               	skipnc
  4894  0462  3001               	movlw	1
  4895  0463  07C0               	addwf	___ftadd@f1+2,f
  4896  0464                     l2812:	
  4897  0464  1F48               	btfss	___ftadd@sign,6
  4898  0465  2C76               	goto	l2816
  4899  0466  30FF               	movlw	255
  4900  0467  06C1               	xorwf	___ftadd@f2,f
  4901  0468  30FF               	movlw	255
  4902  0469  06C2               	xorwf	___ftadd@f2+1,f
  4903  046A  30FF               	movlw	255
  4904  046B  06C3               	xorwf	___ftadd@f2+2,f
  4905  046C  3001               	movlw	1
  4906  046D  07C1               	addwf	___ftadd@f2,f
  4907  046E  3000               	movlw	0
  4908  046F  1803               	skipnc
  4909  0470  3001               	movlw	1
  4910  0471  07C2               	addwf	___ftadd@f2+1,f
  4911  0472  3000               	movlw	0
  4912  0473  1803               	skipnc
  4913  0474  3001               	movlw	1
  4914  0475  07C3               	addwf	___ftadd@f2+2,f
  4915  0476                     l2816:	
  4916  0476  01C8               	clrf	___ftadd@sign
  4917  0477  083E               	movf	___ftadd@f1,w
  4918  0478  07C1               	addwf	___ftadd@f2,f
  4919  0479  083F               	movf	___ftadd@f1+1,w
  4920  047A  1103               	clrz
  4921  047B  1803               	skipnc
  4922  047C  0A3F               	incf	___ftadd@f1+1,w
  4923  047D  1D03               	btfss	3,2
  4924  047E  07C2               	addwf	___ftadd@f2+1,f
  4925  047F  0840               	movf	___ftadd@f1+2,w
  4926  0480  1103               	clrz
  4927  0481  1803               	skipnc
  4928  0482  0A40               	incf	___ftadd@f1+2,w
  4929  0483  1D03               	btfss	3,2
  4930  0484  07C3               	addwf	___ftadd@f2+2,f
  4931  0485  1FC3               	btfss	___ftadd@f2+2,7
  4932  0486  2C99               	goto	l2826
  4933  0487  30FF               	movlw	255
  4934  0488  06C1               	xorwf	___ftadd@f2,f
  4935  0489  30FF               	movlw	255
  4936  048A  06C2               	xorwf	___ftadd@f2+1,f
  4937  048B  30FF               	movlw	255
  4938  048C  06C3               	xorwf	___ftadd@f2+2,f
  4939  048D  3001               	movlw	1
  4940  048E  07C1               	addwf	___ftadd@f2,f
  4941  048F  3000               	movlw	0
  4942  0490  1803               	skipnc
  4943  0491  3001               	movlw	1
  4944  0492  07C2               	addwf	___ftadd@f2+1,f
  4945  0493  3000               	movlw	0
  4946  0494  1803               	skipnc
  4947  0495  3001               	movlw	1
  4948  0496  07C3               	addwf	___ftadd@f2+2,f
  4949  0497  01C8               	clrf	___ftadd@sign
  4950  0498  0AC8               	incf	___ftadd@sign,f
  4951  0499                     l2826:	
  4952  0499  0841               	movf	___ftadd@f2,w
  4953  049A  00A0               	movwf	___ftpack@arg
  4954  049B  0842               	movf	___ftadd@f2+1,w
  4955  049C  00A1               	movwf	___ftpack@arg+1
  4956  049D  0843               	movf	___ftadd@f2+2,w
  4957  049E  00A2               	movwf	___ftpack@arg+2
  4958  049F  084A               	movf	___ftadd@exp1,w
  4959  04A0  00C4               	movwf	??___ftadd
  4960  04A1  0844               	movf	??___ftadd,w
  4961  04A2  00A3               	movwf	___ftpack@exp
  4962  04A3  0848               	movf	___ftadd@sign,w
  4963  04A4  00C5               	movwf	??___ftadd+1
  4964  04A5  0845               	movf	??___ftadd+1,w
  4965  04A6  00A4               	movwf	___ftpack@sign
  4966  04A7  120A  158A  2708   	fcall	___ftpack
  4967  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  4968  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  4969  04AC  0820               	movf	?___ftpack,w
  4970  04AD  00BE               	movwf	?___ftadd
  4971  04AE  0821               	movf	?___ftpack+1,w
  4972  04AF  00BF               	movwf	?___ftadd+1
  4973  04B0  0822               	movf	?___ftpack+2,w
  4974  04B1  00C0               	movwf	?___ftadd+2
  4975  04B2  0008               	return
  4976  04B3                     __end_of___ftadd:	
  4977                           
  4978                           	psect	text23
  4979  0F08                     __ptext23:	
  4980 ;; *************** function ___ftpack *****************
  4981 ;; Defined at:
  4982 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  4983 ;; Parameters:    Size  Location     Type
  4984 ;;  arg             3    0[BANK0 ] unsigned um
  4985 ;;  exp             1    3[BANK0 ] unsigned char 
  4986 ;;  sign            1    4[BANK0 ] unsigned char 
  4987 ;; Auto vars:     Size  Location     Type
  4988 ;;		None
  4989 ;; Return value:  Size  Location     Type
  4990 ;;                  3    0[BANK0 ] float 
  4991 ;; Registers used:
  4992 ;;		wreg, status,2, status,0
  4993 ;; Tracked objects:
  4994 ;;		On entry : 0/0
  4995 ;;		On exit  : 0/0
  4996 ;;		Unchanged: 0/0
  4997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4998 ;;      Params:         0       5       0       0       0
  4999 ;;      Locals:         0       0       0       0       0
  5000 ;;      Temps:          0       3       0       0       0
  5001 ;;      Totals:         0       8       0       0       0
  5002 ;;Total ram usage:        8 bytes
  5003 ;; Hardware stack levels used:    1
  5004 ;; Hardware stack levels required when called:    1
  5005 ;; This function calls:
  5006 ;;		Nothing
  5007 ;; This function is called by:
  5008 ;;		___ftadd
  5009 ;;		___ftdiv
  5010 ;;		___ftmul
  5011 ;;		___lwtoft
  5012 ;; This function uses a non-reentrant model
  5013 ;;
  5014                           
  5015                           
  5016                           ;psect for function ___ftpack
  5017  0F08                     ___ftpack:	
  5018                           
  5019                           ;incstack = 0
  5020                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  5021  0F08  1283               	bcf	3,5	;RP0=0, select bank0
  5022  0F09  1303               	bcf	3,6	;RP1=0, select bank0
  5023  0F0A  0823               	movf	___ftpack@exp,w
  5024  0F0B  1903               	btfsc	3,2
  5025  0F0C  2F12               	goto	l2524
  5026  0F0D  0822               	movf	___ftpack@arg+2,w
  5027  0F0E  0421               	iorwf	___ftpack@arg+1,w
  5028  0F0F  0420               	iorwf	___ftpack@arg,w
  5029  0F10  1D03               	skipz
  5030  0F11  2F25               	goto	l2530
  5031  0F12                     l2524:	
  5032  0F12  3000               	movlw	0
  5033  0F13  00A0               	movwf	?___ftpack
  5034  0F14  3000               	movlw	0
  5035  0F15  00A1               	movwf	?___ftpack+1
  5036  0F16  3000               	movlw	0
  5037  0F17  00A2               	movwf	?___ftpack+2
  5038  0F18  0008               	return
  5039  0F19                     l2528:	
  5040  0F19  3001               	movlw	1
  5041  0F1A  00A5               	movwf	??___ftpack
  5042  0F1B  0825               	movf	??___ftpack,w
  5043  0F1C  07A3               	addwf	___ftpack@exp,f
  5044  0F1D  3001               	movlw	1
  5045  0F1E                     u2675:	
  5046  0F1E  1003               	clrc
  5047  0F1F  0CA2               	rrf	___ftpack@arg+2,f
  5048  0F20  0CA1               	rrf	___ftpack@arg+1,f
  5049  0F21  0CA0               	rrf	___ftpack@arg,f
  5050  0F22  3EFF               	addlw	-1
  5051  0F23  1D03               	skipz
  5052  0F24  2F1E               	goto	u2675
  5053  0F25                     l2530:	
  5054  0F25  30FE               	movlw	254
  5055  0F26  0522               	andwf	___ftpack@arg+2,w
  5056  0F27  1903               	btfsc	3,2
  5057  0F28  2F40               	goto	l498
  5058  0F29  2F19               	goto	l2528
  5059  0F2A                     l2532:	
  5060  0F2A  3001               	movlw	1
  5061  0F2B  00A5               	movwf	??___ftpack
  5062  0F2C  0825               	movf	??___ftpack,w
  5063  0F2D  07A3               	addwf	___ftpack@exp,f
  5064  0F2E  3001               	movlw	1
  5065  0F2F  07A0               	addwf	___ftpack@arg,f
  5066  0F30  3000               	movlw	0
  5067  0F31  1803               	skipnc
  5068  0F32  3001               	movlw	1
  5069  0F33  07A1               	addwf	___ftpack@arg+1,f
  5070  0F34  3000               	movlw	0
  5071  0F35  1803               	skipnc
  5072  0F36  3001               	movlw	1
  5073  0F37  07A2               	addwf	___ftpack@arg+2,f
  5074  0F38  3001               	movlw	1
  5075  0F39                     u2695:	
  5076  0F39  1003               	clrc
  5077  0F3A  0CA2               	rrf	___ftpack@arg+2,f
  5078  0F3B  0CA1               	rrf	___ftpack@arg+1,f
  5079  0F3C  0CA0               	rrf	___ftpack@arg,f
  5080  0F3D  3EFF               	addlw	-1
  5081  0F3E  1D03               	skipz
  5082  0F3F  2F39               	goto	u2695
  5083  0F40                     l498:	
  5084  0F40  30FF               	movlw	255
  5085  0F41  0522               	andwf	___ftpack@arg+2,w
  5086  0F42  1903               	btfsc	3,2
  5087  0F43  2F4F               	goto	l2540
  5088  0F44  2F2A               	goto	l2532
  5089  0F45                     l2538:	
  5090  0F45  3001               	movlw	1
  5091  0F46  02A3               	subwf	___ftpack@exp,f
  5092  0F47  3001               	movlw	1
  5093  0F48                     u2715:	
  5094  0F48  1003               	clrc
  5095  0F49  0DA0               	rlf	___ftpack@arg,f
  5096  0F4A  0DA1               	rlf	___ftpack@arg+1,f
  5097  0F4B  0DA2               	rlf	___ftpack@arg+2,f
  5098  0F4C  3EFF               	addlw	-1
  5099  0F4D  1D03               	skipz
  5100  0F4E  2F48               	goto	u2715
  5101  0F4F                     l2540:	
  5102  0F4F  1FA1               	btfss	___ftpack@arg+1,7
  5103  0F50  2F45               	goto	l2538
  5104  0F51  1823               	btfsc	___ftpack@exp,0
  5105  0F52  2F59               	goto	l504
  5106  0F53  30FF               	movlw	255
  5107  0F54  05A0               	andwf	___ftpack@arg,f
  5108  0F55  307F               	movlw	127
  5109  0F56  05A1               	andwf	___ftpack@arg+1,f
  5110  0F57  30FF               	movlw	255
  5111  0F58  05A2               	andwf	___ftpack@arg+2,f
  5112  0F59                     l504:	
  5113  0F59  1003               	clrc
  5114  0F5A  0CA3               	rrf	___ftpack@exp,f
  5115  0F5B  0823               	movf	___ftpack@exp,w
  5116  0F5C  00A5               	movwf	??___ftpack
  5117  0F5D  01A6               	clrf	??___ftpack+1
  5118  0F5E  01A7               	clrf	??___ftpack+2
  5119  0F5F  3010               	movlw	16
  5120  0F60                     u2745:	
  5121  0F60  1003               	clrc
  5122  0F61  0DA5               	rlf	??___ftpack,f
  5123  0F62  0DA6               	rlf	??___ftpack+1,f
  5124  0F63  0DA7               	rlf	??___ftpack+2,f
  5125  0F64  3EFF               	addlw	-1
  5126  0F65  1D03               	skipz
  5127  0F66  2F60               	goto	u2745
  5128  0F67  0825               	movf	??___ftpack,w
  5129  0F68  04A0               	iorwf	___ftpack@arg,f
  5130  0F69  0826               	movf	??___ftpack+1,w
  5131  0F6A  04A1               	iorwf	___ftpack@arg+1,f
  5132  0F6B  0827               	movf	??___ftpack+2,w
  5133  0F6C  04A2               	iorwf	___ftpack@arg+2,f
  5134  0F6D  0824               	movf	___ftpack@sign,w
  5135  0F6E  1903               	btfsc	3,2
  5136  0F6F  0008               	return
  5137  0F70  17A2               	bsf	___ftpack@arg+2,7
  5138  0F71  0008               	return
  5139  0F72                     __end_of___ftpack:	
  5140                           
  5141                           	psect	text24
  5142  0DA0                     __ptext24:	
  5143 ;; *************** function ___awmod *****************
  5144 ;; Defined at:
  5145 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  5146 ;; Parameters:    Size  Location     Type
  5147 ;;  divisor         2    0[BANK0 ] int 
  5148 ;;  dividend        2    2[BANK0 ] int 
  5149 ;; Auto vars:     Size  Location     Type
  5150 ;;  sign            1    5[BANK0 ] unsigned char 
  5151 ;;  counter         1    4[BANK0 ] unsigned char 
  5152 ;; Return value:  Size  Location     Type
  5153 ;;                  2    0[BANK0 ] int 
  5154 ;; Registers used:
  5155 ;;		wreg, status,2, status,0
  5156 ;; Tracked objects:
  5157 ;;		On entry : 0/0
  5158 ;;		On exit  : 0/0
  5159 ;;		Unchanged: 0/0
  5160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5161 ;;      Params:         0       4       0       0       0
  5162 ;;      Locals:         0       2       0       0       0
  5163 ;;      Temps:          1       0       0       0       0
  5164 ;;      Totals:         1       6       0       0       0
  5165 ;;Total ram usage:        7 bytes
  5166 ;; Hardware stack levels used:    1
  5167 ;; Hardware stack levels required when called:    1
  5168 ;; This function calls:
  5169 ;;		Nothing
  5170 ;; This function is called by:
  5171 ;;		_checkWaterLevel
  5172 ;; This function uses a non-reentrant model
  5173 ;;
  5174                           
  5175                           
  5176                           ;psect for function ___awmod
  5177  0DA0                     ___awmod:	
  5178                           
  5179                           ;incstack = 0
  5180                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5181  0DA0  1283               	bcf	3,5	;RP0=0, select bank0
  5182  0DA1  1303               	bcf	3,6	;RP1=0, select bank0
  5183  0DA2  01A5               	clrf	___awmod@sign
  5184  0DA3  1FA3               	btfss	___awmod@dividend+1,7
  5185  0DA4  2DAC               	goto	l2728
  5186  0DA5  09A2               	comf	___awmod@dividend,f
  5187  0DA6  09A3               	comf	___awmod@dividend+1,f
  5188  0DA7  0AA2               	incf	___awmod@dividend,f
  5189  0DA8  1903               	skipnz
  5190  0DA9  0AA3               	incf	___awmod@dividend+1,f
  5191  0DAA  01A5               	clrf	___awmod@sign
  5192  0DAB  0AA5               	incf	___awmod@sign,f
  5193  0DAC                     l2728:	
  5194  0DAC  1FA1               	btfss	___awmod@divisor+1,7
  5195  0DAD  2DB3               	goto	l2732
  5196  0DAE  09A0               	comf	___awmod@divisor,f
  5197  0DAF  09A1               	comf	___awmod@divisor+1,f
  5198  0DB0  0AA0               	incf	___awmod@divisor,f
  5199  0DB1  1903               	skipnz
  5200  0DB2  0AA1               	incf	___awmod@divisor+1,f
  5201  0DB3                     l2732:	
  5202  0DB3  0821               	movf	___awmod@divisor+1,w
  5203  0DB4  0420               	iorwf	___awmod@divisor,w
  5204  0DB5  1903               	skipnz
  5205  0DB6  2DE0               	goto	l2750
  5206  0DB7  01A4               	clrf	___awmod@counter
  5207  0DB8  0AA4               	incf	___awmod@counter,f
  5208  0DB9                     l2740:	
  5209  0DB9  1BA1               	btfsc	___awmod@divisor+1,7
  5210  0DBA  2DC7               	goto	l2742
  5211  0DBB  3001               	movlw	1
  5212  0DBC                     u3035:	
  5213  0DBC  1003               	clrc
  5214  0DBD  0DA0               	rlf	___awmod@divisor,f
  5215  0DBE  0DA1               	rlf	___awmod@divisor+1,f
  5216  0DBF  3EFF               	addlw	-1
  5217  0DC0  1D03               	skipz
  5218  0DC1  2DBC               	goto	u3035
  5219  0DC2  3001               	movlw	1
  5220  0DC3  00F4               	movwf	??___awmod
  5221  0DC4  0874               	movf	??___awmod,w
  5222  0DC5  07A4               	addwf	___awmod@counter,f
  5223  0DC6  2DB9               	goto	l2740
  5224  0DC7                     l2742:	
  5225  0DC7  0821               	movf	___awmod@divisor+1,w
  5226  0DC8  0223               	subwf	___awmod@dividend+1,w
  5227  0DC9  1D03               	skipz
  5228  0DCA  2DCD               	goto	u3055
  5229  0DCB  0820               	movf	___awmod@divisor,w
  5230  0DCC  0222               	subwf	___awmod@dividend,w
  5231  0DCD                     u3055:	
  5232  0DCD  1C03               	skipc
  5233  0DCE  2DD5               	goto	l2746
  5234  0DCF  0820               	movf	___awmod@divisor,w
  5235  0DD0  02A2               	subwf	___awmod@dividend,f
  5236  0DD1  0821               	movf	___awmod@divisor+1,w
  5237  0DD2  1C03               	skipc
  5238  0DD3  03A3               	decf	___awmod@dividend+1,f
  5239  0DD4  02A3               	subwf	___awmod@dividend+1,f
  5240  0DD5                     l2746:	
  5241  0DD5  3001               	movlw	1
  5242  0DD6                     u3065:	
  5243  0DD6  1003               	clrc
  5244  0DD7  0CA1               	rrf	___awmod@divisor+1,f
  5245  0DD8  0CA0               	rrf	___awmod@divisor,f
  5246  0DD9  3EFF               	addlw	-1
  5247  0DDA  1D03               	skipz
  5248  0DDB  2DD6               	goto	u3065
  5249  0DDC  3001               	movlw	1
  5250  0DDD  02A4               	subwf	___awmod@counter,f
  5251  0DDE  1D03               	btfss	3,2
  5252  0DDF  2DC7               	goto	l2742
  5253  0DE0                     l2750:	
  5254  0DE0  0825               	movf	___awmod@sign,w
  5255  0DE1  1903               	btfsc	3,2
  5256  0DE2  2DE8               	goto	l2754
  5257  0DE3  09A2               	comf	___awmod@dividend,f
  5258  0DE4  09A3               	comf	___awmod@dividend+1,f
  5259  0DE5  0AA2               	incf	___awmod@dividend,f
  5260  0DE6  1903               	skipnz
  5261  0DE7  0AA3               	incf	___awmod@dividend+1,f
  5262  0DE8                     l2754:	
  5263  0DE8  0823               	movf	___awmod@dividend+1,w
  5264  0DE9  01A1               	clrf	?___awmod+1
  5265  0DEA  07A1               	addwf	?___awmod+1,f
  5266  0DEB  0822               	movf	___awmod@dividend,w
  5267  0DEC  01A0               	clrf	?___awmod
  5268  0DED  07A0               	addwf	?___awmod,f
  5269  0DEE  0008               	return
  5270  0DEF                     __end_of___awmod:	
  5271                           
  5272                           	psect	text25
  5273  0BAC                     __ptext25:	
  5274 ;; *************** function _ISR *****************
  5275 ;; Defined at:
  5276 ;;		line 102 in file "C:\Users\notjo\OneDrive\Desktop\USC\USC-Year3-Sem2\3201-EmbeddedSystems\Automated_Water_Distributi
      +on\build\Alin_Ceballos_Francis_Gere_Ratificar_DP.c"
  5277 ;; Parameters:    Size  Location     Type
  5278 ;;		None
  5279 ;; Auto vars:     Size  Location     Type
  5280 ;;		None
  5281 ;; Return value:  Size  Location     Type
  5282 ;;		None               void
  5283 ;; Registers used:
  5284 ;;		wreg
  5285 ;; Tracked objects:
  5286 ;;		On entry : 0/0
  5287 ;;		On exit  : 0/0
  5288 ;;		Unchanged: 0/0
  5289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5290 ;;      Params:         0       0       0       0       0
  5291 ;;      Locals:         0       0       0       0       0
  5292 ;;      Temps:          4       0       0       0       0
  5293 ;;      Totals:         4       0       0       0       0
  5294 ;;Total ram usage:        4 bytes
  5295 ;; Hardware stack levels used:    1
  5296 ;; This function calls:
  5297 ;;		Nothing
  5298 ;; This function is called by:
  5299 ;;		Interrupt level 1
  5300 ;; This function uses a non-reentrant model
  5301 ;;
  5302                           
  5303                           
  5304                           ;psect for function _ISR
  5305  0BAC                     _ISR:	
  5306                           
  5307                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 104: GIE = 0;
  5308  0BAC  138B               	bcf	11,7	;volatile
  5309                           
  5310                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 105: if(TMR0IF)
  5311  0BAD  1D0B               	btfss	11,2	;volatile
  5312  0BAE  2BB6               	goto	i1l2356
  5313                           
  5314                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 106: {
  5315                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 107: TMR0IF = 0;
  5316  0BAF  110B               	bcf	11,2	;volatile
  5317                           
  5318                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 108: countflag = 1;
  5319  0BB0  3001               	movlw	1
  5320  0BB1  1683               	bsf	3,5	;RP0=1, select bank1
  5321  0BB2  1303               	bcf	3,6	;RP1=0, select bank1
  5322  0BB3  00B4               	movwf	_countflag^(0+128)
  5323  0BB4  3000               	movlw	0
  5324  0BB5  00B5               	movwf	(_countflag^(0+128)+1)
  5325  0BB6                     i1l2356:	
  5326                           
  5327                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 109: }
  5328                           ;Alin_Ceballos_Francis_Gere_Ratificar_DP.c: 110: GIE = 1;
  5329  0BB6  178B               	bsf	11,7	;volatile
  5330  0BB7  0873               	movf	??_ISR+3,w
  5331  0BB8  1283               	bcf	3,5	;RP0=0, select bank0
  5332  0BB9  00FF               	movwf	127
  5333  0BBA  0872               	movf	??_ISR+2,w
  5334  0BBB  008A               	movwf	10
  5335  0BBC  0871               	movf	??_ISR+1,w
  5336  0BBD  0084               	movwf	4
  5337  0BBE  0E70               	swapf	??_ISR^(0+-128),w
  5338  0BBF  0083               	movwf	3
  5339  0BC0  0EFE               	swapf	126,f
  5340  0BC1  0E7E               	swapf	126,w
  5341  0BC2  0009               	retfie
  5342  0BC3                     __end_of_ISR:	
  5343  007E                     btemp	set	126	;btemp
  5344  007E                     wtemp	set	126
  5345  007E                     wtemp0	set	126
  5346  0080                     wtemp1	set	128
  5347  0082                     wtemp2	set	130
  5348  0084                     wtemp3	set	132
  5349  0086                     wtemp4	set	134
  5350  0088                     wtemp5	set	136
  5351  007F                     wtemp6	set	127
  5352  007E                     ttemp	set	126
  5353  007E                     ttemp0	set	126
  5354  0081                     ttemp1	set	129
  5355  0084                     ttemp2	set	132
  5356  0087                     ttemp3	set	135
  5357  007F                     ttemp4	set	127
  5358  007E                     ltemp	set	126
  5359  007E                     ltemp0	set	126
  5360  0082                     ltemp1	set	130
  5361  0086                     ltemp2	set	134
  5362  0080                     ltemp3	set	128
  5363                           
  5364                           	psect	intentry
  5365  0004                     __pintentry:	
  5366                           ;incstack = 0
  5367                           ; Regs used in _ISR: [wreg]
  5368                           
  5369  0004                     interrupt_function:	
  5370  007E                     saved_w	set	btemp
  5371  0004  00FE               	movwf	btemp
  5372  0005  0E03               	swapf	3,w
  5373  0006  00F0               	movwf	??_ISR
  5374  0007  0804               	movf	4,w
  5375  0008  00F1               	movwf	??_ISR+1
  5376  0009  080A               	movf	10,w
  5377  000A  00F2               	movwf	??_ISR+2
  5378  000B  1283               	bcf	3,5	;RP0=0, select bank0
  5379  000C  1303               	bcf	3,6	;RP1=0, select bank0
  5380  000D  087F               	movf	btemp+1,w
  5381  000E  00F3               	movwf	??_ISR+3
  5382  000F  120A  158A  2BAC   	ljmp	_ISR


Data Sizes:
    Strings     122
    Constant    10
    Data        0
    BSS         41
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     58      67
    BANK1            80     18      46
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_18(CODE[5]), STR_6(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> checkWaterLevel@percentage(BANK1[10]), updateDisplay@seconds_str(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S191$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    printString@string	PTR unsigned char  size(2) Largest target is 21
		 -> STR_20(CODE[14]), STR_19(CODE[14]), checkWaterLevel@percentage(BANK1[10]), STR_17(CODE[5]), 
		 -> STR_16(CODE[13]), STR_15(CODE[13]), STR_14(CODE[14]), STR_13(CODE[13]), 
		 -> STR_12(CODE[13]), STR_11(CODE[19]), STR_10(CODE[13]), STR_9(CODE[13]), 
		 -> STR_8(CODE[13]), STR_7(CODE[13]), updateDisplay@seconds_str(BANK0[10]), STR_5(CODE[8]), 
		 -> STR_4(CODE[21]), STR_3(CODE[21]), STR_2(CODE[15]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _main->_printString
    _updateDisplay->_printString
    _updateDisplay->_timerDelay
    _enableWater->_rotateLeft
    _initSYS->_printString
    _disableWater->_rotateRight
    _checkWaterLevel->_printString
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___fttol->___lwtoft
    ___ftmul->___lwtoft
    ___ftadd->___lwtoft

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_checkWaterLevel
    _updateDisplay->_sprintf
    _enableWater->_rotateLeft
    _initSYS->_disableWater
    _disableWater->_rotateRight
    _initLCD->_instCtrl
    _checkWaterLevel->___fttol
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _printString->_dataCtrl
    ___lwtoft->___ftpack
    ___fttol->___ftadd
    ___ftneg->___ftmul
    ___ftmul->___lwtoft
    ___ftdiv->___ftpack
    ___ftadd->___ftneg

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_checkWaterLevel

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   24652
                    _checkWaterLevel
                            _initLCD
                            _initSYS
                           _instCtrl
                        _printString
                      _updateDisplay
 ---------------------------------------------------------------------------------
 (1) _updateDisplay                                       11    11      0    4403
                                             27 BANK0     11    11      0
                       _disableWater
                        _enableWater
                           _instCtrl
                        _printString
                            _sprintf
                         _timerDelay
 ---------------------------------------------------------------------------------
 (2) _timerDelay                                           2     2      0      24
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _enableWater                                          2     0      2     452
                                              3 BANK0      2     0      2
                         _rotateLeft
 ---------------------------------------------------------------------------------
 (3) _rotateLeft                                           5     3      2     161
                                              4 COMMON     2     0      2
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _initSYS                                              0     0      0    2145
                       _disableWater
                           _instCtrl
                        _printString
 ---------------------------------------------------------------------------------
 (2) _disableWater                                         2     0      2     582
                                              3 BANK0      2     0      2
                        _rotateRight
 ---------------------------------------------------------------------------------
 (3) _rotateRight                                          5     3      2     161
                                              4 COMMON     2     0      2
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              0     0      0      99
                           _instCtrl
 ---------------------------------------------------------------------------------
 (1) _checkWaterLevel                                     19    19      0   16442
                                             57 BANK0      1     1      0
                                              0 BANK1     18    18      0
                            ___awmod
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
                           _instCtrl
                        _printString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             15    12      3    1684
                                             12 BANK0     15    12      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     362
                                              5 COMMON     1     1      0
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     371
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _printString                                          2     0      2    1464
                                              4 COMMON     2     0      2
                           _dataCtrl
 ---------------------------------------------------------------------------------
 (3) _dataCtrl                                             3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _instCtrl                                             3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             4     1      3    2198
                                              4 COMMON     1     1      0
                                              8 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     501
                                             43 BANK0     14    10      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     130
                                             27 BANK0      3     0      3
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2785
                                             11 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                              12     6      6     458
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2587
                                              8 BANK0     16    10      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    3612
                                             30 BANK0     13     7      6
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2037
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     563
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkWaterLevel
     ___awmod
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftdiv
       ___ftpack
     ___ftge
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
     ___fttol
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
     _instCtrl
     _printString
       _dataCtrl
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _initLCD
     _instCtrl
   _initSYS
     _disableWater
       _rotateRight
     _instCtrl
     _printString
       _dataCtrl
   _instCtrl
   _printString
     _dataCtrl
   _updateDisplay
     _disableWater
       _rotateRight
     _enableWater
       _rotateLeft
     _instCtrl
     _printString
       _dataCtrl
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _timerDelay

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      7B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3A      43       5       83.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     12      2E       7       57.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      7B      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sat May 25 00:03:14 2024

                          pc 0002                  _rotateRight 0EA9                  __CFG_CP$OFF 0000  
                         fsr 0004                 ___ftadd@exp1 004A                 ___ftadd@exp2 0049  
               ___ftadd@sign 0048                          l111 0D95                          l213 0CB3  
                        l218 0C88                          l146 0038                          l149 003B  
                        l182 0C60                          l190 0E49                          l174 0CE3  
                        l504 0F59                          l194 0EAA                          l186 0DF0  
                        l196 0ED2                          l188 0E16                          l198 0F07  
                        l527 0452                          l498 0F40                          _GIE 005F  
                        _RB1 0031                          _RC0 0038                          _RB2 0032  
                        _RC2 003A                          _RC3 003B                          _RC4 003C  
               __CFG_CPD$OFF 0000                          _ISR 0BAC             checkWaterLevel@i 00CC  
                        _avg 005A      checkWaterLevel@distance 00C8                          fsr0 0004  
                        indf 0000                 ___awmod@sign 0025                 __CFG_FOSC$XT 0000  
    checkWaterLevel@duration 00C6                 __CFG_LVP$OFF 0000                         ?_ISR 0070  
               ___ftdiv@cntr 0032                 ___ftdiv@sign 0037                         l3040 00B3  
                       l3050 012B                         l3130 029C                         l3114 026C  
                       l3054 0148                         l3046 00F5                         l3310 0CDB  
                       l3312 0E41                         l3152 02E7                         l3160 0306  
                       l2530 0F25                         l2610 0C75                         l3090 0219  
                       l3314 0C58                         l3138 02BB                         l2540 0F4F  
                       l2532 0F2A                         l2524 0F12                         l2516 0CA0  
                       l2620 0C15                         l3076 01F6                         l3316 0EFF  
                       l3182 0356                         l2528 0F19                         l2800 042D  
                       l2560 0D24                         l2624 0C39                         l2480 0E3C  
                       l2704 0CB8                         l2538 0F45                         l2562 0D32  
                       l2650 04BB                         l2634 0C51                         l2714 0CD4  
                       l3178 0348                         l2740 0DB9                         l2732 0DB3  
                       l2812 0464                         l2572 0D53                         l2628 0C45  
                       l2708 0CC6                         l3196 038B                         l2742 0DC7  
                       l2750 0DE0                         l2806 0442                         l2590 0D08  
                       l1846 0BFA                         l2728 0DAC                         l2816 0476  
                       l2808 044E                         l2920 060B                         l2904 05BC  
                       l2568 0D48                         l2584 0CEC                         l2680 052E  
                       l2672 050D                         l2754 0DE8                         l2746 0DD5  
                       l2826 0499                         l2770 03DA                         l2842 068F  
                       l2586 0CFA                         l2594 0D13                         l2658 04F0  
                       l2498 0EFA                         l2836 0679                         l2932 0633  
                       l2916 05FB                         l2668 0507                         l2766 03D3  
                       l2694 0541                         l2686 053D                         l2776 03E9  
                       l2864 06F3                         l2856 06D4                         l2880 0E9A  
                       l2928 0623                         l2696 04C6                         l2794 0418  
                       l2698 0589                         l2796 0424                         l2788 0403  
                       l2876 0E73                         l2956 0F8C                         l2798 0429  
                       l2990 0FF7                         l2982 0FDB                         l2974 0FBE  
                       l2984 0FE6                         l2976 0FCE                         l2898 05A6  
                       l2986 0FE9                         STR_1 0765                         STR_2 0770  
                       STR_3 0733                         STR_4 0748                         STR_5 079A  
                       STR_6 07A2                         STR_7 078D                         STR_8 073B  
                       STR_9 078D                         u3035 0DBC                         u3055 0DCD  
                       u3215 0419                         u4007 0ED9                         u3065 0DD6  
                       u4017 0EE5                         u1705 0C03                         u4027 0EF2  
                       u3245 042E                         u3421 0E66                         u4037 0033  
                       u3422 0E67                         u3423 0E6C                         u3424 0E6D  
                       u3185 0404                         u3441 0E8D                         u3442 0E8E  
                       u2715 0F48                         u3275 0443                         u3355 06A1  
                       u3443 0E93                         u2635 0C9E                         u3444 0E94  
                       u3365 06B3                         u3525 060C                         u2645 0CB1  
                       u2805 0D3F                         u3375 06D5                         u3535 0614  
                       u2815 0D49                         u2745 0F60                         u3385 06E6  
                       u3625 0F93                         u2905 0C86                         u2675 0F1E  
                       u3395 06F4                         _PEIE 005E                         u3485 05C8  
                       u2845 0CEF                         u2695 0F39                         u3575 0634  
                       u3495 05DA                         u3655 0FBF                         u2775 0D27  
                       u3735 00B1                         u3585 063C                         u2865 0D00  
                       u3745 00F3                         u2795 0D33                         u2875 0D09  
                       u2955 0524                         u3685 0FDD                         u3917 0DF5  
                       u2895 0C73                         u3927 0E01                         u3785 01FF  
                       u3937 0E0E                         u3947 0E1B                         u3957 0E27  
                       u3967 0E34                         u3977 0EB1                         u3987 0EBD  
                       u3997 0ECA               ?_updateDisplay 0070                 __CFG_WRT$OFF 0000  
                       _main 0D5A                 ___ftpack@arg 0020                 ___ftpack@exp 0023  
                       btemp 007E                __CFG_BOREN$ON 0000                         ltemp 007E  
                       start 0012                         ttemp 007E                         wtemp 007E  
               ___ftmul@cntr 0039                 ___ftmul@sign 003A                        ??_ISR 0070  
               ___fttol@exp1 0058                 ___fttol@lval 0054      __end_of_checkWaterLevel 022F  
                      ?_main 0070              __end_of___ftadd 04B3                        STR_10 073B  
                      STR_11 075D                        STR_20 0762                        STR_12 078D  
                      STR_13 078D                        STR_14 077F                        STR_15 073B  
                      STR_16 073B                        STR_17 076B                __CFG_WDTE$OFF 0000  
                      STR_18 07A8                        STR_19 0762              __end_of___awmod 0DEF  
            __end_of___ftdiv 0719              __end_of___ftneg 0BAC              __end_of___ftmul 0661  
                      _T1CON 0010              __end_of___fttol 1000              __end_of___lwdiv 0D5A  
            __end_of___lwmod 0D1A                        _TMR1H 000F                        _TMR1L 000E  
                      _PORTC 0007                        _PORTD 0008                        _TRISA 0085  
                      _TRISD 0088                __CFG_PWRTE$ON 0000              __end_of_initLCD 0BF8  
            __end_of_initSYS 07FE              __end_of_dpowers 0733                        _index 005D  
                      _empty 0076                ___ftpack@sign 0024                        pclath 000A  
                      ltemp0 007E                        ltemp1 0082                        ltemp2 0086  
                      ltemp3 0080                        ttemp0 007E                        ttemp1 0081  
                      ttemp2 0084                        ttemp3 0087                        ttemp4 007F  
                      status 0003                        wtemp0 007E                        wtemp1 0080  
                      wtemp2 0082                        wtemp3 0084                        wtemp4 0086  
                      wtemp5 0088                        wtemp6 007F              __end_of_sprintf 058E  
            __initialization 0015                 __end_of_main 0DA0                       ??_main 0076  
              ___fttol@sign1 0053         __size_of_enableWater 002D         __end_of_disableWater 0C61  
            ??_updateDisplay 003B             __end_of___ftpack 0F72                       i1l2356 0BB6  
           __end_of___lwtoft 0BDB                       _TMR0IE 005D                       _TMR0IF 005A  
                     _TMR1IE 0460                       _TMR1IF 0060                       _TMR1ON 0080  
                     _TRISB1 0431                       _TRISC0 0438                       _TRISB2 0432  
                     _TRISC1 0439                       _TRISC2 043A                       _TRISC3 043B  
                     _TRISC4 043C             __end_of_dataCtrl 0CB7             _servo_one_status 005F  
                     ___ftge 0E4A                    ??___ftadd 0044                    ??___awmod 0074  
                  ??___ftdiv 002E                    ??___ftneg 0075                    ??___ftmul 0031  
                  ??___fttol 004F                    ??___lwdiv 0074                    ??___lwmod 0075  
            ___awmod@divisor 0020             __end_of_instCtrl 0C8C                       _valve1 00B8  
                     _valve2 00BA             ?_checkWaterLevel 0070              ___awmod@counter 0024  
      ___ftmul@f3_as_product 0036                    ??_initLCD 0074                    ??_initSYS 0076  
                     saved_w 007E  checkWaterLevel@percentValue 00CA                    ??_sprintf 002F  
               ?_printString 0074      __end_of__initialization 0028                   ___ftadd@f1 003E  
                 ___ftadd@f2 0041                   ___ftge@ff1 0020                   ___ftge@ff2 0023  
                 ___ftdiv@f1 002B                   ___ftdiv@f2 0028                   ___ftdiv@f3 0033  
                 ___ftneg@f1 003B                   ___ftmul@f1 002B                   ___ftmul@f2 002E  
                 ___fttol@f1 004B               __pcstackCOMMON 0070                 ?_rotateRight 0074  
                 ___lwtoft@c 0028             _servo_two_status 0061                   __pbssBANK0 005A  
                 __pbssBANK1 00A0     updateDisplay@seconds_str 003C                   __pmaintext 0D5A  
                    ?___ftge 0020                   __pintentry 0004                    ?___ftpack 0020  
                  ?___lwtoft 0028        __size_of_disableWater 0029                    ?_dataCtrl 0070  
                 _collection 00A0                   __stringtab 0719                    ?_instCtrl 0070  
               _disableWater 0C38              __size_of___ftge 005F                      ___ftadd 03AA  
                    ___awmod 0DA0                      ___ftdiv 0661                      ___ftneg 0BA2  
                    ___ftmul 058E                      ___fttol 0F72                      ___lwdiv 0D1A  
                    ___lwmod 0CE4                   ??___ftpack 0025                      __ptext1 022F  
                    __ptext2 0BF8                      __ptext3 0CB7                      __ptext4 0DEF  
                    __ptext5 07AD                      __ptext6 0C38                      __ptext7 0EA9  
                    __ptext8 0BDB                      __ptext9 002C                   ??___lwtoft 0074  
                    _initLCD 0BDB                 __size_of_ISR 0017                      _initSYS 07AD  
                    _dpowers 0729                   ??_dataCtrl 0074             ___awmod@dividend 0022  
                    _seconds 0078                      _sprintf 04B3                      clrloop0 0B9B  
       end_of_initialization 0028                   ??_instCtrl 0074         __size_of_printString 0023  
                 _timerDelay 0BF8         __size_of_rotateRight 005F                ??_enableWater 0076  
                 _rotateLeft 0DEF                _schedulerFlag 00B6        __end_of_updateDisplay 03AA  
               instCtrl@inst 0020                  ___ftdiv@exp 0036                  ___ftmul@exp 0035  
             __end_of___ftge 0EA9          start_initialization 0015                  __end_of_ISR 0BC3  
   __size_of_checkWaterLevel 0203          __end_of_enableWater 0CE4                 dataCtrl@data 0020  
                   ??___ftge 0026                  ?_timerDelay 0070            __size_of___ftpack 006A  
                __pbssCOMMON 0076                    ___latbits 0002            __size_of___lwtoft 0018  
              __pcstackBANK0 0020                __pcstackBANK1 00BC          __end_of__stringdata 07AD  
                ?_rotateLeft 0074            __size_of_dataCtrl 002B         disableWater@servoPin 0023  
                sprintf@_val 0035                  sprintf@flag 0033                  sprintf@prec 0034  
           ___lwdiv@dividend 0022            __size_of_instCtrl 002B                     ?___ftadd 003E  
                   ?___awmod 0020                     ?___ftdiv 0028                     ?___ftneg 003B  
                   ?___ftmul 002B                     ?___fttol 004B                     ?___lwdiv 0020  
                   ?___lwmod 0027                    __pstrings 0719                     ?_initLCD 0070  
                   ?_initSYS 0070                  _enableWater 0CB7                    _countflag 00B4  
                  dataCtrl@i 0021             ___lwdiv@quotient 0025                     ?_sprintf 002C  
        __size_of_timerDelay 001D            interrupt_function 0004            ??_checkWaterLevel 0059  
                  clear_ram0 0B9A          __size_of_rotateLeft 005B                  __stringbase 0728  
                __stringdata 0733    checkWaterLevel@percentage 00BC                ??_printString 0076  
          printString@string 0074         timerDelay@localClock 0074                ??_rotateRight 0020  
           __size_of___ftadd 0109             __size_of___awmod 004F             __size_of___ftdiv 00B8  
           __size_of___ftneg 000A             __size_of___ftmul 00D3             __size_of___fttol 008E  
                  instCtrl@i 0021             __size_of___lwdiv 0040             __size_of___lwmod 0036  
                   ___ftpack 0F08           __end_of__stringtab 0729                     ___lwtoft 0BC3  
                   _dataCtrl 0C8C             __size_of_initLCD 001D             __size_of_initSYS 0051  
            ___lwdiv@divisor 0020              ___lwdiv@counter 0024                     __ptext10 04B3  
                   __ptext11 0CE4                     __ptext20 0E4A                     __ptext12 0D1A  
                   __ptext21 0661                     __ptext13 0C15                     __ptext22 03AA  
                   __ptext14 0C8C                     __ptext23 0F08                     __ptext15 0C61  
                   __ptext24 0DA0                     __ptext16 0BC3                     __ptext25 0BAC  
                   __ptext17 0F72                     __ptext18 0BA2                     __ptext19 058E  
        rotateRight@servoPin 0074           rotateLeft@servoPin 0074             __size_of_sprintf 00DB  
              __size_of_main 0046                     _instCtrl 0C61          __end_of_printString 0C38  
               ??_timerDelay 0074       __size_of_updateDisplay 017B          __end_of_rotateRight 0F08  
               ??_rotateLeft 0020                     intlevel1 0000                    sprintf@ap 0032  
                  sprintf@sp 0039             ___lwmod@dividend 0029           __end_of_timerDelay 0C15  
                  stringcode 0723          enableWater@servoPin 0023                ?_disableWater 0023  
         __end_of_rotateLeft 0E4A                   _OPTION_REG 0081                     sprintf@c 003A  
                   sprintf@f 002C                 ?_enableWater 0023              ___lwmod@divisor 0027  
            ___lwmod@counter 002B                     stringdir 0723                     stringtab 0719  
            _checkWaterLevel 002C                  _printString 0C15                _updateDisplay 022F  
             ??_disableWater 0076  
